<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Commonly Used Commands in Linux</title>
      <link href="/posts/da9ed956/"/>
      <url>/posts/da9ed956/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh Tunnel</title>
      <link href="/posts/85f67f4e/"/>
      <url>/posts/85f67f4e/</url>
      
        <content type="html"><![CDATA[<ul><li>Command<br><code>ssh -N -L 9999:192.168.56.102:8080 user@192.168.56.11</code><br><code>ssh -N -L 0.0.0.0:9999:192.168.56.102:8080 user@192.168.56.11</code><br><img src="/posts/85f67f4e/image01.png" alt></li></ul><ol><li>proxy server: <a href="mailto:user@192.168.56.11" target="_blank" rel="noopener">user@192.168.56.11</a></li><li>remote server application: 192.168.56.102:8080</li><li>on local PC: You can access 192.168.56.102:8080 via <a href="mailto:user@192.168.56.11" target="_blank" rel="noopener">user@192.168.56.11</a> on localhost <a href="http://localhost:9999" target="_blank" rel="noopener">http://localhost:9999</a></li></ol><ul><li>reference<br><a href="https://blog.rex-tsou.com/2017/10/%E5%88%A9%E7%94%A8-ssh-tunnel-%E5%81%9A%E8%B7%B3%E6%9D%BFaka.-%E7%BF%BB%E7%89%86/" target="_blank" rel="noopener">https://blog.rex-tsou.com/2017/10/%E5%88%A9%E7%94%A8-ssh-tunnel-%E5%81%9A%E8%B7%B3%E6%9D%BFaka.-%E7%BF%BB%E7%89%86/</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Fluent Terminal</title>
      <link href="/posts/10ad64df/"/>
      <url>/posts/10ad64df/</url>
      
        <content type="html"><![CDATA[<ul><li>Using Python on Fluent Terminal - CMD</li></ul><ol><li>手動設定 Path for Python<br><img src="/posts/10ad64df/image01.png" alt></li><li>使用 virtualenv 的方式<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\User\python&gt; venv\Scripts\activate.bat</span><br><span class="line"></span><br><span class="line">(venv) C:\Users\User\python&gt;</span><br></pre></td></tr></table></figure></li></ol><ul><li>Using Python on Fluent Terminal - Power Shell</li></ul><ol><li>手動設定 Path for Python</li><li>使用 virtualenv 的方式<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\User\python&gt; venv\Scripts\activate.ps1</span><br><span class="line">(venv) PS C:\Users\User\python&gt;</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>整合 cmder<br><img src="/posts/10ad64df/image03.png" alt></p></li><li><p>Trouble Shooting</p></li></ul><ol><li>Power Shell 預設不能執行某些命令<br><img src="/posts/10ad64df/image02.png" alt><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\User\python&gt; Get-ExecutionPolicy</span><br><span class="line">Restricted</span><br></pre></td></tr></table></figure>要將值改成 RemoteSigned<br>以系統管理員身分執行 Power Shell<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Windows\system32&gt; Set-ExecutionPolicy RemoteSigned</span><br><span class="line"></span><br><span class="line">執行原則變更</span><br><span class="line">執行原則有助於防範您不信任的指令碼。如果變更執行原則，可能會使您接觸到 about_Execution_Policies 說明主題 (網址為</span><br><span class="line">https:/go.microsoft.com/fwlink/?LinkID=135170) 中所述的安全性風險。您要變更執行原則嗎?</span><br><span class="line">[Y] 是(Y)  [A] 全部皆是(A)  [N] 否(N)  [L] 全部皆否(L)  [S] 暫停(S)  [?] 說明 (預設值為 &quot;N&quot;): y</span><br><span class="line">PS C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> FluentTerminal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FluentTerminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python note</title>
      <link href="/posts/2a024bae/"/>
      <url>/posts/2a024bae/</url>
      
        <content type="html"><![CDATA[<ul><li><p>dec to hex string，若少於 2 位數，補 0<br>hex =’{:02x}’.format(A)</p></li><li><p>dec to bin string，若少於 16 位數，補 0<br>bin =’{:016b}’.format(B)</p></li><li><p>bin string to 2’sc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">two2dec</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> s[<span class="number">0</span>] == <span class="string">'1'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span> * (int(<span class="string">''</span>.join(<span class="string">'1'</span> <span class="keyword">if</span> x == <span class="string">'0'</span> <span class="keyword">else</span> <span class="string">'0'</span> <span class="keyword">for</span> x <span class="keyword">in</span> s), <span class="number">2</span>) + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> int(s, <span class="number">2</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matlab note</title>
      <link href="/posts/db30bcc7/"/>
      <url>/posts/db30bcc7/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.mathworks.com/help/matlab/matlab_prog/matlab-operators-and-special-characters.html" target="_blank" rel="noopener">https://www.mathworks.com/help/matlab/matlab_prog/matlab-operators-and-special-characters.html</a><br><code>.&#39;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A=[1 2]</span><br><span class="line">A=A.&apos;</span><br><span class="line">[output]</span><br><span class="line">A =</span><br><span class="line">   1   2</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line">   1</span><br><span class="line">   2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matplotlib note</title>
      <link href="/posts/9ebec7b8/"/>
      <url>/posts/9ebec7b8/</url>
      
        <content type="html"><![CDATA[<ul><li><p>設定 figure resolution<br><code>plt.figure(figsize=(10, 10), dpi=160)</code><br>=&gt; resolution is 1600x1600</p></li><li><p>隱藏軸標籤和座標軸<br>ax = plt.gca()<br>ax.axes.xaxis.set_visible(False)<br>ax.axes.yaxis.set_visible(False)</p></li><li><p>隱藏座標軸<br>ax = plt.gca()<br>ax.axes.xaxis.set_ticks([])<br>ax.axes.yaxis.set_ticks([])</p></li><li><p>隱藏軸標籤<br>ax = plt.gca()<br>ax.axes.xaxis.set_ticklabels([])<br>ax.axes.yaxis.set_ticklabels([])</p></li><li><p>將坐標軸的刻度用科學計數標記</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ax = plt.gca()</span><br><span class="line">ax.ticklabel_format(style=&apos;sci&apos;, scilimits=(0, 0), axis=&apos;y&apos;)</span><br><span class="line">ax.yaxis.major.formatter._useMathText = True</span><br></pre></td></tr></table></figure><p>scilimits=(-1,2) 表示對 10^-1 ~ 10^2 範圍之外的數值進行科學計數轉換，範圍內的不換</p></li><li><p>waveform</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">fs=<span class="number">4000</span></span><br><span class="line">Ts=<span class="number">1</span>/fs</span><br><span class="line">f0=<span class="number">10</span></span><br><span class="line">A=math.sqrt(<span class="number">2</span>)</span><br><span class="line">N=<span class="number">1024</span></span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">0</span>,N<span class="number">-1</span>,<span class="number">10</span>)   <span class="comment"># start,stop,step</span></span><br><span class="line">y = A*np.sin(<span class="number">2</span>*np.pi*f0*Ts*x)</span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.show() <span class="comment"># show the image</span></span><br></pre></td></tr></table></figure><p><img src="/posts/9ebec7b8/image_01.png" alt></p></li><li><p>Trouble Shooting</p></li></ul><ol><li><code>OverflowError: Exceeded cell block limit (set &#39;agg.path.chunksize&#39; rcparam)</code><br>當要處理的數據太多，必須手動設定 chunksize<br><code>plt.rcParams[&#39;agg.path.chunksize&#39;] = 100000</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Access ssh without input password</title>
      <link href="/posts/e729699d/"/>
      <url>/posts/e729699d/</url>
      
        <content type="html"><![CDATA[<p>在 windown 下使用 ssh/scp 時，不需要輸入密碼</p><ol><li><p>generate key in windows</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\User&gt;ssh-keygen -t rsa</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (C:\Users\User/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in C:\Users\User/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in C:\Users\User/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:u7s0Cq8ljGfhuNonSa7CwLAxvyk9ebR8FFIitHGbeHk user@DESKTOP-A88C5KQ</span><br><span class="line">The key&apos;s randomart image is:</span><br><span class="line">+---[RSA 3072]----+</span><br><span class="line">| .o .            |</span><br><span class="line">|  .=.+.          |</span><br><span class="line">|  o.=oE          |</span><br><span class="line">|+  ....          |</span><br><span class="line">|o=  .. .S        |</span><br><span class="line">|o.o=...  .       |</span><br><span class="line">|o+oBBo. +        |</span><br><span class="line">|ooX+==.o o       |</span><br><span class="line">|++o=.oo +o       |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure></li><li><p>將 id_rsa.pub 內容複製進 linux ~/.ssh/authorized_keys</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\User&gt; cat .ssh/id_rsa.pub</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDFTdfNrQFk+pnyFUpYlI9DjxcqgYhwaK1kPwKULW6qthMZ1331a/cczktzYGiRVDRa6AEdAAMdINi3Vw2tmfxAYOYGQA0GvRExTDQo+txWJlC6ZTQqrXgnDDldI9yDtlkOGFcUfvW6G/VVS0qdM1W5yN3hGHtGjccpsn/zal4dWFRuYv/b4iSLbcxtJG5tV5yEwqCA0da2QdT8NabKtcEi0D7N7V+ZWemlEnYZtGKHjAb25Lbk26wYFDHakCL1k75CloGPXoSp0M9smXLQ0d8MBbCJssQdMhQS4EHaeoihpHYB6dX66+wDPXvVv4gZOPpexOo64es9Uuz7RD5YxYIdlDFsH4LgJGUm7pC4BI1T618xlicc83VF7f2ElR5hSUROMWYld+MDlqAn4nftQyInzCXQsyAyRdq1mzbRKa7UvGiCmEdKUl+pj25+RjScTb7IWTqXXUCATcPmtg11B7AznnS5RkhvigXHGUH03X1HBHUtnI78frI+1/R6tjuesps= user@DESKTOP-A88C5KQ</span><br></pre></td></tr></table></figure></li></ol><ul><li>.ssh 資料夾的權限必須是 0700</li><li>authorized_keys 檔案的權限必須是 0600</li><li>兩台機器 A、B 要溝通，在 A 上建立 public key and private key，然後將 public key 給 B，如此便能進行加密溝通</li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>network</title>
      <link href="/posts/608487bc/"/>
      <url>/posts/608487bc/</url>
      
        <content type="html"><![CDATA[<p>Layer 1，實體層（Physical Layer）<br>通常可以透過檢查網路孔上的燈號，判斷是否正常</p><p>Layer 2，資料連結層（Data Link Layer）<br>在區網內部主要是透過Media Access Control(MAC) 達到資料轉送跟交換<br>電腦或任何網路設備開機時，只要第一次發出封包，就會被對連交換器記下所屬的 MAC，內網內其他的設備要跟其溝通時，最終會先找到 MAC 才開始進行溝通、傳送</p><p>ping 過 172.18.73.132 之後，就可以看到本機端會發現 172.18.73.132 的 MAC，並記錄下來<br>$ ping 172.18.73.132<br>$ arp -a</p><p>介面: 172.18.73.168 — 0x14<br>  網際網路網址          實體位址               類型<br>  172.18.73.132         28-c1-3c-8f-c8-51     動態<br>  172.18.73.254         9c-4e-20-bf-a1-ca     動態<br>  172.18.73.255         ff-ff-ff-ff-ff-ff     靜態</p><p>Layer 3，網路層（Network Layer）<br>Layer 4，傳輸層（Transport Layer）<br>Layer 5，會議層（Session Layer）<br>Layer 6，展示層（Presentation Layer）<br>Layer 7，應用層（Application Layer）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Prompt</title>
      <link href="/posts/6543690e/"/>
      <url>/posts/6543690e/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cyberciti.biz/tips/howto-linux-unix-bash-shell-setup-prompt.html" target="_blank" rel="noopener">https://www.cyberciti.biz/tips/howto-linux-unix-bash-shell-setup-prompt.html</a></p><ul><li>預設 Prompt<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# echo $PS1</span><br><span class="line">[\u@\h \W]\$</span><br></pre></td></tr></table></figure></li><li>format<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\d：當前日期，以「週 月 日」的格式顯示</span><br><span class="line">\D&#123;format&#125;：當前日期，可指定格式，例如 「\D&#123;%Y-%m-%d&#125;」</span><br><span class="line">\t：當前時間，以 24 小時時制顯示</span><br><span class="line">\u：使用者名稱</span><br><span class="line">\W：當前資料夾名稱</span><br><span class="line">\w：當前路徑</span><br><span class="line">\h：主機名稱 (Host Name)&#125;</span><br></pre></td></tr></table></figure></li><li>用指令取得動態資訊<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ export PS1=&quot;\$(date +%d.%m.%Y) [\u@\h \W]# &quot;</span><br></pre></td></tr></table></figure></li><li>顏色標記<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ export PS1=&quot;[\e[0;31m\u\e[m@\h \W]# &quot;</span><br><span class="line">$ export PS1=&quot;[\[\e[0;31m\]\u\[\e[m\]@\h \W]# &quot;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sed</title>
      <link href="/posts/fba335b8/"/>
      <url>/posts/fba335b8/</url>
      
        <content type="html"><![CDATA[<ul><li>Reference<br><a href="https://linuxhint.com/50_sed_command_examples/" target="_blank" rel="noopener">https://linuxhint.com/50_sed_command_examples/</a><br><a href="http://shyuanliang.blogspot.com/2013/05/sed.html" target="_blank" rel="noopener">http://shyuanliang.blogspot.com/2013/05/sed.html</a></li></ul><ol><li>[:alnum:] 代表英文大小寫字元及數字，亦即 0-9, A-Z, a-z</li><li>[:alpha:] 代表任何英文大小寫字元，亦即 A-Z, a-z</li><li>[:blank:] 代表空白鍵與 [Tab] 按鍵兩者</li><li>[:cntrl:] 代表鍵盤上面的控制按鍵，亦即包括 CR, LF, Tab, Del.. 等等</li><li>[:digit:] 代表數字而已，亦即 0-9</li><li>[:graph:] 除了空白字元 (空白鍵與 [Tab] 按鍵) 外的其他所有按鍵</li><li>[:lower:] 代表小寫字元，亦即 a-z</li><li>[:print:] 代表任何可以被列印出來的字元</li><li>[:punct:] 代表標點符號 (punctuation symbol)，亦即：” ‘ ? ! ; : # $…</li><li>[:upper:] 代表大寫字元，亦即 A-Z</li><li>[:space:] 任何會產生空白的字元，包括空白鍵, [Tab], CR 等等</li><li>[:xdigit:] 代表 16 進位的數字類型，因此包括： 0-9, A-F, a-f 的數字與字元</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">replace the first match</span><br><span class="line"># echo &quot;Bash Bash Scripting Language&quot; | sed &apos;s/Bash/Perl/&apos;</span><br><span class="line">Perl Bash Scripting Language</span><br><span class="line"></span><br><span class="line">g: replace all occurrences</span><br><span class="line">g2: replace the second match    </span><br><span class="line"># echo &quot;Bash Bash Scripting Language&quot; | sed &apos;s/Bash/Perl/g&apos;</span><br><span class="line">Perl Perl Scripting Language</span><br><span class="line"></span><br><span class="line">在 abc 後加上 123</span><br><span class="line"># echo &quot;abcefg&quot; | sed &apos;s/abc/&amp;123/g&apos;</span><br><span class="line">abc123efg</span><br><span class="line"></span><br><span class="line">在 abc 前加上 123</span><br><span class="line"># echo &quot;abcefg&quot; | sed &apos;s/abc/123&amp;/g&apos;</span><br><span class="line">123abcefg</span><br><span class="line"></span><br><span class="line">\(.*\) =&gt; 取得字串</span><br><span class="line">\1 =&gt; 印出第一個取得的字串</span><br><span class="line"># echo &quot;Bash language&quot; | sed &apos;s/Bash\(.*\)/Shell script\1/&apos;</span><br><span class="line">Shell script language</span><br><span class="line"></span><br><span class="line">把 Bash 替換成 Learn Bash programming</span><br><span class="line"># echo &quot;Bash language&quot; | sed &apos;s/\(Bash\)/Learn \1 programming/&apos;</span><br><span class="line">Learn Bash programming language</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">//file</span><br><span class="line">CSE - Count</span><br><span class="line">EEE - Count</span><br><span class="line">Civil - Count</span><br><span class="line"></span><br><span class="line"># sed  -e &apos;/CSE/ s/Count/100/; /EEE/ s/Count/70/;&apos; file</span><br><span class="line">CSE - 100</span><br><span class="line">EEE - 70</span><br><span class="line">Civil - Count</span><br><span class="line"># sed -i -e &apos;/CSE/! s/Count/80/;&apos; file</span><br><span class="line">CSE - Count</span><br><span class="line">EEE - 80</span><br><span class="line">Civil - 80</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">刪除空白行</span><br><span class="line"># sed &apos;/^$/d&apos; file</span><br><span class="line"></span><br><span class="line"># echo hgdfjg678gfdg kjg45nn | sed &apos;s/[^0-9]//g&apos;</span><br><span class="line">67845</span><br><span class="line"></span><br><span class="line"># echo &quot;hgdfjg678gfdg kjg45nn&quot; | sed &apos;s/[^[:digit:]]//g&apos;</span><br><span class="line">67845</span><br><span class="line"></span><br><span class="line"># echo hgdfjg678gfdg kjg45nn | sed &apos;s/[0-9]//g&apos;</span><br><span class="line">hgdfjggfdg kjgnn</span><br><span class="line"></span><br><span class="line"># echo &quot;hgdfjg678gfdg kjg45nn&quot; | sed &apos;s/[[:digit:]]//g&apos;</span><br><span class="line">hgdfjggfdg kjgnn</span><br><span class="line"></span><br><span class="line">在搜尋到 Hello 的那一行後加上 !!</span><br><span class="line"># echo &quot;Hello World&quot; | sed &apos;/Hello/ s/$/ !!/&apos;</span><br><span class="line">Hello World !!</span><br><span class="line"></span><br><span class="line">在搜尋到 Hello 的那一行前加上 !!</span><br><span class="line"># echo &quot;Hello World&quot; | sed &apos;/Hello/ s/^/ !!/&apos;</span><br><span class="line"> !!Hello World</span><br><span class="line"></span><br><span class="line">在搜尋到 Hello 的那一行除外，加上 !!</span><br><span class="line">sed &apos;/Hello/! S/$/ !!/&apos;</span><br><span class="line"></span><br><span class="line">刪除所有不包含 Hello 的 line</span><br><span class="line"># sed -i &apos;/Hello/!d&apos; test</span><br><span class="line"></span><br><span class="line"># echo &quot;Kaniz Fatema,30th,batch&quot; | sed &quot;s/,/\n/g&quot;</span><br><span class="line">Kaniz Fatema</span><br><span class="line">30th</span><br><span class="line">batch</span><br><span class="line"></span><br><span class="line">i =&gt; 不分大小寫</span><br><span class="line"># echo &quot;I like bash programming&quot; | sed &apos;s/Bash/PHP/i&apos;</span><br><span class="line">I like PHP programming</span><br><span class="line"></span><br><span class="line"># echo &quot;Hello World&quot; | sed &apos;s/\(hello\)/\U\1/Ig&apos;</span><br><span class="line">HELLO World</span><br><span class="line"></span><br><span class="line"># echo &quot;Hello World&quot; | sed &apos;s/\(hello\)/\L\1/Ig&apos;</span><br><span class="line">hello World</span><br><span class="line"></span><br><span class="line"># echo &quot;Hello World&quot; | sed  &apos;s/\(.*\)/\U\1/&apos;</span><br><span class="line">HELLO WORLD</span><br><span class="line"></span><br><span class="line"># echo &quot;Hello World&quot; | sed  &apos;s/\(.*\)/\L\1/&apos;</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><ul><li>刪除 file 中，所有 # 開頭的行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;/^#/d&quot; file</span><br></pre></td></tr></table></figure></li></ul><h1 id="列出第-n-行的結果"><a href="#列出第-n-行的結果" class="headerlink" title="列出第 n 行的結果"></a>列出第 n 行的結果</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls -l | sed -n &apos;np&apos;</span><br><span class="line">ls -l | sed -n &apos;2p&apos;</span><br><span class="line">ls -l | sed -n &apos;3p&apos;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> shell script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux_commands</title>
      <link href="/posts/78a715c/"/>
      <url>/posts/78a715c/</url>
      
        <content type="html"><![CDATA[<ol start="0"><li><p>ubuntu版本<br>lsb_release -a</p></li><li><p>pwd // 看目前所在目錄的路徑</p></li><li><p>mount<br>  mount -t smbfs -o username=”nick.cheng”,password=”123456” //172.16.66.24/public /mnt/sda1<br>  umount /mnt/nick</p><p>  mount -t smbfs -o -I 172.16.66.24 -N ‘//msbn7835/public’ /mnt/nick<br>  mount -t smbfs -o //172.16.66.24/public /mnt/nick<br>  mount -t ntfs //172.16.66.24/public /mnt/nick<br>  mount -t ntfs //msnb7835/public /mnt/nick</p><p>  mount -t nfs -o nolock 172.16.40.25:/home/ssg /mnt/ssg<br>  mount -t nfs -o nolock swhcsvr16:/home/nick.cheng /mnt/sda1<br>  mount -t nfs -o nolock 172.16.40.25:/public /mnt/sda1<br>  mount -t nfs -o nolock 172.16.40.25:/home/nick.cheng /mnt/sda1</p><p>  mount -t nfs username=”nick.cheng”,password=”123456” 172.16.40.25:/public /mnt/sda1<br>  mount -t nfs -o nolost 172.16.40.25:/public /mnt/sda1</p><p>  *在ubuntu下mount server<br>  mount -t cifs //192.168.210.173/sis4990 /home/cyc/sisvnc02/ -o user=sis4990 -o password=123456</p><p>  利用 mount 指令解決 Read-only file system 問題<br>  mount -o remount,rw /</p><p>  格式：mount  -t  檔案系統類型  -o 選項  裝置  掛入點</p><p>  mount -t nfs -o nolock 172.16.66.29:/home/nick.cheng/ /home<br>  mount -t nfs -o nolock 172.16.66.29:/home/nick.cheng/SC1.2_testcase/ /usb/sda1<br>  mount -t vfat -o ro /dev/block/mmcblk1p1 /storage/sdcard1<br>  mount -t vfat -o rw /dev/block/mmcblk1p1 /storage/sdcard1</p><p>  umount /mnt/media_rw/usbdrive/A<br>  mount -t ntfs /dev/block/sda /mnt/media_rw/usbdrive/B</p><p>  mount –t vfat /dev/block/sda1  /mnt/usb_test   ( 如果Partition Type為 FAT32)<br>  mount –t tntfs /dev/block/sda1  /mnt/usb_test   ( 如果Partition Type為 NTFS)</p></li><li><p>時區設定, time<br>  vi /etc/sysconfig/clock  時區設定<br>  ZONE=”Asia/Taipei”</p><p>  改時區<br>  1) vi /etc/sysconfig/clock</p><pre><code>ZONE=&quot;Europe/Luxembourg&quot;ZONE=&quot;Asia/Taipei&quot;</code></pre><p>  2) cp /usr/share/zoneinfo/Asia/Taipei /etc/localtime</p><pre><code>cp /usr/share/zoneinfo/Europe/Luxembourg /etc/localtime</code></pre><p>  hwclock -r //讀取BIOS時間<br>  hwclock -w //將軟體時間寫入BIOS</p><p>  在板子上設定時間&amp;時區<br>  1)mount -o remount, rw /   -&gt;將/etc改成r/w<br>  2)mount -t nfs -o nolock 172.16.66.156:/home/nick.cheng /home<br>  3)cp /home/localtime /etc<br>  4)ntpdate clock.stdtime.gov.tw</p></li></ol><pre><code> *Generic procedure to change timezoneChange directory to /etc# cd /etcCreate a symlink to file localtime:# ln -sf /usr/share/zoneinfo/EST localtime *Use of environment variableYou can use TZ environment variable to display date and time according to your timezone:$ export TZ=America/Los_Angeles$ date</code></pre><ol start="4"><li><p>read file<br>  cat  由第一行開始顯示檔案內容<br>  tac  從最後一行開始顯示，可以看出 tac 是 cat 的倒著寫！<br>  nl   顯示的時候，順道輸出行號！<br>  more 一頁一頁的顯示檔案內容<br>  less 與 more 類似，但是比 more 更好的是，他可以往前翻頁！<br>  head 只看頭幾行<br>  tail 只看尾巴幾行<br>  od   以二進位的方式讀取檔案內容！</p></li><li><p>grep<br>  grep -inr DeviceDemodCreate *<br>  grep -inr DeviceDemodCreate *  | grep t12<br>  vi pcb/device_pcb_t12_116A.cpp<br>  grep -inr IspProcFlash *<br>  vi demodulator/device_demodulator_msb123x_extend.cpp<br>  make ui image_all<br>  cat /etc/issue</p><p>  grep “CURRENT HEAP” 2315.log // 在檔案2315.log中搜尋字串CURRENT HEAP<br>  grep ‘&lt;Cached&gt;‘ 2315.log   // 在檔案2315.log中限定搜尋字串Cached</p><p>  ps aux|grep server|grep -v grep | awk ‘{print $2}’|xargs kill -9</p><p>  -r: current目錄下的所有子目錄都會search<br>  -i: 不區分大小寫<br>  -n: 列出line number<br>  rpm -qa | grep faca | while read line ; do echo “$line” ; done</p></li></ol><ol start="6"><li><p>line number in vi<br>  To display line numbers along the left side of a window, type any one of the following:</p><pre><code>:set number</code></pre><p>  or</p><pre><code>:set nu</code></pre><p>  To turn off line number again enter the same command:</p><pre><code>:set nu!:set nonu</code></pre><p>  If you need number every time you start vi/vim, append following line to your ~/.vimrc file:</p><pre><code>set number</code></pre><p>  set warp! //設定不斷行顯示</p></li><li><p>bashrc<br>  1)把檔案/etc/skel/.bashrc複制到/users/nick.cheng<br>  每次登入時先讓設定好的bashrc生效==&gt;source ~/.bashrc</p><p>  2)直接create file<br>  vi ~/.bashrc</p><h1 id="Source-global-definitions"><a href="#Source-global-definitions" class="headerlink" title="Source global definitions"></a>Source global definitions</h1><p> if [ -f /etc/bashrc ]; then</p><pre><code>. /etc/bashrc</code></pre><p> fi</p><p> #User specific aliases and functions<br> HOME=/home/nick.cheng<br> export PATH=$PATH:/tools/mips-4.3-51/mips-4.3/bin:/tools/cmake/i686/cmake-2.8.0/bin/</p><p> #PS1=’[\033[1m]\u@\h \w$[\033[0m]‘<br> PS1=’[\033[1;33m]\u@\h:[\033[m][\033[01;34m]\W $ [\033[m]‘</p><p>  source ~/.bashrc</p><p> 3)設定~/.bash_profile</p><h1 id="Source-global-definitions-1"><a href="#Source-global-definitions-1" class="headerlink" title="Source global definitions"></a>Source global definitions</h1><p>if [ -f $HOME/.bashrc ]; then</p><pre><code>. $HOME/.bashrc</code></pre><p>fi</p><pre><code>login的時候會自動執行~/.bash_profile</code></pre></li><li><p>tar<br> 壓縮 // 把資料夾 test 壓起來，生成 test.tar<br> tar -cf test.tar test<br> tar -czf test.tar.gz test<br> tar -czf test.tgz test<br> tar -cjf test.tar.bz2 test<br> 解壓縮 // 解壓縮放到test去<br> tar -xf test.tar -C test<br> tar -xzf test.tar.gz -C test<br> tar -xzf test.tgz -C test<br> tar -xjf test.tar.bz2 -C test</p></li><li><p>gdb<br> g++ -g test.cpp -o test // compile</p><ol><li>gdb //進入</li><li>file test //指定除錯file, 1+2 = gdb ./test</li><li>run //執行</li><li>list //列出code, l-&gt;下一段</li><li>break num //設定中斷點在第num行</li><li>info break //檢查目前中斷點設定</li><li>display x //在執行每一行後都顯示x的值</li><li>next //設定完break並執行時, 執行下一行</li></ol></li></ol><pre><code>run (r) -- 開始執行程式continue (c) -- 離開中斷點，繼續執行程式next (n) -- 單步執行 (step over)step (s) -- 進入函式 (step into)until (u) -- 離開 while, for等迴圈。 執行到程式碼的行數比目前的大，如果目前是迴圈的最後一行，就會離開迴圈finish -- 繼續執行程式直到函式返回start --在 main 設置暫時中斷點，並開始執行程式advance -- 執行程式直到指定的位置run arglist -- 同 run，並指定程式參數start arglist -- 同 start，並指定程式參數kill (k) --終止程式執行quit (q) --離開 GDB</code></pre><p>10.檔案容量<br>    df: 用來察看硬碟空間的指令<br>     du: 用來察看目錄內所有檔案使用掉的空間的情況</p><pre><code>du -sh nick.cheng -a  ：列出所有的檔案與目錄容量，因為預設僅統計目錄底下的檔案量而已。-h  ：以人們較易讀的容量格式 (G/M) 顯示；-s  ：列出總量而已，而不列出每個各別的目錄佔用容量；-S  ：不包括子目錄下的總計，與 -s 有點差別。-k  ：以 KBytes 列出容量顯示；-m  ：以 MBytes 列出容量顯示； df -h ls -l | grep ^d | awk &apos;{print $9}&apos; | xargs du -sh | sort -n</code></pre><p>11.AWK<br>    grep “CURRENT HEAP” 1201.log | awk ‘{print $5}’ &gt; heap.txt<br>    grep ‘&lt;Cached&gt;‘ 1201.log | awk ‘{print $2}’ &gt; cache.txt<br>    grep ‘&lt;MemFree&gt;‘ 1201.log | awk ‘{print $2}’ &gt; Free.txt<br>    grep ‘&lt;before collect objectCount&gt;‘ 1201.log | awk ‘{print $7}’ &gt; JSHeap_free.txt<br>    grep ‘&lt;before collect objectCount&gt;‘ 1201.log | awk ‘{print $6}’ &gt; JSHeap_size.txt<br>    grep ‘&lt;before collect objectCount&gt;‘ 1201.log | awk ‘{print $5}’ &gt; JSHeap_obj_count.txt<br>    grep “Number of Nodes:” 1201.log | awk ‘{print $4}’ &gt; node.txt<br>    cat /proc/meminfo | grep MemFree | awk ‘{print $2}’<br>    cat /proc/meminfo | grep -w ‘MemFree|Cached’ | awk ‘{print $1  $3}’<br>    awk -F”:” ‘{ print $1 “ “ $3 }’ /etc/passwd<br>    cat /proc/meminfo | awk ‘/MemFree/ &amp;&amp; /Cached/‘</p><p>12.include and library<br>    gcc sin.c -lm -L/lib -L/usr/lib  // -L/path<br>     gcc sin.c -lm -I/usr/include     // -I/path</p><p>13.checn gcc version<br>    gcc -v</p><p>14.sync<br>    當資料被讀取到memory後，若檔案有修改，並不會即時將檔案寫回硬碟<br>     執行sync指令，會強制將目前memory中的資料，寫回硬碟</p><p>15.find<br>     find . -iname filename //i: 不分大小寫<br>     find -iname MSrv_Control_common.cpp<br>     find -name MSrv_Control_common.cpp<br>     find . -name <em>.o -exec cp -rf {} ./tmp ; // 將找到的檔案全部copy到tmp下<br>     find . -iname <strong>pycache</strong> -exec rm -rf {} ;<br>     find . -type f -exec dos2unix {} ;<br>     find . -iname “</em>.sh” -print0 | xargs -0 grep libjpeg_old -n</p><p>16.alias<br>    alias ll=”ls -al”</p><p>17.<br>            u(user)       +(加入)     r<br>    chmod   g(group)      -(除去)     w      file or folder<br>            o(others)     =(設定)     x<br>            a(all)<br>     e.g. chmod u+wx -R DAILEO //將DAILEO目錄的user權限加入wx, 並且遞迴(-R)設定DAILEO內所有檔案及資料夾</p><p>18.su<br>    su可以讓目前使用者的shell暫停，轉換成另一個user與group，並重新執行起一個新shell<br>    感覺上就好像暫時變成了另外一個帳號，再執行exit時，就可變回本尊<br>     -l: 模擬一個全新的login，所有的環境變數全部重新設定<br>     -m: 除了變成另一個帳號外，所有的環境都不變，目錄不變，環境變數也不變</p><pre><code>su //預設是切換到rootsu username //切換到username帳號sudo su //切換到root</code></pre><p>19.Makefile<br>    := 會將整個 Makefile 展開後，再決定變數的值<br>     ?= 若變數未定義，則替它指定新的值，否則，採用原有的值<br>     += 聯集<br>     @：不要顯示執行的指令<br>     -：表示即使該行指令出錯，也不會中斷執行</p><p>20.fg/bg<br>    fg: 將stopped的程式叫到前景執行<br>     bg: 將stopped的程式叫到背景執行</p><p>21.cut: 將一行訊息當中，取出某部分我們想要的<br>    export | cut -c 12-<br>         將export的輸出-&gt;以行為準切齊，從第12個字元開始印出來<br>    echo $PATH | cut -d ‘:’ -f 5<br>         將輸出以’:’為準做切割，印出第5個element，for example，a:b:c:d:e:f:g ==&gt; 只會印出e</p><p>22.刪除PATH中不要的部份<br>    for example, 要刪掉/usr/local/bin<br>    export PATH=$(echo $PATH | sed ‘s/:/usr/local/bin:/:/g’)</p><p>23.Busybox<br>    檔案系統是Linux不可缺少的一部份，不過在Embedded System上資源有限，不可能建立像PC那麼大的檔案系統，<br>     系統工具程式必須經過精簡化將檔案縮小這樣才可節省Embedded System資源。<br>    現在在Embedded Linux上最常用的檔案系統為 “Busybox”，<br>     “Buzybox”整合的各種系統工具程式(ex: ls, mkdir, rmdir, mount, ifconfig, kill …)成為一個單一執行檔，<br>     大大縮減了系統使用容量。</p><p>24.echo<br>    將字串寫入到指定文件中<br>    echo xxxxxx &gt; filename    // 會把文件內容全部清除，再寫入xxxxxx<br>    echo xxxxxx &gt;&gt; filename  // 會將xxxxxx寫入到原本文件的最末端</p><p>25.bash_history<br>    在~/.bashrc中設定export HISTSIZE=10000<br>    可以更改.bash_history中記錄的指令數量</p><p>26.java -fullversion</p><p>27.patch<br>    patch -pN &lt; patchfile.diff</p><pre><code>for example, a file test.c, origin test.c is stored in old folder and the modified test.c is stored in new foldercurrent folder: /home/nick/comapre: /home/nick/old  and  /home/nick/new==&gt; diff -Naur old new &gt; diff.patch // 比較old and new folder內的所有檔案1. 假設現在有一個舊的test.c file存放在/home/nick下, 要把它變得跟/home/nick/new/test.c一樣 ==&gt; patch -p1 &lt; diff.patch    // 因為原本是對old/ &amp; new/下的檔案作比較，所以要省略一層目錄2. 假設現在有一個新的test.c file存放在/home/nick下, 要把它變得跟/home/nick/old/test.c一樣 ==&gt; patch -R -p1 &lt; patch.diff3. 假設現在有一個舊的test.c file存放在/home/nick/old下, 要把它變得跟/home/nick/new/test.c一樣 ==&gt; patch -p0 &lt; diff.patch4. 假設現在有一個新的test.c file存放在/home/nick/old下, 要把它變得跟/home/nick/old/test.c一樣 ==&gt; patch -R -p0 &lt; diff.patch</code></pre><p>28.踢登入<br>    pkill -kill -t pts/1</p><ol start="29"><li><p>ctags -R *<br> ctags -R * ../umflib/ ../../OceanBlue/sunrise/app/cvt_eu/stb/src/ ../../../DRIVERS/kmf/basesrc_dvbeu/ ../../../DRIVERS/kmf/kmflib/ ../../../KERNEL/linux-2.6.35.9/include/sis516/<br> 會create出一個tags檔, 記錄所有標籤</p></li><li><p>抓log<br> script /home/cht/log.txt<br> 按ctrl+D停止log</p></li><li><p>使用cat將文字輸入到文件中<br> cat &gt; filename<br> 貼上要輸入的文字<br> 按ctrl+D結束</p></li><li><p>EOF =&gt; ctrl+D</p></li><li><p>在SSH中傳訊給其他使用者<br> write sis4990<br> 按ctrl+D結束<br> wall // broadcast<br> 按ctrl+D結束</p></li><li><p>sudo shutdown -P 0 //0分鐘後關機<br>sudo poweroff</p></li><li><p>scp<br> scp -r <a href="mailto:nick@172.17.2.11" target="_blank" rel="noopener">nick@172.17.2.11</a>:./test/* ~/test/  把172.17.2.11上的test目錄下所有檔案都複製到本地端test目錄下<br> scp -r <a href="mailto:nick@172.17.2.11" target="_blank" rel="noopener">nick@172.17.2.11</a>:/home/architecture/SuperNova_CodeBase/tools.tar.gz ~/scp/<br> scp -P 2222 -r docker-compose.yml <a href="mailto:user@172.18.32.226" target="_blank" rel="noopener">user@172.18.32.226</a>:/home/user/</p></li><li><p>查看系統之 process<br> ps 或 ps –x (查看系統中，屬於自己的 process。)<br> ps –au (查看系統中，所有使用者的 process。)<br> ps –aux (查看系統中，包含系統內部，及所有使用者的 process。)<br> ps -elf</p></li><li><p>lsusb // 查看目前系統usb port的情況</p></li></ol><p>38.<br>while true; do cat /proc/meminfo; sleep 1; done<br>while true; do cat /proc/meminfo; sleep 1; echo “===============================”; done<br>while true; do cat /proc/meminfo | grep MemFree; sleep 1; echo “===============================”; done</p><ol start="39"><li>載入module<br>  insmod /system/lib/modules/ehci-hcd.ko<br>  insmod /system/lib/modules/usb-storage.ko</li></ol><p>40.screen<br>    screen //執行screen<br>    screen -r //重新回到（resume）screen 裡</p><pre><code>C-a c // 新增一個screen, 並切換到新的screen去C-a n // 切換到下一個screenC-a p // 切換到上一個screenC-a w // 列出目前所有的screenC-a a // 切換到上一個顯示過的視窗（不是照順序切換）C-a d // 脫離（detach）目前的 screen ，並放到背景執行（不管開了幾個視窗）</code></pre><p>41.sp &amp; vs<br>    1)在命令列下:sp filename, 會將視窗上下切割並開啟filename檔案<br>        2)在命令列下:vs filename, 會將視窗左右切割並開啟filename檔案<br>        C-w w //在兩個視窗中切換<br>        C-w j/k // 在上下兩個視窗中切換<br>        C-w h/l // 在左右兩個視窗中切換</p><ol start="42"><li><p>zip<br> unzip xxx.zip<br> unzip xxx.zip -d dest_dir<br> zip -r test.zip * // 把當前目錄下所有東西都包到test.zip中</p></li><li><p>free -m</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:~$ free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1999         119        1592           1         288        1707</span><br><span class="line">Swap:           975          41         934</span><br></pre></td></tr></table></figure></li><li><p>ps -eo pid,ppid,cmd,%mem,%cpu –sort=-%mem | head<br>top -b -o +%MEM | head -n 17<br>top -b -o +%CPU | head -n 17<br>top -bn1 | awk ‘/gunicorn/ {print  strftime(“%Y-%m-%d %H:%M:%S”), $9, $10}’</p></li></ol><p>while true; do uptime; top -bn1 | awk ‘/gunicorn/ {print  strftime(“%Y-%m-%d %H:%M:%S”), $9, $10}’; sleep 5; done<br>while true; do uptime | tr -d ‘\n’; top -bn1 | awk ‘/mysqld/ {print  “  “ $9 “  “ $10}’; sleep 5; done<br>while true; do uptime | tr -d ‘\n’; top -bn1 | awk ‘/nucleus/ {printf(“%6s%6s\n”, $9, $10)}’; sleep 5; done<br>while true; do uptime | tr -d ‘\n’; top -bn1 | awk ‘/nucleus/ {printf(“%6s%8s\n”, $9, $6)}’; sleep 5; done</p><ol start="45"><li><p>顯示誰已登錄，他們正在做什麼？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:~$ w</span><br><span class="line"> 19:31:52 up 4 days, 10:46,  5 users,  load average: 0.00, 0.01, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">user     pts/0    192.168.56.1     Thu16    1:38m  4.67s  2.89s vim /home/user/git/IMFR/WSGIServer.py</span><br><span class="line">user     pts/1    192.168.56.1     Thu17    5:52   2.67s  1.43s docker-compose up</span><br><span class="line">user     pts/2    192.168.56.1     Thu17    0.00s 23.53s  0.00s w</span><br><span class="line">user     pts/3    192.168.56.1     Thu18    8:39m  0.16s  0.16s -bash</span><br><span class="line">user     pts/4    192.168.56.1     Thu18    1:59m  0.84s  0.84s -bash</span><br></pre></td></tr></table></figure></li><li><p>uptime - 告訴系統已經運行了多久？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:~$ uptime </span><br><span class="line"> 19:32:57 up 4 days, 10:47,  5 users,  load average: 0.00, 0.00, 0.00</span><br></pre></td></tr></table></figure></li><li><p>查看系統中的sh指向</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al `which sh`</span><br></pre></td></tr></table></figure></li><li><p>設定時區</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure tzdata</span><br></pre></td></tr></table></figure></li><li><p>top 查特定 process</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">top -p `pgrep -d &quot;,&quot; monitor.sh`</span><br><span class="line">top -p pid</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xml_parser</title>
      <link href="/posts/67918593/"/>
      <url>/posts/67918593/</url>
      
        <content type="html"><![CDATA[<p>tree = ET.parse(‘aaa.xml’)<br>root = tree.getroot()<br>root.findall(‘.//{urn:3gpp:tsg:sa5:nrm:ngran}vendorName’)</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>disable_ipv6_on_centos7</title>
      <link href="/posts/961c40eb/"/>
      <url>/posts/961c40eb/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># ifconfig enp0s8</span><br><span class="line">enp0s8: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.56.11  netmask 255.255.255.0  broadcast 192.168.56.255</span><br><span class="line">        inet6 fe80::a00:27ff:fe16:8ac8  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 08:00:27:16:8a:c8  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 303  bytes 27759 (27.1 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 189  bytes 33691 (32.9 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line"># echo &quot;net.ipv6.conf.all.disable_ipv6 = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line"># echo &quot;net.ipv6.conf.default.disable_ipv6 = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line"># sysctl -p</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class="line"># service network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK  ]</span><br><span class="line"># ifconfig enp0s8</span><br><span class="line">enp0s8: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.56.11  netmask 255.255.255.0  broadcast 192.168.56.255</span><br><span class="line">        ether 08:00:27:16:8a:c8  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 467  bytes 42663 (41.6 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 302  bytes 60043 (58.6 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fiber</title>
      <link href="/posts/7bac5dc5/"/>
      <url>/posts/7bac5dc5/</url>
      
        <content type="html"><![CDATA[<ul><li>光纖<br><img src="/posts/7bac5dc5/image01.png" alt><br>Core + Cladding + Coating<br>Core: 反射率大<br>Cladding: 反射率小<br><img src="/posts/7bac5dc5/image03.png" alt><br>在 fiber 線上的數字 50/125，代表 Core 50 ㎛, Cladding 150 ㎛</li><li>分類<br><img src="/posts/7bac5dc5/image04.png" alt><br>Multi-mode 的 Core 直徑較粗，可以同時容納多條光束以不同角度前進，但較易相互影響造成衰減，適合較短的傳輸距離 (&lt; 2 km)，價格較便宜<br><img src="/posts/7bac5dc5/image05.png" alt><br>Single-mode 的 Core 直徑較細，只允許一條光束通行，傳輸距離比較遠 (10 km)，價格較貴</li><li>特性</li></ul><ol><li>傳輸距離<br>傳送距離越短，訊號的衰減越少，所能提供的頻寬就越高</li><li>波長<br>基於光的特性，波長越大，訊號衰減就越少，頻寬就可以越高<br>在 Multi-mode 一般會使用波長 850 nm 至 1300 nm；Single-mode 則使用 1310 nm 至 1550 nm</li><li>訊號源<br>發出光訊號的光源可以是 LED (Light-Emitting Diode) 或 VCSEL (Vertical-Cavity Surface-Emitting Laser)<br>VCSEL 的閃動頻率比 LED 高，在相同時間內能夠發出更多的訊號，因而支援較高的頻寬<br>LED 能支援最多 40 Gbps，VCSEL 能支援至 100 Gbps，但是，必須要 OM3/OM4/OS1/OS2 才能支援 VCSEL</li></ol><ul><li>光纖線種類</li></ul><ol><li>Multi-mode 分為 OM1/OM2/OM3/OM4，數字越大則防止衰減技術越高，頻寬及傳輸距離越大<br><img src="/posts/7bac5dc5/image06.png" alt></li><li>Single-mode 分為 OS1/OS2<br><img src="/posts/7bac5dc5/image07.png" alt></li></ol><ul><li>接頭</li></ul><ol><li>SC<br><img src="/posts/7bac5dc5/image08.png" alt></li><li>LC<br><img src="/posts/7bac5dc5/image09.png" alt></li><li>FC<br><img src="/posts/7bac5dc5/image10.png" alt></li></ol><ul><li>Optical Module<br>光電轉換，轉換電信信號跟光信號，通常會有兩個埠，Tx 用來發射信號，Rx 用來接收信號</li></ul><ol><li>GBIC (Giga Bitrate Interface Converter)<br><img src="/posts/7bac5dc5/image11.png" alt></li><li>SFP/SFP+ (Small Form Pluggable)<br>GBIC 的升級版，功能與 GBIC 相同，但接頭為 LC，所有的SFP模塊必須成對使用，相同波長且相同模式<br>SFP封裝–熱插拔小封裝模塊，目前最高速率可達4G<br>SFP+封裝–標準封裝，工作速率是10G，可以滿足乙太網10G的應用<br><img src="/posts/7bac5dc5/image12.png" alt></li></ol><ul><li><p>速率分類<br>按照速率分有10M/100M/155M/622M/1.25G/2.125G/4.25G/10G/25G/50G/100G</p></li><li><p>波長分類<br>按照波長分有850nm/1310nm/1490nm/1550nm/1610nm，波長為850nm為SFP多模，傳輸距離在2KM以下，波長是1310/1550nm的為單模，傳輸距離在2KM以上<br><img src="/posts/7bac5dc5/image02.png" alt><br>一般廠家會在拉環的顏色上進行區分，比如：黑色拉環的為多模，波長是850nm；藍色是波長1310nm的模塊；紫色是波長1490nm的模塊；黃色則是波長1550nm的模塊等</p></li><li><p>模式分類<br>多模: 幾乎所有的多模光纖尺寸均為50/125um或62.5/125um，並且帶寬（光纖的信息傳輸量）通常為200MHz到2GHz<br>單模: 單模光纖的尺寸為9-10/125µm，並且較之多模光纖具有無限量帶寬和更低損耗的特性。而單模光端機多用於長距離傳輸，有時可達到150至200公里</p></li><li><p>Reference<br><a href="https://www.jannet.hk/zh-Hant/post/optical-fiber-cable/" target="_blank" rel="noopener">https://www.jannet.hk/zh-Hant/post/optical-fiber-cable/</a><br><a href="https://kknews.cc/zh-tw/code/9memlr8.html" target="_blank" rel="noopener">https://kknews.cc/zh-tw/code/9memlr8.html</a><br><a href="https://zhuanlan.zhihu.com/p/101607360" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/101607360</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Add Secondary IP in Network Interface Config for CentOS</title>
      <link href="/posts/9c6ed8e8/"/>
      <url>/posts/9c6ed8e8/</url>
      
        <content type="html"><![CDATA[<ul><li>network interface information<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># cat ifcfg-enp97s0f0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0</span><br><span class="line">ONBOOT=no</span><br><span class="line"># ip a | grep enp</span><br><span class="line">6: enp97s0f0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN qlen 1000</span><br></pre></td></tr></table></figure></li><li>新增 ip<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># cat ifcfg-enp97s0f0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=&quot;192.168.56.100&quot;</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0</span><br><span class="line">ONBOOT=no</span><br><span class="line"># service network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK  ]</span><br><span class="line"># ip a | grep enp</span><br><span class="line">6: enp97s0f0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN qlen 1000</span><br><span class="line">    inet 192.168.56.100/24 brd 192.168.56.255 scope global enp97s0f0</span><br></pre></td></tr></table></figure></li><li>更名<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># cat ifcfg-enp97s0f0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=&quot;192.168.56.100&quot;</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0:NgC</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0:NgC</span><br><span class="line">ONBOOT=no</span><br><span class="line"># service network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK  ]</span><br><span class="line"># ip a | grep enp</span><br><span class="line">6: enp97s0f0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN qlen 1000</span><br><span class="line">    inet 192.168.56.100/24 brd 192.168.56.255 scope global enp97s0f0:NgC</span><br></pre></td></tr></table></figure></li><li>新增多組 ip<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># cat ifcfg-enp97s0f0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR0=&quot;192.168.56.100&quot;</span><br><span class="line">IPADDR1=&quot;192.168.56.101&quot;</span><br><span class="line">#GATEWAY1=&quot;192.168.56.1&quot;</span><br><span class="line">#NETMASK1=&quot;255.255.255.0&quot;</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0</span><br><span class="line">ONBOOT=no</span><br><span class="line"># service network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK  ]</span><br><span class="line"># ip a</span><br><span class="line">6: enp97s0f0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN qlen 1000</span><br><span class="line">    inet 192.168.56.100/24 brd 192.168.56.255 scope global enp97s0f0</span><br><span class="line">    inet 192.168.56.101/24 brd 192.168.56.255 scope global secondary enp97s0f0</span><br></pre></td></tr></table></figure></li><li>duplicate 多份 network interface config<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># ls</span><br><span class="line">ifcfg-enp97s0f0</span><br><span class="line">ifcfg-enp97s0f0:NgC</span><br><span class="line">ifcfg-enp97s0f0:NgU</span><br><span class="line"># cat ifcfg-enp97s0f0:NgC</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=&quot;192.168.56.100&quot;</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0:NgC</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0:NgC</span><br><span class="line">ONBOOT=no</span><br><span class="line"># cat ifcfg-enp97s0f0:NgU</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=&quot;192.168.56.101&quot;</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0:NgU</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0:NgU</span><br><span class="line">ONBOOT=no</span><br><span class="line"># ip a</span><br><span class="line">6: enp97s0f0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN qlen 1000</span><br><span class="line">    inet 192.168.56.100/24 brd 192.168.56.255 scope global enp97s0f0:NgC</span><br><span class="line">    inet 192.168.56.101/24 brd 192.168.56.255 scope global secondary enp97s0f0:NgU</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="https://www.opencli.com/linux/centos-7-add-multiple-ip-addresses" target="_blank" rel="noopener">https://www.opencli.com/linux/centos-7-add-multiple-ip-addresses</a><br><a href="https://ma.ttias.be/how-to-add-secondary-ip-alias-on-network-interface-in-rhel-centos-7/" target="_blank" rel="noopener">https://ma.ttias.be/how-to-add-secondary-ip-alias-on-network-interface-in-rhel-centos-7/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BOM</title>
      <link href="/posts/f3d3ee5b/"/>
      <url>/posts/f3d3ee5b/</url>
      
        <content type="html"><![CDATA[<p>在文件的最前面，會有下列符號</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;U+FEFF&gt;</span><br></pre></td></tr></table></figure><p>在vim中，使用以下指令刪除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set nobomb</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ptp</title>
      <link href="/posts/b0e67c8c/"/>
      <url>/posts/b0e67c8c/</url>
      
        <content type="html"><![CDATA[<ul><li>PTP (Precise Time Protocol)<br>Obtaining sub-100 nanosecond timing on a local area network requires an architecture that is fully IEEE-1588 compliant. The three main components are: a GPS Grandmaster clock, an Ethernet switch (transparent or boundary clock), and a PTP slave.<ul><li>PTP 精準度較 NTP 好，NTP 只能精確到毫秒 (ms)，PTP 能精確到微秒 (us)</li><li>NTP 協議較被廣泛用於 LAN 和 WAN 上的時間同步</li></ul></li><li>確認網卡是否支援 PTP 功能<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># ethtool -T enp134s0f0</span><br><span class="line">Time stamping parameters for enp134s0f0:</span><br><span class="line">Capabilities:</span><br><span class="line">    hardware-transmit     (SOF_TIMESTAMPING_TX_HARDWARE)</span><br><span class="line">    software-transmit     (SOF_TIMESTAMPING_TX_SOFTWARE)</span><br><span class="line">    hardware-receive      (SOF_TIMESTAMPING_RX_HARDWARE)</span><br><span class="line">    software-receive      (SOF_TIMESTAMPING_RX_SOFTWARE)</span><br><span class="line">    software-system-clock (SOF_TIMESTAMPING_SOFTWARE)</span><br><span class="line">    hardware-raw-clock    (SOF_TIMESTAMPING_RAW_HARDWARE)</span><br><span class="line">PTP Hardware Clock: 1</span><br><span class="line">Hardware Transmit Timestamp Modes:</span><br><span class="line">    off                   (HWTSTAMP_TX_OFF)</span><br><span class="line">    on                    (HWTSTAMP_TX_ON)</span><br><span class="line">Hardware Receive Filter Modes:</span><br><span class="line">    none                  (HWTSTAMP_FILTER_NONE)</span><br><span class="line">    all                   (HWTSTAMP_FILTER_ALL)</span><br></pre></td></tr></table></figure></li><li>使用 ptp4l 調整 PHC (PTP Hardware Clock) 時鐘，使用 phc2sys 調整系統時鐘</li></ul><ol><li>使用 ptp4l 指令，將 NIC (enp134s0f0) 中的 PHC 做為 slave mode，同步為 master 的時間 (在 ptp4l.conf 中設定 master 來源)</li><li>使用 phc2sys 指令，將 NIC (enp134s0f0) 中的 PHC 時間，同步到系統時間<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># ptp4l -i enp134s0f0 -m -s -f ptp4l.conf</span><br><span class="line"> -i [dev]  interface device to use</span><br><span class="line"> -m        print messages to stdout</span><br><span class="line"> -s        slave only mode (master, by default)</span><br><span class="line"> -f [file] read configuration from &apos;file&apos;</span><br><span class="line"></span><br><span class="line"># phc2sys -s enp134s0f0 -w -m -n 44</span><br><span class="line"> -s [dev|name]  master clock</span><br><span class="line"> -w             wait for ptp4l</span><br><span class="line"> -m             print messages to stdout</span><br><span class="line"> -n [num]       domain number</span><br></pre></td></tr></table></figure></li></ol><ul><li>Components</li></ul><ol><li>GM (Grandmaster Clock): master 作為同步源頭</li><li>OC (Ordinary Clock): 單一網路界面設備 (只有一個 PTP 通信埠)，可以是 master 或 slave</li><li>BC (Boundary Clock): 多網路界面設備 (有一個以上 PTP 通信埠)，其中一個作為 PTP slave (master 是 GM)，其它則為 master (slave 為連接到 swtich 的眾多 network devices)</li><li>TC (Transparent Clock): 多網路界面設備，如同一般 switch 或 router 轉送所有封包，但不作為 master 或 slave (所以 master 依舊為 GM，slave 為連接到 swtich 的眾多 network devices)，分為<br>a. end-to-end (端對端)：額外累算 event 封包停留 switch 時間，更新 correction 欄位<br>b. peer-to-peer (點對點)：只更新 Sync 和 Follow Up 的 correction 欄位，除了累算 event 封包停留時間，再減去 Link propagation delay</li></ol><ul><li>Master/Slave<br>從通信關係上又把時鐘分為主時鐘和從時鐘，任何時鐘都能作為 Master clock 和 Slave clock，並且保證從時鐘與主時鐘時間同步<br>每個系統只有一個GMC，每個子網內只有一個主時鐘</li></ul><p>T1 透過 Sync 或 Follow Up 告知 Slave，如果 Sync 傳送時還不知道真正傳送時間，才用 Follow Up 送，稱為 2-Step<br>T1: Master 週期傳送 Sync 的時間<br>T2: Slave 接收 Sync 的時間<br>Slave 調整時間，讓 T2 和 T1 的變化速度一致，達到頻率同步。Drift = ((T2’-T2) - (T1’-T1))/(T1’-T1)</p><p>E2E：頻率同步後<br>T3: Slave 傳送 Delay Request 的時間，Slave 只是紀錄 T3，Delay Request 並不含 T3 欄位<br>T4: Master 接收 Delay Request 的時間。T4 透過 Delay Response 告知 Slave<br>Delay = (T2 - T1 + T4 - T3)/2</p><p>P2P：可用在頻率不同步時</p><p>One way delay = (T2-T1 + T4-T3) / 2<br>Offset (phase offset) = Master to Slave difference – One way delay = ((T2-T1) - (T4-T3)) / 2</p><p>s<br>主時鐘在t1時刻發送Sync消息：如果為1588 one-step機制，則Sync消息包含有發送時間；如果為1588 two-step機制，則Sync消息僅發送發送時間值的估計值，即t1的估計值，然後在Follow_Up消息中再發送精確的t1值</p><p>2 Step下, sync msg在Transparent Clock中不必更新timestamp. 但是需要记住sync msg在device中停留多长时间(dwell time)供将来follow up用</p><p>One-step clocks require hardware capable of on-the-fly correction field updates. Two-step clocks require that the software remember the dwell time of a sync message and match it to the corresponding follow up message.</p><p>2-step master –&gt; 1-step transparent –&gt; slave<br>transparent clock会更新sync msg的correction filed, 不会处理follow up<br>最终slave都会把sync和follow up的时间戳相加.<br>1-step master –&gt; 2-step transparent –&gt; slave<br>transparent clock会根据sync msg而生成follow up msg</p><ul><li>Reference<br><a href="https://www.2cm.com.tw/2cm/zh-tw/tech/1B2EBAC1BE7F4700A836C4AE040D5873" target="_blank" rel="noopener">https://www.2cm.com.tw/2cm/zh-tw/tech/1B2EBAC1BE7F4700A836C4AE040D5873</a><br><a href="https://blog.meinbergglobal.com/2013/09/14/ieee-1588-accurate/" target="_blank" rel="noopener">https://blog.meinbergglobal.com/2013/09/14/ieee-1588-accurate/</a><br><a href="http://lirobo.blogspot.com/2020/10/precision-time-protocol.html" target="_blank" rel="noopener">http://lirobo.blogspot.com/2020/10/precision-time-protocol.html</a><br><a href="http://www.chronos.co.uk/files/pdfs/cal/TechnicalBrief-IEEE1588v2PTP.pdf" target="_blank" rel="noopener">http://www.chronos.co.uk/files/pdfs/cal/TechnicalBrief-IEEE1588v2PTP.pdf</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5g_document</title>
      <link href="/posts/11219203/"/>
      <url>/posts/11219203/</url>
      
        <content type="html"><![CDATA[<p><a href="https://doc.dpdk.org/dts/test_plans/vf_macfilter_test_plan.html" target="_blank" rel="noopener">https://doc.dpdk.org/dts/test_plans/vf_macfilter_test_plan.html</a></p><p><a href="https://blog.csdn.net/HiWangWenBing/article/details/106878102" target="_blank" rel="noopener">https://blog.csdn.net/HiWangWenBing/article/details/106878102</a><br><a href="https://blog.csdn.net/HiWangWenBing/category_10056821.html" target="_blank" rel="noopener">https://blog.csdn.net/HiWangWenBing/category_10056821.html</a><br><a href="https://blog.csdn.net/HiWangWenBing/article/details/106872841" target="_blank" rel="noopener">https://blog.csdn.net/HiWangWenBing/article/details/106872841</a><br><a href="https://blog.csdn.net/HiWangWenBing/article/details/106877671" target="_blank" rel="noopener">https://blog.csdn.net/HiWangWenBing/article/details/106877671</a><br><a href="https://blog.csdn.net/HiWangWenBing/article/details/106875790" target="_blank" rel="noopener">https://blog.csdn.net/HiWangWenBing/article/details/106875790</a><br><a href="https://www.2cm.com.tw/2cm/zh-tw/tech/A64431A9FDDC48F4AFFFC99688A8743D" target="_blank" rel="noopener">https://www.2cm.com.tw/2cm/zh-tw/tech/A64431A9FDDC48F4AFFFC99688A8743D</a><br><a href="https://tel3c.tw/blog/post/28669" target="_blank" rel="noopener">https://tel3c.tw/blog/post/28669</a><br><a href="https://zhuanlan.zhihu.com/p/59654520" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/59654520</a><br><a href="https://www.linkedin.com/pulse/3gpp-5g-adhoc-any-decisions-ran-internal-functional-split-eiko-seidel" target="_blank" rel="noopener">https://www.linkedin.com/pulse/3gpp-5g-adhoc-any-decisions-ran-internal-functional-split-eiko-seidel</a></p><p>DTU (Data Terminal Unit)<br>採用 5G/4G 無線、有線網絡，將本地串口數據經 DTU 打包成 IP 數據或者是將 IP 數據轉換成串口數據的無線通訊終端，進行遠程傳輸的設備<br>可以充當UE測試Throughput</p><p>PA (Power Amplifier)<br>功率放大器</p><p>SFP (Small From Pluggable)<br>SFP的最高速率可達4G，SFP+的速率是10G</p><p>PDU (Packet Data Unit)<br>5G網絡以數據包的形式將終端（UE）和外部網絡之間發送和接收的數據進行傳送，通常把這些用戶的數據包叫做PDU<br>PDU session 建立過程是由UE側發起的，目的是在UE和DN之間建立一條新的連線，即終端和外部網絡之間的數據通道</p><p>MCS</p><p>EVM (Error Vector Magnitude)<br>經由 PF 打出來的訊號，跟理想訊號的誤差值</p><p>PLMN (Public Land Mobile Network)<br>PLMN = MCC + MNC<br>MCC: 移動國家碼<br>MNC: 行動網路碼</p><p><a href="https://www.2cm.com.tw/2cm/zh-tw/tech/A64431A9FDDC48F4AFFFC99688A8743D" target="_blank" rel="noopener">https://www.2cm.com.tw/2cm/zh-tw/tech/A64431A9FDDC48F4AFFFC99688A8743D</a><br>在通訊網路中, 無線接取部份分成4個子層 PDCP, RLC, MAC, PHY</p><p>資料在各個子層中進行相對應的封裝，子層從上層收到的資料視為此子層的服務資料單元(Service Data Unit, SDU)，經過子層封裝後成為協定資料單元(Protocol Data Unit, PDU)，再傳遞給下一個子層</p><p>PDCP (Packet Data Convergence Protocol)<br>負責的主要功能有資料封包的標頭(Header)壓縮與解壓縮、資料加密/解密、資料完整性的保護<br>PDCP 的 PDU 格式分成兩種，分別是攜帶資料和序號(Sequence Number, SN)的PDCP Data PDU和攜帶PDCP狀態報告(Status Report)或標頭壓縮控制(Header Compression Control)資訊的PDCP控制PDU</p><p>在LTE通訊協定的設計中，每個無線承載都由一個PDCP實體(Entity)來負責管理，而根據無線承載的不同特性(單向或雙向)，以及RLC是以承認模式(AM)或非承認模式(UM)來傳輸資料，一個PDCP實體可能會對應到一或兩個RLC實體。</p><p>無線承載還可分為專用無線承載(Dedicated Radio Bearer, DRB)和信令無線承載(Signaling Radio Bearer, SRB)兩種，PDCP實體提供無線承載的功能雖然均包含使用者面(User Plane)與控制面(Control Plane)資料傳送、PDCP序號維護、資料加解密、剔除過時資料封包和確保上層資料封包於重建時的順序正確和不重複，但標頭壓縮/解壓縮功能只適用於DRB，資料完整性保護亦僅適用於SRB。  </p><p>RLC (Radio Link Control)<br>該子層主要的功能為對資料SDU進行切割及組合，使之成為適當大小的 PDU 送給 MAC 層。<br>RLC子層負責的另一項重要工作則是在封包遺失時進行自動重傳請求(Automatic Repeat Request, ARQ)</p><p>RLC子層的操作模式可分為三類，分別為透明模式(TM)、非承認模式及承認模式。<br>透明模式為直接穿透模式，資料不須在RLC層進行重新封裝的工作，SDU即為PDU<br>而在承認和非承認模式下，RLC子層均須將所收到的SDU進行切割和重組，以組成MAC子層所要求的PDU。承認和非承認模式之間的主要差別，便是由是否支援ARQ功能進行區分。承認模式須支援ARQ功能，而非承認模式則不支援ARQ功能。在承認模式下，MAC必須在接收端對於PDU接收的結果進行回報，回報結果為接收成功(ACK)或接收失敗(NACK)，當結果為NACK時，RLC的傳送端必須進行重傳。</p><p>ARQ機制旨在克服PDU遺失的問題。在傳送端會將組成的PDU暫存在緩衝區內，用以進行PDU的重傳。在重傳時，若是傳輸空間大小不足以容納須要重傳的PDU時，可以針對已經組成的PDU再次進行切割(Re-segment)，以組成PDU進行傳送。在接收端亦會對收到的PDU進行暫存動作，嘗試將收到的PDU解封裝成為SDU並且維持SDU的先後順序傳送給上層。  </p><p>MAC (Media Access Control) 負責資料的重傳 (HARQ)<br>MAC子層將接手執行排程(Scheduling)、多工(Multiplexing)等任務，以組成MAC子層PDU<br>在MAC子層端，為防止RLC提供的PDU遺失，具備混合式自動回覆請求重傳(HARQ)等功能</p><p>多工的目標，在於將多個不同邏輯通道的資料組合在同一個傳輸通道中傳送，在MAC子層中會將一或多個邏輯通道得到的SDU封裝在同一個 MAC PDU中，然後在傳輸通道中進行傳送。相反的接收時亦會對MAC PDU進行解多工 (De-multiplexing)的動作，將在同一個傳輸通道中的PDU拆解為一至多個邏輯通道SDU，即在接收端將SDU對應到原屬的邏輯通道</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>openshift</title>
      <link href="/posts/41da0a7b/"/>
      <url>/posts/41da0a7b/</url>
      
        <content type="html"><![CDATA[<ul><li><p>How to Setup OpenShift Origin (OKD) on Ubuntu 19.04/18.04/16.04<br><a href="https://computingforgeeks.com/how-to-setup-openshift-origin-on-ubuntu/#ex1" target="_blank" rel="noopener">https://computingforgeeks.com/how-to-setup-openshift-origin-on-ubuntu/#ex1</a></p></li><li><p>How To Setup Local OpenShift Origin (OKD) Cluster on CentOS 7<br><a href="https://computingforgeeks.com/setup-openshift-origin-local-cluster-on-centos/" target="_blank" rel="noopener">https://computingforgeeks.com/setup-openshift-origin-local-cluster-on-centos/</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>redis</title>
      <link href="/posts/7b25d017/"/>
      <url>/posts/7b25d017/</url>
      
        <content type="html"><![CDATA[<ol><li><p>redis-client<br><a href="https://github.com/rgl/redis/downloads" target="_blank" rel="noopener">https://github.com/rgl/redis/downloads</a></p></li><li><p>redis-server<br>sudo apt-get install redis-server<br>sudo apt-get purge –auto-remove redis-server</p></li><li><p>Instruction</p></li></ol><ul><li><p>Start/Stop Redis server<br>$ sudo service redis-server start<br>$ sudo service redis-server restart<br>$ sudo service redis-server stop</p></li><li><p>Open Redis CLI tool<br>$ redis-cli<br>$ redis-cli -h redis15.localnet.org -p 6379 ping</p></li><li><p>Config<br>$ sudo vim /etc/redis/redis.conf<br>port：連結到Redis Server所通過的連接埠。預設為6379，如果有跟其他服務衝突到，應該要修改掉。<br>bind：連結到Redis Server所使用的網路介面。預設為127.0.0.1，也就是內部迴圈(lo)，僅本機可以直接連接。<br>requirepass：連結到此Redis Server所需的密碼。</p><p>修改bind設定<br>$ sudo vim /etc/redis/redis.conf<br>bind 127.0.0.1 =&gt; bind 0.0.0.0</p></li></ul><p><a href="https://blogs.technet.microsoft.com/jessicadeen/uncategorized/how-to-configure-redis-server-on-bash-on-ubuntu-on-windows-10-wsl/" target="_blank" rel="noopener">How to configure Redis-Server on Bash on Ubuntu on Windows 10 (WSL) – Jessica Deen on Technet</a></p><ul><li>Commands<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; set test 123</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get test</span><br><span class="line">&quot;123&quot;</span><br><span class="line">127.0.0.1:6379&gt; exists test</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; del test</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://redis.io/topics/rediscli" target="_blank" rel="noopener">https://redis.io/topics/rediscli</a><br><a href="https://www.itread01.com/content/1545205270.html" target="_blank" rel="noopener">https://www.itread01.com/content/1545205270.html</a><br><a href="https://pypi.org/project/redis/" target="_blank" rel="noopener">https://pypi.org/project/redis/</a><br><a href="https://www.jianshu.com/p/2639549bedc8" target="_blank" rel="noopener">https://www.jianshu.com/p/2639549bedc8</a></p><p>redis-cli -p 6379 –stat</p><ul><li>Setup in nodejs<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">const session = require(&apos;express-session&apos;);</span><br><span class="line">const RedisStore = require(&apos;connect-redis&apos;)(session);</span><br><span class="line"></span><br><span class="line">app.use(session(&#123;</span><br><span class="line">    store: new RedisStore(&#123;</span><br><span class="line">        host: &apos;localhost&apos;,</span><br><span class="line">        port: 6379,</span><br><span class="line">        ttl: 30 * 60 // valid in 30 minutes</span><br><span class="line">    &#125;),</span><br><span class="line">    secret: &apos;keyboard cat&apos;,</span><br><span class="line">    resave: false,</span><br><span class="line">    saveUninitialized: false</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.get(&apos;/&apos;, (req, res) =&gt; &#123;</span><br><span class="line">    if (req.session.key) &#123;</span><br><span class="line">        res.redirect(&apos;/index&apos;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        res.redirect(&apos;/login&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(&apos;/login&apos;,function(req, res)&#123;</span><br><span class="line">    // when user login set the key to redis</span><br><span class="line">    req.session.key = req.body.email;</span><br><span class="line">    res.end(&apos;done&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://github.com/tj/connect-redis" target="_blank" rel="noopener">https://github.com/tj/connect-redis</a><br><a href="https://codeforgeek.com/2015/07/using-redis-to-handle-session-in-node-js/" target="_blank" rel="noopener">https://codeforgeek.com/2015/07/using-redis-to-handle-session-in-node-js/</a></p><p>SET (Setting a Key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SET foo &quot;Hello World&quot;</span><br><span class="line">OK // setting a key</span><br></pre></td></tr></table></figure><p>GET (Getting a Key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; GET foo</span><br><span class="line">&quot;Hello World&quot; // getting a key</span><br></pre></td></tr></table></figure><p>DEL (Deleting a Key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; GET foo </span><br><span class="line">&quot;Hello World&quot; // getting a key</span><br><span class="line">127.0.0.1:6379&gt; DEL foo</span><br><span class="line">(integer) 1 // key just got deleted</span><br><span class="line">127.0.0.1:6379&gt; GET foo</span><br><span class="line">(nil) // since key is deleted therefore, result is nil.</span><br></pre></td></tr></table></figure><p>SETEX (Setting a key with an expiry)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SETEX foo 40 &quot;I said, Hello World!&quot;</span><br><span class="line">OK // key has been set with 40 seconds as expiration</span><br></pre></td></tr></table></figure><p>TTL (Total Time left for a key that has a timeout)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; TTL foo</span><br><span class="line">(integer) 36 // 36 seconds left to timeout</span><br></pre></td></tr></table></figure><p>PERSIST (Removing the timeout from key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PERSIST foo</span><br><span class="line">(integer) 1 // turning the key from volatile to persistent (key won&apos;t expire)</span><br></pre></td></tr></table></figure><p>RENAME (Renaming the current existing key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; RENAME foo bar</span><br><span class="line">OK // renaming the key &apos;foo&apos; as bar</span><br></pre></td></tr></table></figure><p>FLUSHALL (Flushing everything so far saved)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; flushall</span><br><span class="line">OK // just got flushed</span><br></pre></td></tr></table></figure><p>dump redis data<br><a href="https://github.com/sripathikrishnan/redis-rdb-tools" target="_blank" rel="noopener">https://github.com/sripathikrishnan/redis-rdb-tools</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">查找所有key</span><br><span class="line">keys *</span><br><span class="line">redis-cli -h 172.18.66.199 -p 16379 keys &apos;subject_id*&apos; &gt; keys.txt</span><br><span class="line"></span><br><span class="line">dump data to /data/dump.rdb</span><br><span class="line">redis-cli -h 172.18.66.199 -p 16379 bgsave</span><br><span class="line"></span><br><span class="line">要先把dump.rdb從redis container中複製出來</span><br><span class="line">pip install rdbtools python-lzf</span><br><span class="line"></span><br><span class="line">Memory Report</span><br><span class="line">rdb -c memory dump.rdb &gt; memory.csv</span><br><span class="line"></span><br><span class="line">data</span><br><span class="line">rdb --command json dump.rdb &gt; data.txt</span><br><span class="line">rdb --command justkeyvals --key &quot;user.*&quot; dump.rdb &gt; data.txt</span><br></pre></td></tr></table></figure><ul><li>設定、查詢 live time<br>redis&gt; keys *<br>1) key1<br>2) key2<br>redis&gt; EXPIRE key1 10086<br>(integer) 1<br>redis&gt; TTL key1<br>(integer) 10084</li></ul><p><a href="https://tachingchen.com/tw/blog/redis-data-persistence/" target="_blank" rel="noopener">https://tachingchen.com/tw/blog/redis-data-persistence/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; config get &quot;stop-writes-on-bgsave-error&quot;</span><br><span class="line">1) &quot;stop-writes-on-bgsave-error&quot;</span><br><span class="line">2) &quot;yes&quot;</span><br><span class="line">127.0.0.1:6379&gt; CONFIG SET stop-writes-on-bgsave-error no</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; config get &quot;stop-writes-on-bgsave-error&quot;</span><br><span class="line">1) &quot;stop-writes-on-bgsave-error&quot;</span><br><span class="line">2) &quot;no&quot;</span><br></pre></td></tr></table></figure><p>app.pool = redis.ConnectionPool(host=app.config[‘REDIS_HOST’] , port=app.config[‘REDIS_PORT’] , decode_responses=True)<br>app.gredis = redis.Redis(connection_pool=app.pool)<br>app.gredis.config_set(“stop-writes-on-bgsave-error”, “no”)</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>crontab</title>
      <link href="/posts/2de1df7e/"/>
      <url>/posts/2de1df7e/</url>
      
        <content type="html"><![CDATA[<ul><li><p>列出所有設定<br><code>crontab -l</code></p></li><li><p>設定<br><code>crontab -e</code><br>進入編輯畫面編輯排程工作，若需要排程的命令需要 root 權限，可以在 root 帳戶下，執行 <code>crontab -e</code></p></li><li><p>刪除所有設定<br><code>crontab -r</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>taskset command</title>
      <link href="/posts/de3e16a/"/>
      <url>/posts/de3e16a/</url>
      
        <content type="html"><![CDATA[<p>taskset 指令可以指定特定的 CPU 給 Process 使用</p><ul><li><p>安裝</p><ul><li>Ubuntu<br><code>apt install util-linux</code></li><li>Centos<br><code>yum install util-linux</code></li></ul></li><li><p>設定 CPU affinity<br><code>taskset COREMASK EXECUTABLE</code><br><code>taskset -p COREMASK PID</code><br><code>taskset -cp CORELIST PID</code></p><ul><li>執行 test.sh 並綁定在  CPU 0<br><code>taskset 0x1 ./test.sh</code></li><li>執行 test.sh 並綁定在  CPU 0-3<br><code>taskset 0xf ./test.sh</code></li><li>執行 test.sh 並綁定在  CPU 0, 4<br><code>taskset 0x11 ./test.sh</code></li><li>將行程 9527 固定在 CPU 0<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]# taskset -p 0x1 9527</span><br><span class="line">pid 9527&apos;s current affinity mask: f</span><br><span class="line">pid 9527&apos;s new affinity mask: 1</span><br><span class="line"></span><br><span class="line">[root@centos ~]# taskset -cp 0 9527</span><br><span class="line">pid 9527&apos;s current affinity list: 0-3</span><br><span class="line">pid 9527&apos;s new affinity list: 0</span><br></pre></td></tr></table></figure></li><li>將行程 9527 固定在 CPU 2, 3<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]# taskset -p 0xc 9527</span><br><span class="line">pid 9527&apos;s current affinity mask: f</span><br><span class="line">pid 9527&apos;s new affinity mask: c</span><br><span class="line"></span><br><span class="line">[root@centos ~]# taskset -cp 2,3 9527</span><br><span class="line">pid 9527&apos;s current affinity list: 0-3</span><br><span class="line">pid 9527&apos;s new affinity list: 2,3</span><br></pre></td></tr></table></figure></li></ul></li><li><p>查看 CPU affinity<br><code>taskset -p PID</code><br><code>taskset -cp PID</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]# taskset -p 9527</span><br><span class="line">pid 9527&apos;s current affinity mask: f</span><br><span class="line"></span><br><span class="line">[root@centos ~]# taskset -cp 9527</span><br><span class="line">pid 9527&apos;s current affinity list: 0-3</span><br></pre></td></tr></table></figure></li><li><p>Reference<br><a href="https://blog.gtwang.org/linux/run-program-process-specific-cpu-cores-linux/" target="_blank" rel="noopener">https://blog.gtwang.org/linux/run-program-process-specific-cpu-cores-linux/</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VirtualBox - 重新設定 vdi disk 大小</title>
      <link href="/posts/67ead39f/"/>
      <url>/posts/67ead39f/</url>
      
        <content type="html"><![CDATA[<ol><li>目前配置大小為 32G<br><img src="/posts/67ead39f/image01.png" alt></li><li>以系統管理員身份執行 cmd，重新設定大小為 100G<br><code>VBoxManage modifyhd E:\vm\testing\testing.vdi -–resize 102400</code><br><img src="/posts/67ead39f/image02.png" alt><br><img src="/posts/67ead39f/image03.png" alt></li></ol>]]></content>
      
      
      <categories>
          
          <category> VirtualBox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VirtualBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rpm</title>
      <link href="/posts/b408013f/"/>
      <url>/posts/b408013f/</url>
      
        <content type="html"><![CDATA[<ol><li><p>package</p><ul><li>on Centos<br><code>sudo yum install rpmdevtools</code></li><li>on Ubuntu<br><code>sudo apt install rpm</code></li></ul></li><li><p>install<br><code>rpm -ivh test-1.0-1.el7.x86_64.rpm</code><br><code>rpm -ivh test-1.0-1.el7.x86_64.rpm --nodeps --force</code></p></li><li><p>uninstall<br><code>rpm -e test-1.0-1.el7.x86_64</code></p></li><li><p>list all installed rpm packages</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[user@centos ~]$ rpm -qa | grep test</span><br><span class="line">test-1.0-1.el7.x86_64</span><br></pre></td></tr></table></figure></li><li><p>製作 rpm package<br>a. 建立 rpm resource folder<br><code>rpmdev-setuptree</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rpmbuild/</span><br><span class="line">├── BUILD</span><br><span class="line">├── RPMS</span><br><span class="line">├── SOURCES</span><br><span class="line">├── SPECS</span><br><span class="line">└── SRPMS</span><br></pre></td></tr></table></figure><p>b. 把 source tar file 放入 SOURCES<br>c. 建立 spec file template<br><code>cd rpmbuild/SPECS &amp;&amp; rpmdev-newspec test.spec</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Name:           test</span><br><span class="line">Version:        </span><br><span class="line">Release:        1%&#123;?dist&#125;</span><br><span class="line">Summary:        </span><br><span class="line"></span><br><span class="line">License:        </span><br><span class="line">URL:            </span><br><span class="line">Source0:        </span><br><span class="line"></span><br><span class="line">BuildRequires:  </span><br><span class="line">Requires:       </span><br><span class="line"></span><br><span class="line">%description</span><br><span class="line"></span><br><span class="line">%prep</span><br><span class="line">%setup -q</span><br><span class="line"></span><br><span class="line">%build</span><br><span class="line">%configure</span><br><span class="line">make %&#123;?_smp_mflags&#125;</span><br><span class="line"></span><br><span class="line">%install</span><br><span class="line">rm -rf $RPM_BUILD_ROOT</span><br><span class="line">%make_install</span><br><span class="line"></span><br><span class="line">%files</span><br><span class="line">%doc</span><br><span class="line"></span><br><span class="line">%changelog</span><br></pre></td></tr></table></figure><p>d. build rpm package<br><code>rpmbuild -bb rpmbuild/SPECS/test.spec</code><br>rpm file 會產生在<br><code>rpmbuild/RPMS/x86_64/test-1.0-1.el7.x86_64.rpm</code></p></li><li><p>spec</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># test.spec</span><br><span class="line">Name:           test</span><br><span class="line">Version:        1.0</span><br><span class="line">Release:        1%&#123;?dist&#125;</span><br><span class="line">Summary:        TEST</span><br><span class="line">License:        TEST</span><br><span class="line">Source0:        %&#123;name&#125;.tar.gz</span><br><span class="line">#如果有多個 tar source</span><br><span class="line">#Source1:        xxx.tar.gz</span><br><span class="line"></span><br><span class="line">%description</span><br><span class="line">Description</span><br><span class="line"></span><br><span class="line">%prep</span><br><span class="line"># tar檔解壓縮後，預設目錄必須為 test-1.0，若不是 (假設根目錄為 test)，則必須指明目錄名稱</span><br><span class="line">%setup -q -n test</span><br><span class="line"># 先建立目錄 tmp，再將 test 解壓縮 (最後的目錄會是 ~/rpmbuild/BUILD/tmp/test)</span><br><span class="line">#%setup -q -c -n tmp</span><br><span class="line"># 如果有多個 tar source</span><br><span class="line">#%setup -q -b 0 -n aaa</span><br><span class="line">#%setup -q -b 1 -n bbb</span><br><span class="line"></span><br><span class="line">%install</span><br><span class="line">mkdir -p $RPM_BUILD_ROOT/home/user/test</span><br><span class="line">cp -rf test.py $RPM_BUILD_ROOT/home/user/test</span><br><span class="line"></span><br><span class="line">%clean</span><br><span class="line"></span><br><span class="line">%files</span><br><span class="line"># 這個目錄結構，就是安裝 rpm 的路徑，以及安裝的檔案</span><br><span class="line">/home/user/test</span><br><span class="line"></span><br><span class="line">%pre</span><br><span class="line"># 在安裝 rpm 前執行的動作</span><br><span class="line"></span><br><span class="line">%post</span><br><span class="line"># 在安裝 rpm 後執行的動作</span><br></pre></td></tr></table></figure></li><li><p>To prevent binary stripping for specific rpm, we can add following line at the top of any rpm spec file:<br><code>%global __os_install_post %{nil}</code></p></li><li><p>Reference<br><a href="https://idevz.org/2017/07/centos-%E5%A6%82%E4%BD%95%E6%89%93-rpm-%E5%8C%85/" target="_blank" rel="noopener">https://idevz.org/2017/07/centos-%E5%A6%82%E4%BD%95%E6%89%93-rpm-%E5%8C%85/</a><br><a href="https://longfamily.pixnet.net/blog/post/282020230-centos-rpm%E5%8C%85%E5%88%B6%E4%BD%9C%E5%8E%9F%E7%90%86" target="_blank" rel="noopener">https://longfamily.pixnet.net/blog/post/282020230-centos-rpm%E5%8C%85%E5%88%B6%E4%BD%9C%E5%8E%9F%E7%90%86</a><br><a href="https://blog.csdn.net/wangcg123/article/details/53693578" target="_blank" rel="noopener">https://blog.csdn.net/wangcg123/article/details/53693578</a><br><a href="https://blog.csdn.net/trochiluses/article/details/11179901" target="_blank" rel="noopener">https://blog.csdn.net/trochiluses/article/details/11179901</a><br><a href="https://fedoraproject.org/wiki/How_to_create_an_RPM_package/zh-tw" target="_blank" rel="noopener">https://fedoraproject.org/wiki/How_to_create_an_RPM_package/zh-tw</a><br><a href="https://rpm-packaging-guide.github.io/" target="_blank" rel="noopener">https://rpm-packaging-guide.github.io/</a><br><a href="https://www.itread01.com/content/1547001025.html" target="_blank" rel="noopener">https://www.itread01.com/content/1547001025.html</a><br><a href="https://gohalo.me/post/linux-create-rpm-package.html" target="_blank" rel="noopener">https://gohalo.me/post/linux-create-rpm-package.html</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>systemd</title>
      <link href="/posts/e27e5d75/"/>
      <url>/posts/e27e5d75/</url>
      
        <content type="html"><![CDATA[<p>增刪修改 service 檔案後，更新 systemd daemon<br><code>systemctl daemon-reload</code></p><p>啟動<br><code>systemctl start example</code><br><code>systemctl start example.service</code></p><p>關閉<br><code>systemctl stop example</code><br><code>systemctl stop example.service</code></p><p>開機自動啟動<br><code>systemctl enable example.service</code><br><code>systemctl disable example.service</code></p><p>查詢狀態<br><code>systemctl status example.service</code><br><code>systemctl is-active example.service</code><br><code>systemctl is-enabled example.service</code><br><code>systemctl is-failed example.service</code></p><p>列出所有已啟動的服務<br><code>systemctl list-units</code></p><p>列出系統上所有的服務<br><code>systemctl list-units --all</code></p><p>只列出系統上所有 service 類型的服務<br><code>systemctl list-units --type=service</code></p><p>列出系統上所有未啟動的服務<br><code>systemctl list-units --all --state=inactive</code></p><p>查看 log<br><code>journalctl -e -u example.service</code><br><code>journalctl -e -u example.service --no-pager</code></p><p>權限<br><code>chmod 644 example.service</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/systemd/system/example.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=example</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/home/user</span><br><span class="line">ExecStartPre=/home/user/start_pre.sh</span><br><span class="line">ExecStart=/home/uesr/start.sh</span><br><span class="line">ExecStartPost=/home/user/start_post.sh</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p><a href="https://blog.gtwang.org/linux/linux-basic-systemctl-systemd-service-unit-tutorial-examples/" target="_blank" rel="noopener">https://blog.gtwang.org/linux/linux-basic-systemctl-systemd-service-unit-tutorial-examples/</a><br><a href="https://blog.gtwang.org/linux/linux-create-systemd-service-unit-for-python-echo-server-tutorial-examples/" target="_blank" rel="noopener">https://blog.gtwang.org/linux/linux-create-systemd-service-unit-for-python-echo-server-tutorial-examples/</a><br><a href="https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html" target="_blank" rel="noopener">https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html</a></p>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPU-Pooler</title>
      <link href="/posts/c41c82d5/"/>
      <url>/posts/c41c82d5/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cmk</title>
      <link href="/posts/bfe30151/"/>
      <url>/posts/bfe30151/</url>
      
        <content type="html"><![CDATA[<ul><li>Reference<br><a href="https://github.com/intel/CPU-Manager-for-Kubernetes" target="_blank" rel="noopener">https://github.com/intel/CPU-Manager-for-Kubernetes</a></li><li>reset/initial<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># rm -rf /etc/cmk  &lt;== 刪除舊的配置</span></span><br><span class="line">[root@openness user]<span class="comment"># kubectl taint nodes openness cmk-   &lt;== 刪除 Taint</span></span><br></pre></td></tr></table></figure></li><li>設定 cmk<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># kubectl apply -f CPU-Manager-for-Kubernetes/resources/authorization/cmk-namespace.yaml</span></span><br><span class="line">[root@openness user]<span class="comment"># kubectl apply -f CPU-Manager-for-Kubernetes/resources/authorization/cmk-rbac-rules.yaml</span></span><br><span class="line">[root@openness user]<span class="comment"># kubectl apply -f CPU-Manager-for-Kubernetes/resources/authorization/cmk-serviceaccount.yaml</span></span><br></pre></td></tr></table></figure></li><li>安裝 cmk<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># edit CPU-Manager-for-Kubernetes/resources/pods/cmk-cluster-init-pod.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: cmk-cluster-init-pod</span><br><span class="line">  name: cmk-cluster-init-pod</span><br><span class="line">  namespace: cmk-namespace</span><br><span class="line">spec:</span><br><span class="line">  serviceAccountName: cmk-serviceaccount</span><br><span class="line">  containers:</span><br><span class="line">  - args:</span><br><span class="line">      <span class="comment"># Change this value to pass different options to cluster-init.</span></span><br><span class="line">      - <span class="string">"/cmk/cmk.py cluster-init --all-host --saname=cmk-serviceaccount --namespace=cmk-namespace"</span></span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">    - <span class="string">"/bin/bash"</span></span><br><span class="line">    - <span class="string">"-c"</span></span><br><span class="line">    image: cmk:v1.4.1</span><br><span class="line">    name: cmk-cluster-init-pod</span><br><span class="line">  restartPolicy: Never</span><br><span class="line"></span><br><span class="line">kubectl apply -f CPU-Manager-for-Kubernetes/resources/pods/cmk-cluster-init-pod.yaml</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kuberneters namespace 無法刪除</title>
      <link href="/posts/33ba49e8/"/>
      <url>/posts/33ba49e8/</url>
      
        <content type="html"><![CDATA[<p>刪除 namespace 時，一直處於 Terminating 狀態</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># kubectl delete namespace &lt;ns&gt;</span><br><span class="line"></span><br><span class="line"># kubectl get namespace</span><br><span class="line">NAME              STATUS        AGE</span><br><span class="line">cdi               Active        2d23h</span><br><span class="line">default           Active        2d23h</span><br><span class="line">kube-node-lease   Active        2d23h</span><br><span class="line">kube-public       Active        2d23h</span><br><span class="line">kube-system       Active        2d23h</span><br><span class="line">kubevirt          Active        2d23h</span><br><span class="line">&lt;ns&gt;              Terminating   2d23h</span><br><span class="line">openness          Active        2d23h</span><br></pre></td></tr></table></figure><p>Step1:<br><code>kubectl get namespace &lt;ns&gt; -o json &gt; tmp.json</code></p><p>Step2:<br>刪除 spec 的內容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># vim tmp.json</span><br><span class="line">...</span><br><span class="line">    &quot;spec&quot;: &#123;</span><br><span class="line">        &quot;finalizers&quot;: [   &lt;== delete</span><br><span class="line">            &quot;kubernetes&quot;  &lt;== delete</span><br><span class="line">        ]                 &lt;== delete</span><br><span class="line">    &#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Step3: 在另一個 terminal 開啟一個 local api proxy<br><code>kubectl proxy --port=8081</code></p><p>Step4:<br><code>curl -k -H &quot;Content-Type: application/json&quot; -X PUT --data-binary @tmp.json http://127.0.0.1:8081/api/v1/namespaces/&lt;ns&gt;/finalize</code></p><ul><li>Pod 無法刪除，停留在 Terminating 狀態<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl delete pods &lt;pod&gt; --grace-period=0 --force</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deploy VM via kubevirt</title>
      <link href="/posts/12e6bda/"/>
      <url>/posts/12e6bda/</url>
      
        <content type="html"><![CDATA[<ul><li>Reference<br><a href="https://github.com/open-ness/edgecontroller" target="_blank" rel="noopener">https://github.com/open-ness/edgecontroller</a></li><li>建立 pv<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># cat persistentLocalVolume.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: kv-pv0</span><br><span class="line">  labels:</span><br><span class="line">        <span class="built_in">type</span>: <span class="built_in">local</span></span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">        storage: 15Gi</span><br><span class="line">  accessModes:</span><br><span class="line">        - ReadWriteOnce</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br><span class="line">  storageClassName: <span class="built_in">local</span>-storage</span><br><span class="line">  <span class="built_in">local</span>:</span><br><span class="line">        path: /var/vd/vol0/</span><br><span class="line">  nodeAffinity:</span><br><span class="line">        required:</span><br><span class="line">          nodeSelectorTerms:</span><br><span class="line">          - matchExpressions:</span><br><span class="line">                - key: kubernetes.io/hostname</span><br><span class="line">                  operator: In</span><br><span class="line">                  values:</span><br><span class="line">                  - openness</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: kv-pv1</span><br><span class="line">  labels:</span><br><span class="line">        <span class="built_in">type</span>: <span class="built_in">local</span></span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">        storage: 15Gi</span><br><span class="line">  accessModes:</span><br><span class="line">        - ReadWriteOnce</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br><span class="line">  storageClassName: <span class="built_in">local</span>-storage</span><br><span class="line">  <span class="built_in">local</span>:</span><br><span class="line">        path: /var/vd/vol1/</span><br><span class="line">  nodeAffinity:</span><br><span class="line">        required:</span><br><span class="line">          nodeSelectorTerms:</span><br><span class="line">          - matchExpressions:</span><br><span class="line">                - key: kubernetes.io/hostname</span><br><span class="line">                  operator: In</span><br><span class="line">                  values:</span><br><span class="line">                  - openness</span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl create -f persistentLocalVolume.yaml </span></span><br><span class="line">persistentvolume/kv-pv0 created</span><br><span class="line">persistentvolume/kv-pv1 created</span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># k get pv</span></span><br><span class="line">NAME                  CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM                         STORAGECLASS    REASON   AGE</span><br><span class="line">kv-pv0                15Gi       RWO            Retain           Available                                 <span class="built_in">local</span>-storage            4s</span><br><span class="line">kv-pv1                15Gi       RWO            Retain           Available                                 <span class="built_in">local</span>-storage            4s</span><br></pre></td></tr></table></figure></li><li>上傳 vm image，建立 dv<ul><li>vm 宣告的 size 必須小於 pv 宣告的大小 (15Gi)</li><li>透過 cdi-uploadproxy 上傳 image<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># kubectl get svc -n cdi</span></span><br><span class="line">NAME              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">cdi-api           ClusterIP   10.105.96.139   &lt;none&gt;        443/TCP   27h</span><br><span class="line">cdi-uploadproxy   ClusterIP   10.106.44.64    &lt;none&gt;        443/TCP   27h</span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl virt image-upload dv centos-dv --image-path=/home/user/CentOS-7-x86_64-GenericCloud-1907.qcow2 --insecure --size=15Gi --storage-class=local-storage --uploadproxy-url=https://10.106.44.64:443</span></span><br><span class="line">DataVolume default/centos-dv created</span><br><span class="line">Waiting <span class="keyword">for</span> PVC centos-dv upload pod to be ready...</span><br><span class="line">Pod now ready</span><br><span class="line">Uploading data to https://10.106.44.64:443</span><br><span class="line"></span><br><span class="line"> 898.75 MiB / 898.75 MiB [=====================================================================================================================================================================================================================================] 100.00% 2m19s</span><br><span class="line"></span><br><span class="line">Uploading data completed successfully, waiting <span class="keyword">for</span> processing to complete, you can hit ctrl-c without interrupting the progress</span><br><span class="line">Processing completed successfully</span><br><span class="line">Uploading /home/user/CentOS-7-x86_64-GenericCloud-1907.qcow2 completed successfully</span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl get dv</span></span><br><span class="line">NAME        PHASE         PROGRESS   AGE</span><br><span class="line">centos-dv   UploadReady              2m24s</span><br></pre></td></tr></table></figure></li></ul></li><li>安裝 vm<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># cat statefullVM.yaml</span></span><br><span class="line">apiVersion: kubevirt.io/v1alpha3</span><br><span class="line">kind: VirtualMachine</span><br><span class="line">metadata:</span><br><span class="line">  name: centos-vm</span><br><span class="line">spec:</span><br><span class="line">  running: <span class="literal">false</span></span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        kubevirt.io/domain: centos-vm</span><br><span class="line">    spec:</span><br><span class="line">      domain:</span><br><span class="line">        cpu:</span><br><span class="line">          cores: 2</span><br><span class="line">        devices:</span><br><span class="line">          disks:</span><br><span class="line">          - disk:</span><br><span class="line">              bus: virtio</span><br><span class="line">            name: rootfs</span><br><span class="line">          interfaces:</span><br><span class="line">          - name: default</span><br><span class="line">            bridge: &#123;&#125;</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            memory: 4096M</span><br><span class="line">      networks:</span><br><span class="line">      - name: default</span><br><span class="line">        pod: &#123;&#125;</span><br><span class="line">      volumes:</span><br><span class="line">        - name: rootfs</span><br><span class="line">          persistentVolumeClaim:</span><br><span class="line">            claimName: centos-dv</span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl create -f statefullVM.yaml</span></span><br><span class="line">[root@openness user]<span class="comment"># kubectl virt start centos-vm</span></span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl get vm</span></span><br><span class="line">NAME        AGE   RUNNING   VOLUME</span><br><span class="line">centos-vm   29s   <span class="literal">true</span>      </span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl get vmi</span></span><br><span class="line">NAME        AGE   PHASE     IP            NODENAME</span><br><span class="line">centos-vm   20s   Running   10.244.0.78   openness</span><br></pre></td></tr></table></figure></li><li>vm shell<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># kubectl virt console centos-vm</span></span><br><span class="line">[root@openness user]<span class="comment"># ssh 10.244.0.78</span></span><br></pre></td></tr></table></figure></li><li>建立 service for cdi-uploadproxy<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line"> name: cdi-uploadproxy-nodeport</span><br><span class="line"> namespace: cdi</span><br><span class="line"> labels:</span><br><span class="line">   cdi.kubevirt.io: <span class="string">"cdi-uploadproxy"</span></span><br><span class="line">spec:</span><br><span class="line"> <span class="built_in">type</span>: NodePort</span><br><span class="line"> ports:</span><br><span class="line">   - port: 443</span><br><span class="line">     targetPort: 8443</span><br><span class="line">     nodePort: 31001</span><br><span class="line">     protocol: TCP</span><br><span class="line"> selector:</span><br><span class="line">   cdi.kubevirt.io: cdi-uploadproxy</span><br></pre></td></tr></table></figure></li><li>設定 vm 使用 dedicated CPU<ul><li>dedicatedCpuPlacement 設定 vm 使用 dedicated CPU</li><li>isolateEmulatorThread 設定 qemu 也執行在 dedicated CPU<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># cat statefullVM.yaml</span></span><br><span class="line">...</span><br><span class="line">    spec:</span><br><span class="line">      domain:</span><br><span class="line">        cpu:</span><br><span class="line">          cores: 2</span><br><span class="line">          dedicatedCpuPlacement: <span class="literal">true</span></span><br><span class="line">          isolateEmulatorThread: <span class="literal">true</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul></li><li>設定了 dedicated CPU後，觀察 pod 的 description，可以發現有 cpumanager=true<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># kubectl describe pod virt-launcher-centos-vm-r9qxw</span></span><br><span class="line">...</span><br><span class="line">Node-Selectors:    cpumanager=<span class="literal">true</span></span><br><span class="line">                   kubevirt.io/schedulable=<span class="literal">true</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li>edge node 預設不會有 cpumanager 的 label，在啟動 vmi 時會有以下錯誤<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Events:</span><br><span class="line">  Type     Reason            Age        From               Message</span><br><span class="line">  ----     ------            ----       ----               -------</span><br><span class="line">  Warning  FailedScheduling  &lt;unknown&gt;  default-scheduler  0/1 nodes are available: 1 node(s) didn&apos;t match node selector.</span><br><span class="line">  Warning  FailedScheduling  &lt;unknown&gt;  default-scheduler  0/1 nodes are available: 1 node(s) didn&apos;t match node selector.</span><br><span class="line">  Warning  FailedScheduling  &lt;unknown&gt;  default-scheduler  0/1 nodes are available: 1 node(s) didn&apos;t match node selector.</span><br></pre></td></tr></table></figure></li><li>新增 node 的 label<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># kubectl label nodes openness cpumanager=true</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> Kubevirt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vmx</title>
      <link href="/posts/21b02114/"/>
      <url>/posts/21b02114/</url>
      
        <content type="html"><![CDATA[<ol><li>檢查 cpu 是否支持虛擬化<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ lscpu | grep vmx</span><br><span class="line">Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc eagerfpu pni pclmulqdq vmx ssse3 cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single tpr_shadow flexpriority fsgsbase avx2 invpcid rdseed clflushopt md_clear flush_l1d</span><br></pre></td></tr></table></figure></li><li>確認 kvm 是否加載<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ lsmod | grep kvm</span><br><span class="line">kvm_intel             188768  0 </span><br><span class="line">kvm                   649506  1 kvm_intel</span><br><span class="line">irqbypass              13503  2 kvm,vfio_pci</span><br><span class="line">$  ll /dev/kvm</span><br><span class="line">crw-rw-rw-. 1 root root 10, 232 Sep  6 20:42 /dev/kvm</span><br></pre></td></tr></table></figure></li><li>resources on Kubernetes for OpenNESS<br>如果 vm 不支援 VT-x，allocatable 的 devices.kubevirt.io/kvm 數量會顯示 “0”<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get node -o yaml</span><br><span class="line">...</span><br><span class="line">  status:</span><br><span class="line">    allocatable:</span><br><span class="line">      devices.kubevirt.io/kvm: <span class="string">"110"</span></span><br><span class="line">      devices.kubevirt.io/tun: <span class="string">"110"</span></span><br><span class="line">      devices.kubevirt.io/vhost-net: <span class="string">"110"</span></span><br><span class="line">    capacity:</span><br><span class="line">      devices.kubevirt.io/kvm: <span class="string">"110"</span></span><br><span class="line">      devices.kubevirt.io/tun: <span class="string">"110"</span></span><br><span class="line">      devices.kubevirt.io/vhost-net: <span class="string">"110"</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li>Settings of VirtualBox<ul><li>VirtualBox的版本必須更新到 6.1 以上</li><li>預設 “啟用 Nested VT-x/AMD-V(V)” 的選項是反灰，不能選擇的<br><img src="/posts/21b02114/virtualbox_01.JPG" alt></li><li>使用指令去設定<br><code>VBoxManage.exe modifyvm vm-name --nested-hw-virt on</code></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>update_go_version</title>
      <link href="/posts/606eb6c7/"/>
      <url>/posts/606eb6c7/</url>
      
        <content type="html"><![CDATA[<ol start="0"><li>Information of go<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ go version</span><br><span class="line">go version go1.12.13 linux/amd64</span><br><span class="line">$ echo $GOROOT</span><br><span class="line">/usr/local/go</span><br></pre></td></tr></table></figure></li><li>Delete old version<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm -rf $GOROOT</span><br></pre></td></tr></table></figure></li><li>Download target go version<br><a href="https://golang.org/dl/" target="_blank" rel="noopener">https://golang.org/dl/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://golang.org/dl/go1.15.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li>Install<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tar -C /usr/local -xzf go1.15.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> CentOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Telemetry Aware Scheduler</title>
      <link href="/posts/195363fe/"/>
      <url>/posts/195363fe/</url>
      
        <content type="html"><![CDATA[<ul><li>TAS 包含兩個 container<ul><li>tasext<br>a TAS Scheduler Extender which is an extension to K8s scheduler</li><li>tascont<br>a TAS Policy Controller which consumes TAS policies</li></ul></li><li>Create a secret that allows contact with TAS<br>In a production cluster, these certs should be set up as per normal cluster security policy.<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret tls extender-secret --cert /etc/kubernetes/pki/ca.crt --key /etc/kubernetes/pki/ca.key</span><br></pre></td></tr></table></figure>Error message in tasext<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 00:45:41 http: TLS handshake error from 10.0.2.15:35194: remote error: tls: unknown certificate authority\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T00:45:41.423020853Z&quot;&#125;</span><br></pre></td></tr></table></figure></li><li>Update the configuration of the core K8s scheduler to configure a cluster for TAS deployment<br>主要是在 <code>scheduler-extender-configmap.yaml</code> 更新 <code>tas-service ip</code><ul><li>tas-service information<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NAME                       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                       AGE</span><br><span class="line">tas-service                ClusterIP   10.104.110.87    &lt;none&gt;        9001/TCP                      23h</span><br></pre></td></tr></table></figure></li><li>configure-scheduler.sh<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MANIFEST_FILE=/etc/kubernetes/manifests/kube-scheduler.yaml</span><br><span class="line">CONFIG_MAP=scheduler-extender-configmap.yaml</span><br><span class="line">CLUSTER_ROLE=configmap-getter.yaml</span><br><span class="line"></span><br><span class="line">kubectl apply -f $CONFIG_MAP</span><br><span class="line">kubectl apply -f $CLUSTER_ROLE</span><br><span class="line">kubectl create clusterrolebinding scheduler-config-map --clusterrole=configmapgetter --user=system:kube-scheduler</span><br><span class="line"></span><br><span class="line">sed -i &apos;/^    - --policy-configmap/d&apos; $MANIFEST_FILE</span><br><span class="line">sed -i &apos;/^  dnsPolicy: ClusterFirstWithHostNet/d&apos; $MANIFEST_FILE</span><br><span class="line">sed -e &quot;/    - kube-scheduler/a\\</span><br><span class="line">    - --policy-configmap=scheduler-extender-policy\n    - --policy-configmap-namespace=kube-system&quot; $MANIFEST_FILE -i</span><br><span class="line">sed -e &quot;/spec/a\\</span><br><span class="line">  dnsPolicy: ClusterFirstWithHostNet&quot; $MANIFEST_FILE -i</span><br></pre></td></tr></table></figure></li><li>configmap-getter.yaml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  name: configmapgetter</span><br><span class="line">  namespace: kube-system </span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;configmaps&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;]</span><br></pre></td></tr></table></figure></li><li>scheduler-extender-configmap.yaml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: scheduler-extender-policy</span><br><span class="line">  namespace: kube-system</span><br><span class="line">data:</span><br><span class="line">  policy.cfg: |</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;kind&quot; : &quot;Policy&quot;,</span><br><span class="line">        &quot;apiVersion&quot; : &quot;v1&quot;,</span><br><span class="line">        &quot;extenders&quot; : [</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;urlPrefix&quot;: &quot;https://10.104.110.87:9001&quot;,</span><br><span class="line">              &quot;apiVersion&quot;: &quot;v1&quot;,</span><br><span class="line">              &quot;prioritizeVerb&quot;: &quot;scheduler/prioritize&quot;,</span><br><span class="line">              &quot;filterVerb&quot;: &quot;scheduler/filter&quot;,</span><br><span class="line">              &quot;weight&quot;: 1,</span><br><span class="line">              &quot;enableHttps&quot;: true,</span><br><span class="line">              &quot;managedResources&quot;: [</span><br><span class="line">                   &#123;</span><br><span class="line">                     &quot;name&quot;: &quot;telemetry/scheduling&quot;,</span><br><span class="line">                     &quot;ignoredByScheduler&quot;: true</span><br><span class="line">                   &#125;</span><br><span class="line">              ],</span><br><span class="line">              &quot;ignorable&quot;: true</span><br><span class="line">          &#125;</span><br><span class="line">         ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>apply<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ./configure-scheduler.sh</span><br><span class="line">configmap/scheduler-extender-policy configured</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/configmapgetter unchanged</span><br><span class="line">Error from server (AlreadyExists): clusterrolebindings.rbac.authorization.k8s.io &quot;scheduler-config-map&quot; already exists</span><br></pre></td></tr></table></figure></li></ul></li><li>Create TASPolicy<ul><li>get available metric<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get --raw /apis/custom.metrics.k8s.io/v1beta1 | jq .</span><br></pre></td></tr></table></figure></li><li>get value of target metric<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get --raw /apis/custom.metrics.k8s.io/v1beta1/nodes/*/memory_MemFree_bytes | jq .</span><br></pre></td></tr></table></figure></li><li>policy.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: telemetry.intel.com/v1alpha1</span><br><span class="line">kind: TASPolicy</span><br><span class="line">metadata:</span><br><span class="line">  name: demo-policy</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  strategies:</span><br><span class="line">    deschedule:</span><br><span class="line">      rules:</span><br><span class="line">      - metricname: memory_MemFree_bytes</span><br><span class="line">        operator: LessThan</span><br><span class="line">        target: 10000000</span><br><span class="line">    dontschedule:</span><br><span class="line">      rules:</span><br><span class="line">      - metricname: memory_MemFree_bytes</span><br><span class="line">        operator: LessThan</span><br><span class="line">        target: 1000000</span><br><span class="line">    scheduleonmetric:</span><br><span class="line">      rules:</span><br><span class="line">      - metricname: memory_MemFree_bytes</span><br><span class="line">        operator: GreaterThan</span><br></pre></td></tr></table></figure></li><li>log of adding a policy in tascont<br>會一直去 monitor memory_MemFree_bytes 的值<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 registering scheduleonmetric from demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.856944522Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Adding strategies: scheduleonmetric demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.856986479Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Added memory_MemFree_bytes\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.856995355Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 registering dontschedule from demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857002389Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Adding strategies: dontschedule demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857008778Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Added memory_MemFree_bytes\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857014218Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 registering deschedule from demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857019374Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Adding strategies: deschedule demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857024892Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Added memory_MemFree_bytes\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.85703006Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Added policy, demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857034987Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:52 Evaluating demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:52.302196222Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:52 no metric memory_MemFree_bytes found\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:52.302220044Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:54 Evaluating demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:54.38687469Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:54 openness memory_MemFree_bytes = 194686976\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:54.3869245Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 Evaluating demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.303365136Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 openness memory_MemFree_bytes = 194686976\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.303406196Z&quot;&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>log of deleting a policy in tascont<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 Removed demo-policy: deschedule from strategy register\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.865109714Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 Removed demo-policy: scheduleonmetric from strategy register\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.865133184Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 Removed demo-policy: dontschedule from strategy register\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.865155074Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 deletingpolicies/default/demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.865158043Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 Policy:  demo-policy  deleted\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.865160837Z&quot;&#125;</span><br></pre></td></tr></table></figure></li><li>Linking a workload to a policy<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: demo-app</span><br><span class="line">  labels:</span><br><span class="line">    app: demo</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: demo</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: demo</span><br><span class="line">        telemetry-policy: demo-policy</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: nginx:latest</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            telemetry/scheduling: 1</span><br><span class="line">      affinity:</span><br><span class="line">        nodeAffinity:</span><br><span class="line">          requiredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">            nodeSelectorTerms:</span><br><span class="line">              - matchExpressions:</span><br><span class="line">                  - key: demo-policy</span><br><span class="line">                    operator: NotIn</span><br><span class="line">                    values:</span><br><span class="line">                      - violating</span><br></pre></td></tr></table></figure><ul><li>log of adding a pod with demo-policy in tasext<ul><li>允許部署<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:05:04 filter request recieved\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:05:04.323434954Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:05:04 openness memory_MemFree_bytes = 160436224\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:05:04.332601831Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:05:04 Filtered nodes for demo-policy : openness \n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:05:04.332642768Z&quot;&#125;</span><br></pre></td></tr></table></figure></li><li>不允許部署<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:07:11 filter request recieved\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:07:11.429996533Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:07:11 openness memory_MemFree_bytes = 147173376\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:07:11.433672095Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:07:11 openness violating : memory_MemFree_bytes LessThan 5000000000\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:07:11.433697985Z&quot;&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>不允許部署時，Events of the demo-app pod<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Events:</span><br><span class="line">  Type     Reason            Age        From               Message</span><br><span class="line">  ----     ------            ----       ----               -------</span><br><span class="line">  Warning  FailedScheduling  &lt;unknown&gt;  default-scheduler  0/1 nodes are available: 1 Node violates.</span><br></pre></td></tr></table></figure></li></ul></li><li>Deploy and Configure Kubernetes Descheduler<ul><li>Install descheduler<br>module requires Go 1.15<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/kubernetes-sigs/descheduler</span><br><span class="line">$ <span class="built_in">cd</span> descheduler</span><br><span class="line">$ make</span><br><span class="line">$ cp ./_output/bin/descheduler /usr/bin</span><br></pre></td></tr></table></figure></li><li>Run the descheduler in order to stop the workloads on the offending nodes<ul><li>descheduler-policy.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cat descheduler-policy.yaml</span><br><span class="line">apiVersion: <span class="string">"descheduler/v1alpha1"</span></span><br><span class="line">kind: <span class="string">"DeschedulerPolicy"</span></span><br><span class="line">strategies:</span><br><span class="line">  <span class="string">"RemovePodsViolatingNodeAffinity"</span>:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    params:</span><br><span class="line">      nodeAffinityType:</span><br><span class="line">        - <span class="string">"requiredDuringSchedulingIgnoredDuringExecution"</span></span><br></pre></td></tr></table></figure></li><li>Apply<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ descheduler --logtostderr -v4 --kubeconfig=$HOME/.kube/config --policy-config-file=descheduler-policy.yaml</span><br></pre></td></tr></table></figure></li><li>Error<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I0828 10:47:32.515718   29836 node.go:45] node lister returned empty list, now fetch directly</span><br><span class="line">I0828 10:47:32.531210   29836 descheduler.go:106] The cluster size is 0 or 1 meaning eviction causes service disruption or degradation. So aborting..</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li>Reference<br><a href="https://github.com/intel/telemetry-aware-scheduling" target="_blank" rel="noopener">https://github.com/intel/telemetry-aware-scheduling</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deployment nginx on k8s</title>
      <link href="/posts/9c134f6f/"/>
      <url>/posts/9c134f6f/</url>
      
        <content type="html"><![CDATA[<ul><li>create a namespace<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vim namespace.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: demo</span><br><span class="line">$ kubectl create -f namespace.yml</span><br></pre></td></tr></table></figure></li><li>create a pod<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ vim pod.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-pod</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx-label</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">$ kubectl create -f pod.yml -n demo</span><br></pre></td></tr></table></figure></li><li>create a deployment<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ cat deployment.yaml</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx-label</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx-label</span><br><span class="line">    spec:</span><br><span class="line">      containers: </span><br><span class="line">        - name: nginx</span><br><span class="line">          image: nginx</span><br><span class="line">          ports:</span><br><span class="line">          - containerPort: 80</span><br><span class="line">$ kubectl create -f deployment.yml -n demo</span><br></pre></td></tr></table></figure></li><li>create a service<ul><li>selector 設定成 pod 的 label，代表 service 為這單一個 pod 提供封裝</li><li>selector 設定為 deployment 的 label，代表 service 對這些 Replica Set 提供封裝以及 load balance<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ vim service.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-service</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: 9527</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">  externalIPs:</span><br><span class="line">  - 10.60.6.49</span><br><span class="line">  selector: </span><br><span class="line">    app: nginx-label</span><br><span class="line">$ kubectl create -f service.yml -n demo</span><br></pre></td></tr></table></figure></li></ul></li><li>web page<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.60.6.49:9527</span><br></pre></td></tr></table></figure></li><li>get information<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pod -n=demo</span><br><span class="line">NAME                                READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-deployment-58864f7df9-26tfx   1/1     Running   0          13m</span><br><span class="line">nginx-deployment-58864f7df9-dqcqv   1/1     Running   0          13m</span><br><span class="line">nginx-deployment-58864f7df9-sb9ks   1/1     Running   0          13m</span><br><span class="line">nginx-pod                           1/1     Running   0          13m</span><br><span class="line"></span><br><span class="line">$ kubectl get deployment -n=demo</span><br><span class="line">NAME               READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-deployment   3/3     3            3           13m</span><br><span class="line"></span><br><span class="line">$ kubectl get service -n=demo</span><br><span class="line">NAME            TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE</span><br><span class="line">nginx-service   NodePort   10.111.31.254   10.60.6.49    9527:31755/TCP   13m</span><br></pre></td></tr></table></figure></li><li>直接將 pod 的 port forwarding 到 host<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl -n demo port-forward --address 0.0.0.0 pod/nginx-pod 9528:80</span><br></pre></td></tr></table></figure><ul><li>web page<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.60.6.49:9528</span><br></pre></td></tr></table></figure></li></ul></li><li>scenario<ul><li>Pod + Service</li><li>Deployment + Service</li><li>Pod + Deployment + Service</li></ul></li><li>Reference<br><a href="https://zhuanlan.zhihu.com/p/134637095" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/134637095</a><br><a href="https://phoenixnap.com/kb/kubectl-port-forward" target="_blank" rel="noopener">https://phoenixnap.com/kb/kubectl-port-forward</a><br><a href="https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/" target="_blank" rel="noopener">https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes Commands</title>
      <link href="/posts/61268ed9/"/>
      <url>/posts/61268ed9/</url>
      
        <content type="html"><![CDATA[<ul><li>sample yaml: web.yaml<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">frontend</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">19999</span></span><br></pre></td></tr></table></figure></li><li>建立 pod<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash-4.2# kubectl apply -f web.yaml </span><br><span class="line">pod/web created</span><br></pre></td></tr></table></figure></li><li>Get information<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash-4.2# kubectl get pods</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE</span><br><span class="line">web                             1/1     Running   0          41s</span><br></pre></td></tr></table></figure></li><li>刪除 pod<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash-4.2# kubectl delete pod web</span><br><span class="line">pod &quot;web&quot; deleted</span><br></pre></td></tr></table></figure></li></ul><p>kubectl create<br>It first deletes the resources and then creates it from the file provided.<br>kubectl apply<br>It directly updates in the current live source, only the attributes which are given in the file.</p><p>kubectl get pods –show-labels</p><p>kubectl exec -it web – /bin/bash</p><p>当 Pod 包含多个容器时打开 shell<br>kubectl exec -it my-pod –container my-app – /bin/bash</p><p>沒有 namespace 的元件，利用 <code>kubectl get pod</code> 查詢<br>有 namespace 的元件，要利用 <code>kubectl get pod --all-namespaces</code> 查詢</p><p>kubectl get pod<br>kubectl get pod –all-namespaces<br>kubectl get pod -o wide –all-namespaces<br>kubectl get service<br>kubectl get svc<br>kubectl get namespace<br>kubectl get deployment</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NUMA</title>
      <link href="/posts/4261b1b3/"/>
      <url>/posts/4261b1b3/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Socket: 實體 CPU 的數量，一般 PC 只會有一個 CPU，伺服器等級的 Server 在硬體上才會有多個 CPUs</p></li><li><p>Core: CPU 裡獨立的一組程式執行的硬體單元</p></li><li><p>Thread: Core 裡邏輯的執行單元</p></li><li><p>Sample</p><ul><li>有 1 個 CPU，每個 CPU 上有 4 Core，每個 Core 有 1 個 Threads<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ lscpu</span><br><span class="line">Thread(s) per core:  1</span><br><span class="line">Core(s) per socket:  4</span><br><span class="line">Socket(s):           1</span><br><span class="line">NUMA node(s):        1</span><br><span class="line">NUMA node0 CPU(s):   0-3</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用 lstopo 套件來獲取資訊</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo apt install hwloc</span><br><span class="line">user@ubuntu:~$ lstopo</span><br><span class="line">Machine (7977MB)</span><br><span class="line">  Package L#0</span><br><span class="line">    L3 L#0 (8192KB) + L2 L#0 (256KB) + L1d L#0 (32KB) + L1i L#0 (32KB) + Core L#0 + PU L#0 (P#0)</span><br><span class="line">    L3 L#1 (8192KB) + L2 L#1 (256KB) + L1d L#1 (32KB) + L1i L#1 (32KB) + Core L#1 + PU L#1 (P#1)</span><br><span class="line">    L3 L#2 (8192KB) + L2 L#2 (256KB) + L1d L#2 (32KB) + L1i L#2 (32KB) + Core L#2 + PU L#2 (P#2)</span><br><span class="line">    L3 L#3 (8192KB) + L2 L#3 (256KB) + L1d L#3 (32KB) + L1i L#3 (32KB) + Core L#3 + PU L#3 (P#3)</span><br><span class="line">  HostBridge L#0</span><br><span class="line">    PCI 80ee:beef</span><br><span class="line">      GPU L#0 &quot;controlD64&quot;</span><br><span class="line">      GPU L#1 &quot;card0&quot;</span><br><span class="line">    PCI 8086:100e</span><br><span class="line">      Net L#2 &quot;em1&quot;</span><br><span class="line">    PCI 8086:100e</span><br><span class="line">      Net L#3 &quot;em2&quot;</span><br><span class="line">    PCI 8086:2829</span><br><span class="line">      Block(Disk) L#4 &quot;sda&quot;</span><br><span class="line">      Block(Removable Media Device) L#5 &quot;sr0&quot;</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ lstopo --of png &gt; server.png</span><br></pre></td></tr></table></figure><p><img src="/posts/4261b1b3/server.png" alt></p></li><li><p>使用 numactl 套件來獲取資訊</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo apt install numactl</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ numactl --hardware</span><br><span class="line">available: 1 nodes (0)</span><br><span class="line">node 0 cpus: 0 1 2 3</span><br><span class="line">node 0 size: 7976 MB</span><br><span class="line">node 0 free: 5907 MB</span><br><span class="line">node distances:</span><br><span class="line">node   0 </span><br><span class="line">  0:  10 </span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ numactl --show</span><br><span class="line">policy: default</span><br><span class="line">preferred node: current</span><br><span class="line">physcpubind: 0 1 2 3 </span><br><span class="line">cpubind: 0 </span><br><span class="line">nodebind: 0 </span><br><span class="line">membind: 0</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
            <tag> NUMA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPU Information</title>
      <link href="/posts/e3a8a05c/"/>
      <url>/posts/e3a8a05c/</url>
      
        <content type="html"><![CDATA[<h5 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ lscpu</span><br><span class="line">Architecture:          x86_64</span><br><span class="line">CPU op-mode(s):        32-bit, 64-bit</span><br><span class="line">Byte Order:            Little Endian</span><br><span class="line">CPU(s):                8</span><br><span class="line">On-line CPU(s) list:   0-7</span><br><span class="line">Thread(s) per core:    1</span><br><span class="line">Core(s) per socket:    1</span><br><span class="line">Socket(s):             8</span><br><span class="line">NUMA node(s):          1</span><br><span class="line">Vendor ID:             GenuineIntel</span><br><span class="line">CPU family:            6</span><br><span class="line">Model:                 79</span><br><span class="line">Model name:            Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz</span><br><span class="line">Stepping:              1</span><br><span class="line">CPU MHz:               2195.109</span><br><span class="line">BogoMIPS:              4396.04</span><br><span class="line">Hypervisor vendor:     Xen</span><br><span class="line">Virtualization type:   full</span><br><span class="line">L1d cache:             32K</span><br><span class="line">L1i cache:             32K</span><br><span class="line">L2 cache:              256K</span><br><span class="line">L3 cache:              25600K</span><br><span class="line">NUMA node0 CPU(s):     0-7</span><br><span class="line">Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush acpi mmx fxsr sse sse2 ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti intel_ppin fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm rdseed adx smap xsaveopt</span><br></pre></td></tr></table></figure><h5 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h5><ul><li>Get information<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ wmic</span><br><span class="line">wmic:root\cli&gt;cpu get Name</span><br><span class="line">Name</span><br><span class="line">Intel(R) Core(TM) i7-8550U CPU @ 1.80GHz</span><br><span class="line"></span><br><span class="line">wmic:root\cli&gt;cpu get NumberOfCores</span><br><span class="line">NumberOfCores</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line">wmic:root\cli&gt;cpu get NumberOfLogicalProcessors</span><br><span class="line">NumberOfLogicalProcessors</span><br><span class="line">8</span><br></pre></td></tr></table></figure></li><li>有一個 CPU，CPU 上有 4 Cores，每個 Core 有兩個 Threads，所以邏輯上總共有 8 核可以使用<br>對應到 Socket, Core, Thread 的結果為<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Thread(s) per core:    2</span><br><span class="line">Core(s) per socket:    4</span><br><span class="line">Socket(s):             1</span><br></pre></td></tr></table></figure></li><li>Get detail information of CPU<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wmic:root\cli&gt;cpu get</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS Notes</title>
      <link href="/posts/645e3264/"/>
      <url>/posts/645e3264/</url>
      
        <content type="html"><![CDATA[<ul><li>網路介片卡</li></ul><ol><li>NAT</li><li>「僅限主機」 介面卡</li></ol><ul><li><p>設定 sudo 權限<br>錯誤訊息: user is not in the sudoers file.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[user@localhost ~]# su root</span><br><span class="line">[user@localhost ~]# vi /etc/sudoers</span><br><span class="line">+ user ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure></li><li><p>設定網路<br>錯誤訊息: cannot find a valid baseurl for repo: base/7/x86_64</p><ul><li>原始設定<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[user@localhost ~]# ip addr</span><br><span class="line">1: lo:  &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: enp0s3:  &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 08:00:27:2b:73:d4 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">3: enp0s8:  &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 08:00:27:c1:72:7d brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure></li><li>修改 <code>ONBOOT=yes</code> 讓網卡在開機時生效<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[user@localhost ~]# sudo vi /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br><span class="line">[user@localhost ~]# sudo vi /etc/sysconfig/network-scripts/ifcfg-enp0s8</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp0s3</span><br><span class="line">UUID=baa08a94-1e59-4a41-aa4a-5ad463c51796</span><br><span class="line">DEVICE=enp0s3</span><br><span class="line">ONBOOT=no</span><br></pre></td></tr></table></figure></li><li>重啟網路<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[user@localhost ~]# sudo service network restart</span><br></pre></td></tr></table></figure></li></ul></li><li><p>更新<br>sudo yum update</p></li><li><p>常用工具<br>sudo yum install openssh git net-tools</p></li><li><p>增加 root 磁區大小</p></li></ul><ol><li>先增加 vdi 配置的 disk 大小</li><li>重新設定 root 磁區<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]# fdisk /dev/sda</span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Command (m for help): n</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (2 primary, 0 extended, 2 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (3,4, default 3): 3</span><br><span class="line">First sector (209715200-629145599, default 209715200): 209715200</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (209715200-629145599, default 629145599): 629145599</span><br><span class="line">Partition 3 of type Linux and of size 200 GiB is set</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line"></span><br><span class="line">WARNING: Re-reading the partition table failed with error 16: Device or resource busy.</span><br><span class="line">The kernel still uses the old table. The new table will be used at</span><br><span class="line">the next reboot or after you run partprobe(8) or kpartx(8)</span><br><span class="line">Syncing disks.</span><br><span class="line"></span><br><span class="line">[root@centos ~]$ reboot</span><br><span class="line">[root@centos ~]$ df -h</span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs                 5.4G     0  5.4G   0% /dev</span><br><span class="line">tmpfs                    5.4G     0  5.4G   0% /dev/shm</span><br><span class="line">tmpfs                    5.4G  8.6M  5.4G   1% /run</span><br><span class="line">tmpfs                    5.4G     0  5.4G   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root   50G   32G   19G  64% /</span><br><span class="line">/dev/sda1               1014M  220M  795M  22% /boot</span><br><span class="line">/dev/mapper/centos-home   45G  7.2G   37G  17% /home</span><br><span class="line">tmpfs                    1.1G     0  1.1G   0% /run/user/1000</span><br><span class="line">[root@centos ~]$</span><br><span class="line">[root@centos ~]# pvcreate /dev/sda3</span><br><span class="line">  Physical volume &quot;/dev/sda3&quot; successfully created.</span><br><span class="line">[root@centos ~]# vgextend centos /dev/sda3</span><br><span class="line">  Volume group &quot;centos&quot; successfully extended</span><br><span class="line">[root@centos ~]# lvextend /dev/mapper/centos-root /dev/sda3</span><br><span class="line">  Size of logical volume centos/root changed from 50.00 GiB (12800 extents) to &lt;250.00 GiB (63999 extents).</span><br><span class="line">  Logical volume centos/root successfully resized.</span><br><span class="line">[root@centos ~]# xfs_growfs /dev/mapper/centos-root</span><br><span class="line">meta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=3276800 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=13107200, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line">log      =internal               bsize=4096   blocks=6400, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 13107200 to 65534976</span><br><span class="line">[root@centos ~]$</span><br><span class="line">[root@centos ~]$ df -h</span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs                 5.4G     0  5.4G   0% /dev</span><br><span class="line">tmpfs                    5.4G     0  5.4G   0% /dev/shm</span><br><span class="line">tmpfs                    5.4G   13M  5.4G   1% /run</span><br><span class="line">tmpfs                    5.4G     0  5.4G   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root  250G   33G  218G  13% /</span><br><span class="line">/dev/sda1               1014M  220M  795M  22% /boot</span><br><span class="line">/dev/mapper/centos-home   45G  7.2G   37G  17% /home</span><br><span class="line">tmpfs                    1.1G     0  1.1G   0% /run/user/1000</span><br></pre></td></tr></table></figure></li></ol><ul><li>Trouble shooting<br>在輸入指令時，系統有時會提示：<br>You have new mail in /var/spool/mail/root<br>這是因為在 cron 中執行的腳本有輸出導致的，cron 會把輸出內容發郵件給目前用戶<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/2 * * * * /etc/test.sh &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> CentOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes Notes</title>
      <link href="/posts/d597c8d0/"/>
      <url>/posts/d597c8d0/</url>
      
        <content type="html"><![CDATA[<p><img src="/posts/d597c8d0/image_01.jpg" alt></p><h3 id="四大元件"><a href="#四大元件" class="headerlink" title="四大元件"></a>四大元件</h3><ol><li>Pod</li><li>Worker Node</li><li>Master Node</li><li>Cluster</li></ol><h5 id="Pod"><a href="#Pod" class="headerlink" title="Pod"></a>Pod</h5><ul><li>Kubernetes 中執行的最小基本單元</li><li>一個 Pod 內可以包含一個或多個 container</li><li>同一個 Pod 中的 containers 共享相同的資源、檔案系統，並共享相同的 network namespace，可以透過 localhost 互相溝通</li></ul><h5 id="Worker-Node"><a href="#Worker-Node" class="headerlink" title="Worker Node"></a>Worker Node</h5><ul><li>Kubernetes 中執行的最小硬體單元</li><li>一個 Worker Node 至小會對應到一個 VM，或是一個虛擬的機器集合</li><li>一個 Worker Node 內包含三個元件<ul><li>kubelet: 該 Node 的管理員，負責管理該 Node 上的所有 Pods 的狀態並負責與 Master 溝通</li><li>kube-proxy : 該 Node 的傳訊員，負責更新 Node 的 iptables，讓其他 Node 的物件可以得知該 Node 上所有 Pods 的最新狀態</li><li>Container Runtime: 該 Node 真正負責容器執行的程式，以 Docker 容器為例，其對應的 Container Runtime 就是 Docker Engine</li></ul></li></ul><h5 id="Master-Node"><a href="#Master-Node" class="headerlink" title="Master Node"></a>Master Node</h5><p>負責管理 Kubernetes 系統中，所有的 Pods 跟 Worker Node，包含四個部分</p><ul><li><p>kube-apiserver<br>管理整個 Kubernetes 所需 API 的接口（Endpoint），例如從 Command Line 下 kubectl 指令就會把指令送到這裏<br>負責 Node 之間的溝通橋樑，每個 Node 彼此不能直接溝通，必須要透過 apiserver 轉介<br>負責 Kubernetes 中的請求的身份認證與授權</p></li><li><p>etcd<br>用來存放 Kubernetes Cluster 的資料作為備份，當 Master 因為某些原因而故障時，我們可以透過 etcd 幫我們還原 Kubernetes 的狀態</p></li><li><p>kube-scheduler<br>整個 Kubernetes 的 Pods 調度員，scheduler 會監視新建立但還沒有被指定要跑在哪個 Node 上的 Pod，並根據每個 Node 上面資源規定、硬體限制等條件去協調出一個最適合放置的 Node 讓該 Pod 跑</p></li><li><p>kube-controller-manager<br>負責管理並運行 Kubernetes controller 的組件，簡單來說 controller 就是 Kubernetes 裡一群負責監視 Cluster 狀態的 Process，例如：Node Controller、Replication Controller<br>這些 Process 會在 Cluster 與預期狀態（desire state）不符時嘗試更新現有狀態（current state）。例如：現在要多開一台機器以應付突然增加的流量，那我的預期狀態就會更新成 N+1，現有狀態為 N，這時相對應的 controller 就會想辦法多開一台機器<br>controller-manager 的監視與嘗試更新也都需要透過訪問 kube-apiserver 達成</p></li></ul><h5 id="Cluster"><a href="#Cluster" class="headerlink" title="Cluster"></a>Cluster</h5><p>Kubernetes 中多個 Node 與 Master 的集合，基本上可以想成在同一個環境裡所有 Node 集合在一起的單位<br>通常一個 Cluster 中會有多個 Master 作為備援</p><h5 id="Install-Pod"><a href="#Install-Pod" class="headerlink" title="Install Pod"></a>Install Pod</h5><p>當使用者要部署一個新的 Pod 到 Kubernetes Cluster 時，使用者要先透過 User Command（kubectl）輸入建立 Pod 的對應指令<br>此時指令會經過一層確認使用者身份的認證後，傳遞到 Master Node 中的 API Server，API Server 會把指令備份到 etcd<br>接下來 controller-manager 會從 API Server 收到需要創建一個新的 Pod 的訊息，並檢查如果資源許可，就會建立一個新的 Pod<br>最後 Scheduler 在定期訪問 API Server 時，會詢問 controller-manager 是否有建置新的 Pod，如果發現新建立的 Pod 時，Scheduler 就會負責把 Pod 配送到最適合的一個 Node 上面</p><ul><li>Reference<br><a href="https://medium.com/@C.W.Hu/kubernetes-basic-concept-tutorial-e033e3504ec0" target="_blank" rel="noopener">https://medium.com/@C.W.Hu/kubernetes-basic-concept-tutorial-e033e3504ec0</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gin cors</title>
      <link href="/posts/9782a6cf/"/>
      <url>/posts/9782a6cf/</url>
      
        <content type="html"><![CDATA[<ul><li>project/Middlewares/Cors.go<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Middlewares</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Cors</span><span class="params">()</span> <span class="title">gin</span>.<span class="title">HandlerFunc</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        method := c.Request.Method</span><br><span class="line">        origin := c.Request.Header.Get(<span class="string">"Origin"</span>)</span><br><span class="line">        <span class="keyword">if</span> origin != <span class="string">""</span> &#123;</span><br><span class="line">            c.Header(<span class="string">"Access-Control-Allow-Origin"</span>, origin)</span><br><span class="line">            c.Header(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"POST, GET, OPTIONS, PUT, DELETE, UPDATE"</span>)</span><br><span class="line">            c.Header(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"Origin, X-Requested-With, Content-Type, Accept, Authorization"</span>)</span><br><span class="line">            c.Header(<span class="string">"Access-Control-Expose-Headers"</span>, <span class="string">"Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Cache-Control, Content-Language, Content-Type"</span>)</span><br><span class="line">            c.Header(<span class="string">"Access-Control-Allow-Credentials"</span>, <span class="string">"false"</span>)</span><br><span class="line">            c.Set(<span class="string">"content-type"</span>, <span class="string">"application/json"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> method == <span class="string">"OPTIONS"</span> &#123;</span><br><span class="line">            c.AbortWithStatus(http.StatusNoContent)</span><br><span class="line">        &#125;</span><br><span class="line">        c.Next()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>project/main.go<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"project/Middlewares"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := gin.Default()</span><br><span class="line">    r.Use(Middlewares.Cors())</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World!"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.Run(<span class="string">":8888"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>new and make</title>
      <link href="/posts/7f85b3c1/"/>
      <url>/posts/7f85b3c1/</url>
      
        <content type="html"><![CDATA[<ul><li>new<ul><li>返回指標，指向分配給宣告變數的記憶體空間</li><li>會初始化宣告的變數, 如 string 會賦值為 “”，number 會賦值為 0</li><li>對於 channel, map, slice 等等, 會賦值為 nil<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">p := <span class="built_in">new</span>(<span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> v <span class="keyword">int</span></span><br><span class="line">p := &amp;v</span><br><span class="line"></span><br><span class="line">person := <span class="built_in">new</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">person[<span class="string">"name"</span>] = <span class="string">"John"</span> <span class="comment">// invalid operation: people["name"] (type *map[string]interface &#123;&#125; does not support indexing)</span></span><br></pre></td></tr></table></figure></li></ul></li><li>make<ul><li>不會返回指標</li><li>用來初始化數據結構，包含 channel, map, slice, etc.<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slice := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>, <span class="number">100</span>)</span><br><span class="line">hash := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">bool</span>, <span class="number">10</span>)</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Package exec</title>
      <link href="/posts/2c493017/"/>
      <url>/posts/2c493017/</url>
      
        <content type="html"><![CDATA[<ul><li>import<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"os/exec"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>func (*Cmd) Output<br><code>Output</code> runs the command and returns its standard output.<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"cat"</span>, <span class="string">"text"</span>)</span><br><span class="line">out, err := cmd.Output()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;                      </span><br><span class="line">fmt.Printf(<span class="string">"output: %s\n"</span>, <span class="keyword">string</span>(out))</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error: exit status 1</span><br><span class="line">output:</span><br></pre></td></tr></table></figure></li></ul></li><li>func (c *Cmd) CombinedOutput() ([]byte, error)<br><code>CombinedOutput</code> runs the command and returns its combined standard output and standard error.<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"cat"</span>, <span class="string">"text"</span>)</span><br><span class="line">out, err := cmd.CombinedOutput()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;                      </span><br><span class="line">fmt.Printf(<span class="string">"output: %s\n"</span>, <span class="keyword">string</span>(out))</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error: exit status 1</span><br><span class="line">output: cat: text: No such file or directory</span><br></pre></td></tr></table></figure></li></ul></li><li>func (*Cmd) Run<br><code>Run</code> starts the specified command and waits for it to complete.<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"sleep"</span>, <span class="string">"1"</span>)</span><br><span class="line">fmt.Println(<span class="string">"Running command and waiting for it to finish..."</span>)</span><br><span class="line">err := cmd.Run()</span><br><span class="line">fmt.Printf(<span class="string">"Command finished with error: %v\n"</span>, err)</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Running command and waiting for it to finish...</span><br><span class="line">Command finished with error: &lt;nil&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li>func (c *Cmd) Start() error<br><code>Start</code> starts the specified command but does not wait for it to complete.</li><li>func (c *Cmd) Wait() error<br><code>Wait</code> waits for the command to exit and waits for any copying to stdin or copying from stdout or stderr to complete.<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"sleep"</span>, <span class="string">"5"</span>)</span><br><span class="line">err := cmd.Start()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"Waiting for command to finish..."</span>)</span><br><span class="line">err = cmd.Wait()</span><br><span class="line">fmt.Printf(<span class="string">"Command finished with error: %v"</span>, err)</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ go run main.go </span><br><span class="line">Waiting for command to finish...</span><br><span class="line">Command finished with error: &lt;nil&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li>func (*Cmd) StdoutPipe<br><code>StdoutPipe</code> returns a pipe that will be connected to the command’s standard output when the command starts.<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="keyword">string</span></span><br><span class="line">    Age  <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line">cmd := exec.Command(<span class="string">"echo"</span>, <span class="string">"-n"</span>, <span class="string">`&#123;"Name": "Bob", "Age": 32&#125;`</span>)</span><br><span class="line">stdout, err := cmd.StdoutPipe()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> err := cmd.Start(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> err := json.NewDecoder(stdout).Decode(&amp;person); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> err := cmd.Wait(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;  </span><br><span class="line">fmt.Printf(<span class="string">"%s is %d years old\n"</span>, person.Name, person.Age)</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bob is 32 years old</span><br></pre></td></tr></table></figure></li></ul></li><li>將 stdout 和 stderr 分開處理<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"cat"</span>, <span class="string">"text"</span>)</span><br><span class="line"><span class="keyword">var</span> stdout, stderr bytes.Buffer</span><br><span class="line">cmd.Stdout = &amp;stdout</span><br><span class="line">cmd.Stderr = &amp;stderr</span><br><span class="line">err := cmd.Run()    </span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;     </span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;                   </span><br><span class="line">outStr, errStr := <span class="keyword">string</span>(stdout.Bytes()), <span class="keyword">string</span>(stderr.Bytes())</span><br><span class="line">fmt.Printf(<span class="string">"out: %s\nerr: %s\n"</span>, outStr, errStr)</span><br></pre></td></tr></table></figure></li><li>output<ul><li>success<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">error: exit status 1</span><br><span class="line">out: </span><br><span class="line">err: cat: text: No such file or directory</span><br></pre></td></tr></table></figure></li><li>fail<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">out: test</span><br><span class="line">err:</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li>處理 stdin<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"tr"</span>, <span class="string">"a-z"</span>, <span class="string">"A-Z"</span>)</span><br><span class="line">cmd.Stdin = strings.NewReader(<span class="string">"some input"</span>)</span><br><span class="line"><span class="keyword">var</span> out bytes.Buffer</span><br><span class="line">cmd.Stdout = &amp;out</span><br><span class="line">err := cmd.Run()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"in all caps: %q\n"</span>, out.String())</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in all caps: &quot;SOME INPUT&quot;</span><br></pre></td></tr></table></figure></li></ul></li><li>設定 Timeout<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ctx, cancel := context.WithTimeout(context.Background(), <span class="number">100</span>*time.Millisecond)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := exec.CommandContext(ctx, <span class="string">"sleep"</span>, <span class="string">"5"</span>).Run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="comment">// This will fail after 100 milliseconds. The 5 second sleep will be interrupted.</span></span><br><span class="line">    fmt.Println(<span class="string">"TIMEOUT"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>Reference<br><a href="https://golang.org/pkg/os/exec/" target="_blank" rel="noopener">https://golang.org/pkg/os/exec/</a><br><a href="https://colobu.com/2017/06/19/advanced-command-execution-in-Go-with-os-exec/" target="_blank" rel="noopener">https://colobu.com/2017/06/19/advanced-command-execution-in-Go-with-os-exec/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>struct, map, and json</title>
      <link href="/posts/d8b7f59e/"/>
      <url>/posts/d8b7f59e/</url>
      
        <content type="html"><![CDATA[<ul><li>struct<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"encoding/json"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name   <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//轉換成JSON時，使用 age 代替 Age</span></span><br><span class="line">    Age    <span class="keyword">int</span>    <span class="string">`json:"age"`</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//轉換成JSON時，忽略此欄位</span></span><br><span class="line">    Gender <span class="keyword">string</span> <span class="string">`json:"-"`</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//轉換成JSON時，若此欄位為空，則忽略 (若int: 0 string: ""，則也會被忽略)</span></span><br><span class="line">    Phone  <span class="keyword">string</span> <span class="string">`json:",omitempty"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    data := Person &#123;</span><br><span class="line">        Name: <span class="string">"John"</span>,</span><br><span class="line">        Age: <span class="number">30</span>,</span><br><span class="line">        Gender: <span class="string">"male"</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fmt.Println(data)</span><br><span class="line">    <span class="comment">//&#123;John 30 male &#125;</span></span><br><span class="line"></span><br><span class="line">    fmt.Printf(<span class="string">"%+v\n"</span>, data)</span><br><span class="line">    <span class="comment">//&#123;Name:John Age:30 Gender:male Phone:&#125;</span></span><br><span class="line"></span><br><span class="line">    fmt.Printf(<span class="string">"%#v\n"</span>, data)</span><br><span class="line">    <span class="comment">//main.Person&#123;Name:"John", Age:30, Gender:"male", Phone:""&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>宣告<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">p1 := &amp;Person&#123;&#125;</span><br><span class="line">p1.Name = <span class="string">"John"</span></span><br><span class="line">p1.Age = <span class="number">20</span></span><br><span class="line">fmt.Println(*p1) <span class="comment">//&#123;John 20&#125;</span></span><br><span class="line"></span><br><span class="line">p2 := <span class="built_in">new</span>(Person)</span><br><span class="line">p2.Name = <span class="string">"John"</span></span><br><span class="line">p2.Age = <span class="number">20</span></span><br><span class="line">fmt.Println(*p2) <span class="comment">//&#123;John 20&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p3 Person</span><br><span class="line">p3.Name = <span class="string">"John"</span></span><br><span class="line">p3.Age = <span class="number">20</span></span><br><span class="line">fmt.Println(p3) <span class="comment">//&#123;John 20&#125;</span></span><br></pre></td></tr></table></figure></li><li>Call by pointer<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">modify</span><span class="params">(p *Person)</span></span> &#123;</span><br><span class="line">    p.Name = <span class="string">"Bob"</span></span><br><span class="line">&#125;</span><br><span class="line">modify(p1)</span><br><span class="line">fmt.Println(*p1) <span class="comment">//&#123;Bob 20&#125;</span></span><br><span class="line"></span><br><span class="line">modify(p2)</span><br><span class="line">fmt.Println(*p2) <span class="comment">//&#123;Bob 20&#125;</span></span><br><span class="line"></span><br><span class="line">modify(&amp;p3)</span><br><span class="line">fmt.Println(p3) <span class="comment">//&#123;Bob 20&#125;</span></span><br></pre></td></tr></table></figure></li><li>Append data into struct array<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    john := Person&#123;Name:<span class="string">"John"</span>,Age:<span class="number">20</span>&#125;</span><br><span class="line">    mary := Person&#123;Name:<span class="string">"Mary"</span>,Age:<span class="number">25</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> People []Person</span><br><span class="line">    People = <span class="built_in">append</span>(People, john)</span><br><span class="line">    People = <span class="built_in">append</span>(People, mary)</span><br><span class="line">    fmt.Println(People) <span class="comment">//[&#123;John 20&#125; &#123;Mary 25&#125;]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Access data in the struct array<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">dump</span><span class="params">(People []Person)</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> id, person := <span class="keyword">range</span> People &#123;</span><br><span class="line">        <span class="comment">//可以用person，也可以用People[id]來存取資料</span></span><br><span class="line">        <span class="comment">//0: Name: John, Age: 20</span></span><br><span class="line">        <span class="comment">//1: Name: Mary, Age: 25</span></span><br><span class="line">        fmt.Printf(<span class="string">"%d: Name: %s, Age: %d\n"</span>, id, person.Name, People[id].Age)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Delete elements in a array<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> id, person := <span class="keyword">range</span> People &#123;</span><br><span class="line">    <span class="keyword">if</span> person.Name == <span class="string">"John"</span> &#123;</span><br><span class="line">        People = <span class="built_in">append</span>(People[:id], People[id+<span class="number">1</span>:]...)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>序列化 struct to json string<ul><li>func Marshal(v interface{}) ([]byte, error)<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data_json, _ := json.MarshalIndent(data, <span class="string">""</span>, <span class="string">"  "</span>)</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data_json))</span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//  "Name": "John",</span></span><br><span class="line"><span class="comment">//  "age": 30</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure></li><li>func NewEncoder(w io.Writer) *Encoder</li><li>func (enc *Encoder) Encode(v interface{}) error<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> err := json.NewEncoder(os.Stdout).Encode(&amp;data); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//stdout: &#123;"Name":"John","age":30&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li><li>反序列化 json string to struct<ul><li>func Unmarshal(data []byte, v interface{}) error<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data := []<span class="keyword">byte</span>(<span class="string">`&#123;"name" : "John" , "age" : 30&#125;`</span>)</span><br><span class="line"><span class="keyword">var</span> person Person</span><br><span class="line">json.Unmarshal(data, &amp;person)</span><br><span class="line">fmt.Println(person) <span class="comment">//&#123;John 30&#125;</span></span><br></pre></td></tr></table></figure></li><li>func NewDecoder(r io.Reader) *Decoder</li><li>func (dec *Decoder) Decode(v interface{}) error<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data := <span class="string">`&#123;"name" : "John" , "age" : 30&#125;`</span></span><br><span class="line"><span class="keyword">var</span> person Person</span><br><span class="line"><span class="keyword">if</span> err := json.NewDecoder(strings.NewReader(data)).Decode(&amp;person); err == <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(person) <span class="comment">//&#123;John 30&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>pointer items in struct<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> A <span class="keyword">struct</span> &#123;</span><br><span class="line">    Enabled <span class="keyword">int</span></span><br><span class="line">    Name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> B <span class="keyword">struct</span> &#123;</span><br><span class="line">    Enabled <span class="keyword">int</span></span><br><span class="line">    Name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Services <span class="keyword">struct</span> &#123;</span><br><span class="line">    A *A <span class="string">`json:",omitempty"`</span></span><br><span class="line">    B *B <span class="string">`json:",omitempty"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contents := []<span class="keyword">byte</span>(<span class="string">`&#123;"A":&#123;"Enabled":1,"Name":"test"&#125;,"B":&#123;"Enabled":0,"Name":"test"&#125;&#125;`</span>)</span><br><span class="line"><span class="keyword">var</span> data Services </span><br><span class="line">json.Unmarshal(contents, &amp;data)</span><br><span class="line"><span class="keyword">if</span> data.A.Enabled == <span class="number">0</span> &#123; </span><br><span class="line">    data.A = <span class="literal">nil</span> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> data.B.Enabled == <span class="number">0</span> &#123; </span><br><span class="line">    data.B = <span class="literal">nil</span> </span><br><span class="line">&#125;</span><br><span class="line">data_json, _ := json.Marshal(data)</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data_json)) <span class="comment">//&#123;"A":&#123;"Enabled":1,"Name":"test"&#125;&#125;</span></span><br></pre></td></tr></table></figure></li><li>map<ul><li>如果有一串資料 {“Name”: “John”, “Gender”: “Male”}，可以使用 map 來儲存<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>)</span><br><span class="line">data[<span class="string">"Name"</span>] = <span class="string">"John"</span></span><br><span class="line">data[<span class="string">"Gender"</span>] = <span class="string">"Male"</span></span><br><span class="line">fmt.Println(data) <span class="comment">//map[Gender:Male Name:John]</span></span><br></pre></td></tr></table></figure></li><li>如果資料中有多種不同的型別 {“Name”: “John”, “Gender”: “Male”, “Age”: 20}，可以藉由 interface{} 來處理<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">data[<span class="string">"Name"</span>] = <span class="string">"John"</span></span><br><span class="line">data[<span class="string">"Gender"</span>] = <span class="string">"Male"</span></span><br><span class="line">data[<span class="string">"Age"</span>] = <span class="number">20</span></span><br><span class="line">fmt.Println(data) <span class="comment">//map[Age:20 Gender:Male Name:John]</span></span><br></pre></td></tr></table></figure></li><li>多層取值<ul><li>存取已知的 key<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data_json := []<span class="keyword">byte</span>(<span class="string">`&#123;"Name": "John", "Age": 20, "Friend": &#123;"Name": "Mary", "Age": 25&#125;&#125;`</span>)</span><br><span class="line"><span class="keyword">var</span> data <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">json.Unmarshal(data_json, &amp;data)</span><br><span class="line"></span><br><span class="line">fmt.Println(data) <span class="comment">//map[Age:20 Friend:map[Age:25 Name:Mary] Name:John]</span></span><br><span class="line">friend := data[<span class="string">"Friend"</span>].(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">fmt.Println(friend) <span class="comment">//map[Age:25 Name:Mary]</span></span><br><span class="line">fmt.Println(<span class="string">"friend: "</span> + friend[<span class="string">"Name"</span>].(<span class="keyword">string</span>)) <span class="comment">//friend: Mary</span></span><br></pre></td></tr></table></figure></li><li>列舉所有內容<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">data_json := []<span class="keyword">byte</span>(<span class="string">`&#123;"Name": "John", "Age": 20, "BestFriend": &#123;"Name": "Mary", "Age": 25&#125;, "Friends": ["Mark", "Mike"]&#125;`</span>)</span><br><span class="line"><span class="keyword">var</span> data <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">json.Unmarshal(data_json, &amp;data)</span><br><span class="line">m := data.(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> m &#123;</span><br><span class="line">    rt := reflect.TypeOf(v)</span><br><span class="line">    <span class="keyword">if</span> rt.Kind() == reflect.Slice &#123;</span><br><span class="line">        n := v.([]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">        <span class="keyword">for</span> i, u := <span class="keyword">range</span> n &#123; </span><br><span class="line">            fmt.Println(k, i, u)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> rt.Kind() == reflect.Map &#123;</span><br><span class="line">        n := v.(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">        <span class="keyword">for</span> i, u := <span class="keyword">range</span> n &#123; </span><br><span class="line">            fmt.Println(k, i, u)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fmt.Println(k ,v)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Name John</span><br><span class="line">Age 20</span><br><span class="line">BestFriend Name Mary</span><br><span class="line">BestFriend Age 25</span><br><span class="line">Friends 0 Mark</span><br><span class="line">Friends 1 Mike</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Periodic Task</title>
      <link href="/posts/812d43/"/>
      <url>/posts/812d43/</url>
      
        <content type="html"><![CDATA[<ul><li>General goroutine<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> <span class="literal">true</span> &#123;</span><br><span class="line">        <span class="comment">//do something...</span></span><br><span class="line">        time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure></li><li>time.Ticker<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ticker *time.Ticker</span><br><span class="line">ticker = time.NewTicker(<span class="number">1</span> * time.Second)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">range</span> ticker.C &#123;</span><br><span class="line">        <span class="comment">//do something...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">ticker.Stop()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sshpass</title>
      <link href="/posts/8b2c5d13/"/>
      <url>/posts/8b2c5d13/</url>
      
        <content type="html"><![CDATA[<p><code>export SSH_PASSWORD=1234</code><br><code>export REMOTE_SERVER=user@192.168.56.3</code></p><ul><li><p>執行遠端的 shell command</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER COMMAND</span><br><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER ls</span><br></pre></td></tr></table></figure></li><li><p>執行遠端需要 root 權限的 shell command</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo $SSH_PASSWORD | sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no -t $REMOTE_SERVER sudo -S &quot;apt update&quot;</span><br><span class="line">echo $SSH_PASSWORD | sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no -T $REMOTE_SERVER sudo -S &quot;apt update&quot;</span><br><span class="line">echo $SSH_PASSWORD | sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no -tt $REMOTE_SERVER sudo -S &quot;apt update&quot;</span><br></pre></td></tr></table></figure></li><li><p>執行遠端 docker command</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER &quot;docker exec mycontainer mysql -uroot -p1234 -e &apos;show databases&apos;&quot;</span><br><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER docker exec mycontainer &quot;mysql -uroot -p1234 -e &apos;show databases&apos;&quot;</span><br><span class="line"></span><br><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER docker exec mycontainer ls -al</span><br><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER &quot;docker exec mycontainer ls -al&quot;</span><br><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER &quot;docker exec mycontainer sh -c &apos;ls -al&apos;&quot;</span><br></pre></td></tr></table></figure></li><li><p>遠端執行 sftp 動作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sshpass -p $SFTP_PASSWORD sftp -oBatchMode=no -ostricthostkeychecking=no -b - $ACCOUNT@$ADDRESS &lt;&lt; !</span><br><span class="line">ls</span><br><span class="line">cd /folder</span><br><span class="line">get file</span><br><span class="line">bye</span><br><span class="line">!</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Upload Operation</title>
      <link href="/posts/f3b1b78/"/>
      <url>/posts/f3b1b78/</url>
      
        <content type="html"><![CDATA[<ul><li>server<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">upload</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    code := <span class="number">200</span></span><br><span class="line">    res := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">    param1 := c.PostForm(<span class="string">"param1"</span>)</span><br><span class="line">    param2 := c.PostForm(<span class="string">"param2"</span>)</span><br><span class="line"></span><br><span class="line">    file, err := c.FormFile(<span class="string">"file"</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        code = <span class="number">401</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res[<span class="string">"param1"</span>] = param1</span><br><span class="line">    res[<span class="string">"param2"</span>] = param2</span><br><span class="line">    res[<span class="string">"filename"</span>] = file.Filename</span><br><span class="line">    res[<span class="string">"filesize"</span>] = file.Size</span><br><span class="line"></span><br><span class="line">    c.JSON(http.StatusOK, gin.H &#123;</span><br><span class="line">        <span class="string">"code"</span>:  code,</span><br><span class="line">        <span class="string">"data"</span>: res,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := gin.Default()</span><br><span class="line">    r.POST(<span class="string">"/upload"</span>, upload)</span><br><span class="line">    r.Run(<span class="string">":8888"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>client<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"bytes"</span></span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"io"</span></span><br><span class="line">    <span class="string">"io/ioutil"</span></span><br><span class="line">    <span class="string">"log"</span></span><br><span class="line">    <span class="string">"mime/multipart"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"os"</span></span><br><span class="line">    <span class="string">"path/filepath"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newfileUploadRequest</span><span class="params">(uri <span class="keyword">string</span>, params <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>, paramName, path <span class="keyword">string</span>)</span> <span class="params">(*http.Request, error)</span></span> &#123;</span><br><span class="line">    file, err := os.Open(path)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> file.Close()</span><br><span class="line"></span><br><span class="line">    body := &amp;bytes.Buffer&#123;&#125;</span><br><span class="line">    writer := multipart.NewWriter(body)</span><br><span class="line">    part, err := writer.CreateFormFile(paramName, filepath.Base(path))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    _, err = io.Copy(part, file)</span><br><span class="line">    <span class="comment">//we can also use string to fill the file content</span></span><br><span class="line">    <span class="comment">//part.Write([]byte("content_in_a_file"))</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> key, val := <span class="keyword">range</span> params &#123;</span><br><span class="line">        _ = writer.WriteField(key, val)</span><br><span class="line">    &#125;</span><br><span class="line">    err = writer.Close()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    req, err := http.NewRequest(<span class="string">"POST"</span>, uri, body)</span><br><span class="line">    req.Header.Set(<span class="string">"Content-Type"</span>, writer.FormDataContentType())</span><br><span class="line">    <span class="keyword">return</span> req, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    payload := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line">        <span class="string">"param1"</span>: <span class="string">"test1"</span>,</span><br><span class="line">        <span class="string">"param2"</span>: <span class="string">"test2"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    url := <span class="string">"http://192.168.56.3:8888/upload"</span></span><br><span class="line">    request, err := newfileUploadRequest(url, payload, <span class="string">"file"</span>, <span class="string">"/home/user/test.txt"</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    client := &amp;http.Client&#123;&#125;</span><br><span class="line">    resp, err := client.Do(request)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line">        body, err := ioutil.ReadAll(resp.Body)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Println(<span class="keyword">string</span>(body))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"code"</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"filename"</span>: <span class="string">"test.txt"</span>,</span><br><span class="line">    <span class="attr">"filesize"</span>: <span class="number">684</span>,</span><br><span class="line">    <span class="attr">"param1"</span>: <span class="string">"test1"</span>,</span><br><span class="line">    <span class="attr">"param2"</span>: <span class="string">"test2"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nsenter</title>
      <link href="/posts/b401a0da/"/>
      <url>/posts/b401a0da/</url>
      
        <content type="html"><![CDATA[<p>nsenter 可以用來進入 target process 所在的 Namespace 中執行命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ nsenter -h</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line"> nsenter [options] [&lt;program&gt; [&lt;argument&gt;...]]</span><br><span class="line"></span><br><span class="line">Run a program with namespaces of other processes.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"> -a, --all              enter all namespaces</span><br><span class="line"> -t, --target &lt;pid&gt;     target process to get namespaces from</span><br><span class="line"> -m, --mount[=&lt;file&gt;]   enter mount namespace</span><br><span class="line"> -u, --uts[=&lt;file&gt;]     enter UTS namespace (hostname etc)</span><br><span class="line"> -i, --ipc[=&lt;file&gt;]     enter System V IPC namespace</span><br><span class="line"> -n, --net[=&lt;file&gt;]     enter network namespace</span><br><span class="line"> -p, --pid[=&lt;file&gt;]     enter pid namespace</span><br><span class="line"> -C, --cgroup[=&lt;file&gt;]  enter cgroup namespace</span><br><span class="line"> -U, --user[=&lt;file&gt;]    enter user namespace</span><br><span class="line"> -S, --setuid &lt;uid&gt;     <span class="built_in">set</span> uid <span class="keyword">in</span> entered namespace</span><br><span class="line"> -G, --setgid &lt;gid&gt;     <span class="built_in">set</span> gid <span class="keyword">in</span> entered namespace</span><br><span class="line">     --preserve-credentials <span class="keyword">do</span> not touch uids or gids</span><br><span class="line"> -r, --root[=&lt;dir&gt;]     <span class="built_in">set</span> the root directory</span><br><span class="line"> -w, --wd[=&lt;dir&gt;]       <span class="built_in">set</span> the working directory</span><br><span class="line"> -F, --no-fork          <span class="keyword">do</span> not fork before executing &lt;program&gt;</span><br><span class="line"> -Z, --follow-context   <span class="built_in">set</span> SELinux context according to --target PID</span><br><span class="line"></span><br><span class="line"> -h, --<span class="built_in">help</span>             display this <span class="built_in">help</span></span><br><span class="line"> -V, --version          display version</span><br></pre></td></tr></table></figure><ol><li>在 host 中，下指令到 container 內<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ PID=$(docker inspect --format &#123;&#123;.State.Pid&#125;&#125; my_container)</span><br><span class="line">$ sudo nsenter -m -u -i -n -t <span class="variable">$PID</span> ls</span><br><span class="line">app  bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  requirements.txt  root  run  sbin  srv  sys  tmp  usr  var</span><br></pre></td></tr></table></figure></li><li>在 container 中，下指令到 host<br>必須先允許 container 存取 host namespace 的權限</li></ol><ul><li>透過 docker run 指令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --privileged --pid=host ...</span><br></pre></td></tr></table></figure></li><li>透過 docker compose<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privileged: true</span><br><span class="line">pid: &quot;host&quot;</span><br></pre></td></tr></table></figure></li><li>container 中，在 host 執行的 process 為 <code>PID=1</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it my_container bash</span><br><span class="line">root@5185b2a94319:~<span class="comment"># nsenter -m -u -i -n -t 1 ls</span></span><br><span class="line">bin  boot  cdrom  dev  etc  home  initrd.img  initrd.img.old  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  snap  srv  swap.img  sys  tmp  usr  var  vmlinuz  vmlinuz.old</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> nsenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>subprocess</title>
      <link href="/posts/b1b1ed69/"/>
      <url>/posts/b1b1ed69/</url>
      
        <content type="html"><![CDATA[<ul><li>run<br>was added in Python 3.5<br>execute a command and wait until it finishes<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">res = subprocess.run([<span class="string">"cat"</span>, <span class="string">"/etc/hostname"</span>], stdout=subprocess.PIPE)</span><br><span class="line">hostname = res.stdout.decode(<span class="string">"utf-8"</span>).strip()</span><br></pre></td></tr></table></figure></li></ul><p>call<br>ret=subprocess.call(‘cat /etc/machine-id’, shell=True, stdout=open(‘/dev/null’,’w’), stderr=subprocess.STDOUT)</p><p>popen<br>you can continue doing your stuff while the process finishes and then just repeatedly call subprocess.communicate yourself to pass and receive data to your process.</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Encrypt with RSA and Base64</title>
      <link href="/posts/ca690ff5/"/>
      <url>/posts/ca690ff5/</url>
      
        <content type="html"><![CDATA[<p>RSA 是非對稱性加密算法</p><ul><li>import<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"crypto/rand"</span></span><br><span class="line">    <span class="string">"crypto/rsa"</span></span><br><span class="line">    <span class="string">"crypto/sha256"</span></span><br><span class="line">    <span class="string">"crypto/x509"</span></span><br><span class="line">    <span class="string">"encoding/base64"</span></span><br><span class="line">    <span class="string">"encoding/gob"</span></span><br><span class="line">    <span class="string">"encoding/pem"</span></span><br><span class="line">    <span class="string">"errors"</span></span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"io/ioutil"</span></span><br><span class="line">    <span class="string">"os"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>生成公私鑰<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GenerateKeyPair</span><span class="params">(bits <span class="keyword">int</span>)</span> <span class="params">(*rsa.PrivateKey, *rsa.PublicKey, error)</span></span> &#123;</span><br><span class="line">    prikey, err := rsa.GenerateKey(rand.Reader, bits)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> prikey, &amp;prikey.PublicKey, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">privatekey, publickey, _ := GenerateKeyPair(<span class="number">2048</span>)</span><br><span class="line">fmt.Println(*privatekey) <span class="comment">// &#123;&#123;2003898272...5197615363 []&#125;&#125;</span></span><br><span class="line">fmt.Println(*publickey) <span class="comment">// &#123;2003898272...5007771639 65537&#125;</span></span><br></pre></td></tr></table></figure></li><li>將密鑰存入檔案<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">saveGobKey</span><span class="params">(fileName <span class="keyword">string</span>, key <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    outFile, _ := os.Create(fileName)</span><br><span class="line">    <span class="keyword">defer</span> outFile.Close()</span><br><span class="line"></span><br><span class="line">    encoder := gob.NewEncoder(outFile)</span><br><span class="line">    err = encoder.Encode(key)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">savePEMPrivateKey</span><span class="params">(fileName <span class="keyword">string</span>, key *rsa.PrivateKey)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    outFile, _ := os.Create(fileName)</span><br><span class="line">    <span class="keyword">defer</span> outFile.Close()</span><br><span class="line"></span><br><span class="line">    derStream:= x509.MarshalPKCS1PrivateKey(key)</span><br><span class="line">    <span class="keyword">var</span> privateKey = &amp;pem.Block&#123;</span><br><span class="line">        Type: <span class="string">"PRIVATE KEY"</span>,</span><br><span class="line">        Bytes: derStream,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    err = pem.Encode(outFile, privateKey)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">savePEMPublicKey</span><span class="params">(fileName <span class="keyword">string</span>, key *rsa.PublicKey)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    outFile, _ := os.Create(fileName)</span><br><span class="line">    <span class="keyword">defer</span> outFile.Close()</span><br><span class="line"></span><br><span class="line">    derPkix, _ := x509.MarshalPKIXPublicKey(key)</span><br><span class="line">    <span class="keyword">var</span> publicKey = &amp;pem.Block&#123;</span><br><span class="line">        Type: <span class="string">"PUBLIC KEY"</span>,</span><br><span class="line">        Bytes: derPkix,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    err = pem.Encode(outFile, publicKey)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//store key in binary format</span></span><br><span class="line">saveGobKey(<span class="string">"private.key"</span>, privatekey)</span><br><span class="line">saveGobKey(<span class="string">"public.key"</span>, publickey)</span><br><span class="line"></span><br><span class="line"><span class="comment">//store key in pem format</span></span><br><span class="line"><span class="comment">//-----BEGIN RSA PRIVATE KEY-----</span></span><br><span class="line"><span class="comment">//-----BEGIN PRIVATE KEY-----</span></span><br><span class="line"><span class="comment">//MIIEpQIBAAKCAQEAu/olT1++xi2cfQSF+DjgeEeiFurzhM2MtfTgdVeQngOmtfZh</span></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="comment">//23GiddwFvlm+Xbeu0bV8CVg+KLjMsD4UqSbZzqWXCDK/5vNE7fIeus8=</span></span><br><span class="line"><span class="comment">//-----END PRIVATE KEY-----</span></span><br><span class="line">savePEMPrivateKey(<span class="string">"private.pem"</span>, privatekey)</span><br><span class="line"></span><br><span class="line"><span class="comment">//-----BEGIN PUBLIC KEY-----</span></span><br><span class="line"><span class="comment">//MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu/olT1++xi2cfQSF+Djg</span></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="comment">//qwIDAQAB</span></span><br><span class="line"><span class="comment">//-----END PUBLIC KEY-----</span></span><br><span class="line">savePEMPublicKey(<span class="string">"public.pem"</span>, publickey)</span><br></pre></td></tr></table></figure></li><li>加解密<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Encrypt</span><span class="params">(message <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">    key, _ := LoadPEMPublicKey(<span class="string">"public.pem"</span>)</span><br><span class="line"></span><br><span class="line">    ciphertext, err := rsa.EncryptOAEP(sha256.New(), rand.Reader, key, []<span class="keyword">byte</span>(message), []<span class="keyword">byte</span>(<span class="string">""</span>))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> base64.StdEncoding.EncodeToString(ciphertext), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Decrypt</span><span class="params">(b64_message <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">    key, _ := LoadPEMPrivateKey(<span class="string">"private.pem"</span>)</span><br><span class="line"></span><br><span class="line">    message, err := base64.StdEncoding.DecodeString(b64_message)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    plaintext, err := rsa.DecryptOAEP(sha256.New(), rand.Reader, key, message, []<span class="keyword">byte</span>(<span class="string">""</span>))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">string</span>(plaintext), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//go only support encrypt by public key and decrypt by private key</span></span><br><span class="line"><span class="comment">//because public key is available to everyone</span></span><br><span class="line">data := <span class="string">"I'm a genius"</span></span><br><span class="line">encrypt_data, _ := Encrypt(data)</span><br><span class="line">decrypt_data, _ := Decrypt(encrypt_data)</span><br><span class="line">fmt.Println(decrypt_data) <span class="comment">//I'm a genius</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Encrypt with AES and Base64</title>
      <link href="/posts/d7f0b4a8/"/>
      <url>/posts/d7f0b4a8/</url>
      
        <content type="html"><![CDATA[<p>AES 是對稱性加密算法，AES key 長度可以設定為 16, 24, or 32 bytes，分別對應到 AES-128, AES-192, or AES-256</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"bytes"</span></span><br><span class="line">    <span class="string">"crypto/aes"</span></span><br><span class="line">    <span class="string">"crypto/cipher"</span></span><br><span class="line">    <span class="string">"crypto/rand"</span></span><br><span class="line">    <span class="string">"encoding/base64"</span></span><br><span class="line">    <span class="string">"errors"</span></span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"io"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Encrypt</span><span class="params">(key, text <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span> ,error)</span></span> &#123;</span><br><span class="line">    keyBytes := []<span class="keyword">byte</span>(key)</span><br><span class="line">    textBytes := []<span class="keyword">byte</span>(text)</span><br><span class="line"></span><br><span class="line">    block, err := aes.NewCipher(keyBytes)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(textBytes)%aes.BlockSize != <span class="number">0</span> &#123;</span><br><span class="line">        padding := aes.BlockSize - <span class="built_in">len</span>(textBytes)%aes.BlockSize</span><br><span class="line">        padText := bytes.Repeat([]<span class="keyword">byte</span>&#123;<span class="keyword">byte</span>(<span class="number">0</span>)&#125;, padding)</span><br><span class="line">        textBytes = <span class="built_in">append</span>(textBytes, padText...)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ciphertext := <span class="built_in">make</span>([]<span class="keyword">byte</span>, aes.BlockSize+<span class="built_in">len</span>(textBytes))</span><br><span class="line">    iv := ciphertext[:aes.BlockSize]</span><br><span class="line">    <span class="keyword">if</span> _, err := io.ReadFull(rand.Reader, iv); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">    &#125;   </span><br><span class="line">    cfb := cipher.NewCFBEncrypter(block, iv) </span><br><span class="line">    cfb.XORKeyStream(ciphertext[aes.BlockSize:], textBytes)</span><br><span class="line">    <span class="keyword">return</span> base64.StdEncoding.EncodeToString(ciphertext), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Decrypt</span><span class="params">(key, b64 <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">    keyBytes := []<span class="keyword">byte</span>(key)</span><br><span class="line"></span><br><span class="line">    block, err := aes.NewCipher(keyBytes)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err </span><br><span class="line">    &#125;</span><br><span class="line">    text, err := base64.StdEncoding.DecodeString(b64)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(text) &lt; aes.BlockSize &#123;</span><br><span class="line">        <span class="built_in">panic</span>(<span class="string">"ciphertext too short"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, errors.New(<span class="string">"ciphertext to short"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    iv := text[:aes.BlockSize]</span><br><span class="line">    text = text[aes.BlockSize:]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(text)%aes.BlockSize != <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, errors.New(<span class="string">"ciphertext is not a multiple of the block size"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    cfb := cipher.NewCFBDecrypter(block, iv)</span><br><span class="line">    cfb.XORKeyStream(text, text)</span><br><span class="line">    text = bytes.TrimRight(text, <span class="string">"\x00"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">string</span>(text), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    AESEncryptionKey := <span class="string">"ABCDEFGHIJKLMNOP"</span></span><br><span class="line">    data := <span class="string">"I'm a genius"</span></span><br><span class="line"></span><br><span class="line">    encrypt, _ := Encrypt(AESEncryptionKey, data)</span><br><span class="line">    fmt.Println(encrypt) <span class="comment">//n3ZLEui2m9egZaNN1HcqcRYa6gYdMZIf6s7uUQnwvmw=</span></span><br><span class="line"></span><br><span class="line">    decrypt, _ := Decrypt(AESEncryptionKey, encrypt)</span><br><span class="line">    fmt.Println(decrypt)<span class="comment">//I'm a genius</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang notes</title>
      <link href="/posts/d5617b5e/"/>
      <url>/posts/d5617b5e/</url>
      
        <content type="html"><![CDATA[<ul><li>宣告byte variable<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">single := byte(&apos;A&apos;)</span><br><span class="line">array := []byte&#123;&apos;A&apos;, &apos;B&apos;, &apos;C&apos;&#125;</span><br></pre></td></tr></table></figure></li><li>package</li></ul><ol><li>package main 是程式入口，其餘的 package name 必須和所在的資料夾同名</li><li>同一個 package 內，互相調用的 variable or function，命名可以不分大小寫</li><li>跨 package 調用時，被使用的 variable or function，命名必須大寫開頭</li><li>編譯<br><code>go run a.go b.go</code><br><code>go run *.go</code><br><code>go build a.go b.go</code><br><code>go build .</code></li><li>多層目錄<ul><li>目錄結構<br>project<br>├── common<br>│   └── b.go<br>└── a.go</li><li>初始化 module<br><code>user@user:~/project$ go mod init project</code><br>執行之後會產生 go.mod 檔案</li><li>使用<br>在a.go中，<code>import (common &quot;project/common&quot;)</code><br>然後呼叫 <code>common.foo()</code></li></ul></li></ol><ul><li>初始化專案，當專案中有多個目錄結構時，需要建立 <code>go.mod</code> 來標示專案的根目錄，確保各個 module 在 import 時的相依性<br><code>$ go mod init project</code></li><li>release / debug mode<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[GIN-debug] [WARNING] Running <span class="keyword">in</span> <span class="string">"debug"</span> mode. Switch to <span class="string">"release"</span> mode <span class="keyword">in</span> production.</span><br><span class="line"> - using env:   <span class="built_in">export</span> GIN_MODE=release</span><br><span class="line"> - using code:  gin.SetMode(gin.ReleaseMode)</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="https://eddycjy.gitbook.io/golang/" target="_blank" rel="noopener">跟煎鱼学 Go</a><br><a href="https://ithelp.ithome.com.tw/articles/10205062" target="_blank" rel="noopener">學習Go</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加解密</title>
      <link href="/posts/d3181d19/"/>
      <url>/posts/d3181d19/</url>
      
        <content type="html"><![CDATA[<ul><li>對稱式加密 (Symmetric Encryption)<ul><li>加解密使用同一把 key</li><li><font color="#FF0000">傳送方(A)與接收方(B)在溝通加密方式與傳送 key 的過程時，有可能被第三方(C)攔截</font><ul><li>C 可以使用這把 key 來解密 A/B 傳送的訊息</li><li>C 可以使用這把 key 來加密攻擊訊息</li></ul></li></ul></li><li>非對稱式加密 (Asymmetric Encryption)<ul><li>加解密使用 pair key (public key + private key)<ul><li>使用其中一把 key 加密，只能用另一把 key 解密</li></ul></li><li>A 與 B 各自有兩把 key</li><li>A 與 B 在溝通加密方式時，會將自己的 public key 傳給對方<ul><li>A 會用 B 的 public key 加密訊息，B 再用自己的 private key 解密</li><li>B 會用A 的 public key 加密訊息，A 再用自己的 private key 解密</li></ul></li><li><font color="#FF0000">A 與 B 將 public key 傳給對方時，有可能被 C 攔截</font><ul><li>C 可以使用 A/B 的 public key 來加密攻擊內容</li></ul></li></ul></li><li>非對稱式加密 + 數位簽章 (Digital Signature)<ul><li>A 要傳訊息給 B<ul><li>A 先用 B 的 public key 加密</li><li>A 再用自己的 private key 加密<ul><li><font color="#FF6600">A 的 private key 不會洩漏</font></li></ul></li><li>B 收到訊息</li><li>B 先用 A 的 public key 解密<ul><li><font color="#FF6600">只有 A 發的訊息，在這裡才解的開</font></li></ul></li><li>B 再用自己的 private key 解密<ul><li><font color="#FF6600">就算 C 用 A 的 public key 解開了 A 傳送出來的訊息，也沒有 B 的 private key 繼續完全解密</font></li></ul></li></ul></li><li><font color="#FF0000">A 與 B 將 public key 傳給對方時，有可能被 C 攔截，然後 C 搞事情</font><ul><li>C 攔截了 A/B 的 public key</li><li>C 偽造了兩對 public key + private key(<font color="#0000FF">CApub+CApri</font>/<font color="#008000">CBpub+CBpri</font>)，再把 <font color="#0000FF">CApub</font>/<font color="#008000">CBpub</font> 分別傳給 B/A</li><li>A 要傳訊息給 B<ul><li>A 先用 <font color="#008000">CBpub</font> 加密</li><li>A 再用自己的 private key 加密</li><li>C 攔截到訊息後<ul><li>C 先用 A 的 public key 解密</li><li>C 再用 <font color="#008000">CBpri</font> 完全解密</li><li>C 先用 B 的 public key 加密</li><li>C 再用 <font color="#0000FF">CApri</font> 加密</li></ul></li><li>B 收到訊息後<ul><li>B 先用 <font color="#0000FF">CApub</font> 解密</li><li>B 再用自己的 private key 解密</li></ul></li></ul></li></ul></li></ul></li><li>A/B 在交換 public key 後，透過具有公信力的第三方，再確認一次拿到的真的是對方的 public key</li><li>AES (Advanced Encryption Standard)<ul><li>對稱式加密算法</li><li>allows 128, 192 or 256 bit (16, 24, 32 bytes) key length</li></ul></li><li>AEC</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Locust - API Server Load Testing</title>
      <link href="/posts/fd45e358/"/>
      <url>/posts/fd45e358/</url>
      
        <content type="html"><![CDATA[<ul><li>install<br><code>pip install locust</code></li><li>locustfile.py<br><code>@task</code> decorator可以指定執行的比重，若不指定則預設所有任務為同比重<br>For example, subject_list指定task(1) and corporation_list指定task(2)，代表subject_list跟corporation_list執行比例是1:2<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> locust <span class="keyword">import</span> HttpUser, TaskSet, task</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebsiteTasks</span><span class="params">(TaskSet)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent)</span>:</span></span><br><span class="line">        super().__init__(parent=parent)</span><br><span class="line">        self.token = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_start</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.login()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_stop</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self)</span>:</span></span><br><span class="line">        response = self.client.post(<span class="string">"/api/auth/login"</span>, data=&#123;<span class="string">"username"</span>:<span class="string">"admin"</span>, <span class="string">"password"</span>:<span class="string">"123456"</span>&#125;)</span><br><span class="line">        res_json = response.json()</span><br><span class="line">        self.token = res_json[<span class="string">'data'</span>][<span class="string">'token'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @task</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subject_list</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.client.get(<span class="string">"/api/subject/list"</span>, headers=&#123;<span class="string">"Authorization"</span>: self.token&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @task</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">corporation_list</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.client.get(<span class="string">"/api/corporation/list"</span>, headers=&#123;<span class="string">"Authorization"</span>: self.token&#125;)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebsiteUser</span><span class="params">(HttpUser)</span>:</span></span><br><span class="line">    tasks = [WebsiteTasks]</span><br><span class="line"></span><br><span class="line">    <span class="comment">#定義兩次任務間隔時間的隨機範圍 (1~2秒)</span></span><br><span class="line">    min_wait = <span class="number">1000</span></span><br><span class="line">    max_wait = <span class="number">2000</span></span><br></pre></td></tr></table></figure></li><li>執行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ locust -f locustfile.py -H http://192.168.56.3:18857</span><br><span class="line">[2020-07-01 15:13:10,675] user/WARNING/locust.main: System open file limit setting is not high enough for load testing, and the OS wouldnt allow locust to increase it by itself. See https://docs.locust.io/en/stable/installation.html#increasing-maximum-number-of-open-files-limit for more info.</span><br><span class="line">[2020-07-01 15:13:10,676] user/INFO/locust.main: Starting web interface at http://:8089</span><br><span class="line">[2020-07-01 15:13:10,684] user/INFO/locust.main: Starting Locust 1.1</span><br></pre></td></tr></table></figure></li><li>網頁<br>輸入 User 數量及 Hatch rate（多少秒達到預期使用者數量），若是設定 5 個 user，hatch rate 為 5，代表有 5 秒時間可以 warm up 到 5 使用者<br><img src="/posts/fd45e358/image01.jpg" alt><br><img src="/posts/fd45e358/image02.jpg" alt><br><img src="/posts/fd45e358/image03.jpg" alt></li><li>結果<br>terminal指令結束後，會有統計的資訊如下，也可以透過網頁中的Download Data，下載到這些數據<br><img src="/posts/fd45e358/image04.jpg" alt></li><li>Todo<br>補上怎麼–no-web執行</li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Locust </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Locust </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>API notes</title>
      <link href="/posts/258ef25c/"/>
      <url>/posts/258ef25c/</url>
      
        <content type="html"><![CDATA[<p>同源政策（Same-origin policy）意思就是說如果你現在這個網站的跟你要呼叫的 API 的網站「不同源」的時候，瀏覽器一樣會幫你發 Request，也會得到 Response，但是會把 Response 給擋下來，不讓你的 JavaScript 拿到並且傳回錯誤。什麼是不同源呢？只要是 Domain 不一樣就是不同源，或者是一個用http一個用https也是不同源，端口號不一樣也是不同源。</p><p>CORS 把 Request 分成兩種，一種是簡單請求（simple requests）。什麼是簡單請求呢？定義很多，但如果你沒有加任何自定義的 Header，而且又是 GET 的話，絕對是簡單請求；反之，如果你有加一些自定義的 Header，這個 Request 就絕對不是簡單請求。</p><p>非簡單請求可能會帶有一些使用者資料，因此會先透過預檢請求（Preflight Request）去確認後續的請求能否送出，如果這個預檢請求沒有過的話，真的 Request 也就不會發送了，這就是預檢請求的目的。在開發者選項或是後台可以發現，一個非簡單請求會有兩個 Requests，第一個 Request 的 Method 會是 OPTIONS，第二個 Request才會是真正的動作。</p><p>如果今天沒有預檢請求這個機制的話，使用者就可以在隨便一個 Domain 的網頁上面發送一個 DELETE 的 Request 給這個 API，瀏覽器的 CORS 機制，還是會幫你發送 Request，但只是 Response 被瀏覽器擋住而已。因此呢，儘管沒有 Response，但是 Server 端的確收到了這個 Request，因此就會把這筆資料給刪除。</p><p>摘錄自 <a href="https://blog.techbridge.cc/2017/05/20/api-ajax-cors-and-jsonp/" target="_blank" rel="noopener">https://blog.techbridge.cc/2017/05/20/api-ajax-cors-and-jsonp/</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kotlin notes</title>
      <link href="/posts/8a005c5e/"/>
      <url>/posts/8a005c5e/</url>
      
        <content type="html"><![CDATA[<ul><li>var vs val<br>variables defined with var are mutable(Read and Write)<br>variables defined with val are immutable(Read only)</li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in Python</title>
      <link href="/posts/af8f76b/"/>
      <url>/posts/af8f76b/</url>
      
        <content type="html"><![CDATA[<ul><li>package<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ pip install jaeger-client flask-opentracing</span><br></pre></td></tr></table></figure></li><li>example for multiprocess tracing<ul><li>reference from <a href="https://github.com/jaegertracing/jaeger-client-python/issues/210" target="_blank" rel="noopener">https://github.com/jaegertracing/jaeger-client-python/issues/210</a> @ <a href="https://github.com/illogikus" target="_blank" rel="noopener">illogikus</a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> opentracing</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> jaeger_client <span class="keyword">import</span> Config</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pidprint</span><span class="params">(s)</span>:</span></span><br><span class="line">    print(<span class="string">"[%s] %s"</span> % (os.getpid(),s))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pidlog</span><span class="params">(s)</span>:</span></span><br><span class="line">    active = opentracing.tracer.scope_manager.active</span><br><span class="line">    pidprint(s)</span><br><span class="line">    active.span.log_kv(&#123;os.getpid(): s&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x, context)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> opentracing.global_tracer().start_active_span(<span class="string">'span_%s'</span> % x, child_of=context):</span><br><span class="line">        pidlog(<span class="string">"Hello %s"</span> % x)</span><br><span class="line">        time.sleep(float(x)/<span class="number">10</span>)</span><br><span class="line">        pidlog(<span class="string">"Bye %s"</span> % x)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_jaeger_config</span><span class="params">()</span>:</span></span><br><span class="line">    config = Config(</span><br><span class="line">        config=&#123;</span><br><span class="line">            <span class="string">'sampler'</span>: &#123;</span><br><span class="line">                <span class="string">'type'</span>: <span class="string">'const'</span>,</span><br><span class="line">                <span class="string">'param'</span>: <span class="number">1</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">'local_agent'</span>: &#123;</span><br><span class="line">                <span class="string">'reporting_host'</span>: <span class="string">'192.168.56.5'</span>,</span><br><span class="line">                <span class="string">'reporting_port'</span>: <span class="number">6831</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">'logging'</span>: <span class="literal">True</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        service_name=<span class="string">'my-service'</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_jaeger_tracer</span><span class="params">()</span>:</span></span><br><span class="line">    logging.getLogger(<span class="string">''</span>).handlers = []</span><br><span class="line">    logging.basicConfig(format=<span class="string">'%(message)s'</span>, level=logging.DEBUG)</span><br><span class="line">    <span class="keyword">return</span> get_jaeger_config().initialize_tracer()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">subprocess_initializer</span><span class="params">()</span>:</span></span><br><span class="line">    config = get_jaeger_config()</span><br><span class="line">    Config._initialized = <span class="literal">False</span></span><br><span class="line">    config.initialize_tracer()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    tracer = init_jaeger_tracer()</span><br><span class="line">    pool = Pool(processes=<span class="number">4</span>, initializer=subprocess_initializer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> opentracing.global_tracer().start_active_span(<span class="string">'master_span'</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            pidprint(<span class="string">"Sending %s ..."</span> % x)</span><br><span class="line">            pool.apply_async(f,(x, scope.span.context))</span><br><span class="line"></span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line">    tracer.close()</span><br></pre></td></tr></table></figure><img src="/posts/af8f76b/multiprocessing_tracing.jpg" alt></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Jaeger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in Android Java</title>
      <link href="/posts/db4f4223/"/>
      <url>/posts/db4f4223/</url>
      
        <content type="html"><![CDATA[<ul><li>package in gapp.radle<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">implementation &apos;com.squareup.okhttp3:okhttp:4.7.2&apos;</span><br><span class="line"></span><br><span class="line">implementation group: &apos;io.opentracing&apos;, name: &apos;opentracing-api&apos;, version: &apos;0.33.0&apos;</span><br><span class="line">implementation group: &apos;io.jaegertracing&apos;, name: &apos;jaeger-client&apos;, version: &apos;1.2.0&apos;</span><br></pre></td></tr></table></figure></li><li>Tracing main class<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.jaegertracing.Configuration;</span><br><span class="line"><span class="keyword">import</span> io.jaegertracing.Configuration.ReporterConfiguration;</span><br><span class="line"><span class="keyword">import</span> io.jaegertracing.Configuration.SamplerConfiguration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.jaegertracing.internal.JaegerTracer;</span><br><span class="line"><span class="keyword">import</span> io.jaegertracing.internal.samplers.ConstSampler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tracing</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer JAEGER_UDP_DEFAULT_PORT=<span class="number">6831</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JaegerTracer tracer;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">terminate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tracer.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(String service, String hostname)</span> </span>&#123;</span><br><span class="line">        SamplerConfiguration samplerConfig = SamplerConfiguration.fromEnv()</span><br><span class="line">                .withType(ConstSampler.TYPE)</span><br><span class="line">                .withParam(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        ReporterConfiguration reporterConfig;</span><br><span class="line"></span><br><span class="line">        reporterConfig = <span class="keyword">new</span> ReporterConfiguration()</span><br><span class="line">                .withSender(<span class="keyword">new</span> Configuration.SenderConfiguration()</span><br><span class="line">                        .withAgentHost(hostname)</span><br><span class="line">                        .withAgentPort(JAEGER_UDP_DEFAULT_PORT))</span><br><span class="line">                .withLogSpans(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        Configuration config = <span class="keyword">new</span> Configuration(service)</span><br><span class="line">                .withSampler(samplerConfig)</span><br><span class="line">                .withReporter(reporterConfig);</span><br><span class="line"></span><br><span class="line">        tracer = config.getTracer();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>http headers carrier<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestBuilderCarrier</span> <span class="keyword">implements</span> <span class="title">io</span>.<span class="title">opentracing</span>.<span class="title">propagation</span>.<span class="title">TextMap</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Request.Builder builder;</span><br><span class="line"></span><br><span class="line">    RequestBuilderCarrier(Request.Builder builder) &#123;</span><br><span class="line">        <span class="keyword">this</span>.builder = builder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator() &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"carrier is write-only"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(String key, String value)</span> </span>&#123;</span><br><span class="line">        builder.addHeader(key, value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>MainActivity<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.opentracing.Span;</span><br><span class="line"><span class="keyword">import</span> io.opentracing.propagation.Format;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Call;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Callback;</span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Response;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                Tracing.init(<span class="string">"TracingSample"</span>, <span class="string">"192.168.56.5"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">        doTracing();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        Tracing.terminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">doTracing</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Span span = Tracing.tracer.buildSpan(<span class="string">"api_request"</span>).start();</span><br><span class="line"></span><br><span class="line">        OkHttpClient client = <span class="keyword">new</span> OkHttpClient().newBuilder().build();</span><br><span class="line">        Request.Builder requestbuilder = <span class="keyword">new</span> Request.Builder();</span><br><span class="line">        Tracing.tracer.inject(</span><br><span class="line">                span.context(),</span><br><span class="line">                Format.Builtin.HTTP_HEADERS,</span><br><span class="line">                <span class="keyword">new</span> RequestBuilderCarrier(requestbuilder));</span><br><span class="line"></span><br><span class="line">        Request request = requestbuilder.url(<span class="string">"http://ip:port/api/"</span>).build();</span><br><span class="line">        Call call = client.newCall(request);</span><br><span class="line"></span><br><span class="line">        call.enqueue(<span class="keyword">new</span> Callback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                String result = response.body().string();</span><br><span class="line">                Log.d(<span class="string">"TEST"</span>, result);</span><br><span class="line">                span.finish();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line">                Log.d(<span class="string">"TEST"</span>, e.toString());</span><br><span class="line">                span.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>use span simplily<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Span span = Tracing.tracer.buildSpan(&quot;do_something&quot;).start();</span><br><span class="line">span.finish();</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Jaeger </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Multiprocessing Pool in Python</title>
      <link href="/posts/91c6bb0e/"/>
      <url>/posts/91c6bb0e/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(x)</span>:</span></span><br><span class="line">    print(<span class="string">"[%s] Hello %s"</span> % (os.getpid(), x))</span><br><span class="line">    time.sleep(random.uniform(<span class="number">0.5</span>, <span class="number">2</span>))</span><br><span class="line">    print(<span class="string">"[%s] Bye %s"</span> % (os.getpid(), x))</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">(result)</span>:</span></span><br><span class="line">    print(<span class="string">"[%s] %s"</span> % (os.getpid(), result))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">subprocess_initializer</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"[%s] init"</span> % os.getpid())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    pool = Pool(processes=<span class="number">2</span>, initializer=subprocess_initializer)</span><br><span class="line">    print(<span class="string">"Before ..."</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        pool.apply_async(foo, (x,))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 因為map是block的，所以用result來接return value能直接有正確的結果</span></span><br><span class="line">    result = pool.map(foo, range(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># map_async可以使用callback function來處理結果</span></span><br><span class="line">    <span class="comment"># 也可以使用result.get()，get()會將main process block住，等待map_async執行完畢</span></span><br><span class="line">    result = pool.map_async(foo, range(<span class="number">3</span>), callback=bar)</span><br><span class="line">    print(result.get())</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"After ..."</span>)</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></table></figure><ul><li><p>class multiprocessing.pool.Pool([processes[, initializer[, initargs[, maxtasksperchild[, context]]]]])</p><ul><li>processes<br>The number of worker processes to use. If processes is None then the number returned by os.cpu_count() is used.</li><li>initializer<br>each worker process will call initializer(*initargs) when it starts.</li><li>maxtasksperchild<br>The number of tasks a worker process can complete before it will exit and be replaced with a fresh worker process, to enable unused resources to be freed. The default maxtasksperchild is None, which means worker processes will live as long as the pool.<br>當work process完成了一定數量的執行次數後，會自動重啟該work process</li></ul></li><li><p>map(func, iterable[, chunksize])<br>main process會被block住，整個map指令完成之後才往下<br><code>chunksize</code>=1 by default，每次work process可以接收到的任務數量，當iterables很大時，將chunksize設定的越大，總執行效率越好，但耗費的記憶體越多</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Before ...</span><br><span class="line">[25832] Hello 0</span><br><span class="line">[25833] Hello 1</span><br><span class="line">[25832] Bye 0</span><br><span class="line">[25832] Hello 2</span><br><span class="line">[25833] Bye 1</span><br><span class="line">[25832] Bye 2</span><br><span class="line">After ...</span><br></pre></td></tr></table></figure></li><li><p>map_async(func, iterable[, chunksize[, callback[, error_callback]]])<br>main process不會被block住，且可以指定callback function</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Before ...</span><br><span class="line">After ...</span><br><span class="line">[25851] Hello 0</span><br><span class="line">[25852] Hello 1</span><br><span class="line">[25851] Bye 0</span><br><span class="line">[25851] Hello 2</span><br><span class="line">[25852] Bye 1</span><br><span class="line">[25851] Bye 2</span><br></pre></td></tr></table></figure></li><li><p>imap(func, iterable[, chunksize])<br>A lazier version of map(). <code>imap</code> returns an iterator and <code>map</code> returns a list.<br>假設參數為[1, 2, 3]，執行結果不論誰先完成，return value還是會按照[1, 2, 3]的順序</p></li><li><p>imap_unordered(func, iterable[, chunksize])<br>The same as imap() except that the ordering of the results from the returned iterator should be considered arbitrary.<br>假設參數為[1, 2, 3]，return value會根據執行完成的順序，e.g. [2, 1, 3]</p></li><li><p>starmap(func, iterable[, chunksize])</p></li><li><p>starmap_async(func, iterable[, chunksize[, callback[, error_callback]]])<br>效果相同於map，但是可傳入多個參數<br><code>pool.map(foo, [0, 1, 2, 4])</code><br><code>pool.starmap(foo, [(1, 2), (3, 4)])</code></p></li><li><p>apply(func[, args[, kwds]])<br>參數不同於map，因為每一個apply指令都是block的，所以0, 1, 2是循序執行的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Before ...</span><br><span class="line">[26201] Hello 0</span><br><span class="line">[26201] Bye 0</span><br><span class="line">[26202] Hello 1</span><br><span class="line">[26202] Bye 1</span><br><span class="line">[26201] Hello 2</span><br><span class="line">[26201] Bye 2</span><br><span class="line">After ...</span><br></pre></td></tr></table></figure></li><li><p>apply_async(func[, args[, kwds[, callback[, error_callback]]]])</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Before ...</span><br><span class="line">After ...</span><br><span class="line">[29118] Hello 0</span><br><span class="line">[29119] Hello 1</span><br><span class="line">[29119] Bye 1</span><br><span class="line">[29119] Hello 2</span><br><span class="line">[29118] Bye 0</span><br><span class="line">[29119] Bye 2</span><br></pre></td></tr></table></figure></li><li><p>close()<br>Prevents any more tasks from being submitted to the pool. Once all the tasks have been completed the worker processes will exit.</p></li><li><p>terminate()<br>Stops the worker processes immediately without completing outstanding work.</p></li><li><p>join()<br>Wait for the worker processes to exit. One must call close() or terminate() before using join().</p></li><li><p>callback function<br>由main process執行</p></li><li><p>Reference<br><a href="https://docs.python.org/3/library/multiprocessing.html" target="_blank" rel="noopener">https://docs.python.org/3/library/multiprocessing.html</a></p></li><li><p>ThreadPool vs Pool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from multiprocessing import Pool</span><br><span class="line">ppool = Pool(workers)</span><br><span class="line"></span><br><span class="line">from multiprocessing.pool import ThreadPool</span><br><span class="line">tpool = ThreadPool(workers)</span><br></pre></td></tr></table></figure><p>兩種pool的使用方式一模一樣，差異在於由thread or process實作<br>IO bound jobs -&gt; multiprocessing.pool.ThreadPool<br>CPU bound jobs -&gt; multiprocessing.Pool</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in C++</title>
      <link href="/posts/18b7c14f/"/>
      <url>/posts/18b7c14f/</url>
      
        <content type="html"><![CDATA[<ul><li>Preparation<br>下載jaeger-client-cpp專案，並編譯<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/jaegertracing/jaeger-client-cpp.git</span><br><span class="line">$ <span class="built_in">cd</span> jaeger-client-cpp</span><br><span class="line">$ mkdir build</span><br><span class="line">$ cmake ..</span><br><span class="line">$ make</span><br></pre></td></tr></table></figure><ul><li>將所需的library跟header file，從下列地方取出<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/home/user/jaeger-client-app/build</span><br><span class="line">/home/user/jaeger-client-app/src</span><br><span class="line">/home/user/.hunter/_Base/d45d77d/924bcec/3b7ee27/Install</span><br></pre></td></tr></table></figure></li><li>library (並建立symbolic link)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">libjaegertracing.so -&gt; libjaegertracing.so.0*</span><br><span class="line">libjaegertracing.so.0 -&gt; libjaegertracing.so.0.6.1*</span><br><span class="line">libjaegertracing.so.0.6.1*</span><br><span class="line">libyaml-cpp.so -&gt; libyaml-cpp.so.0.6*</span><br><span class="line">libyaml-cpp.so.0.6 -&gt; libyaml-cpp.so.0.6.2*</span><br><span class="line">libyaml-cpp.so.0.6.2*</span><br></pre></td></tr></table></figure></li><li>headers<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/home/user/jaeger-client-cpp/build/src/jaegertracing/Constants.h</span><br><span class="line">/home/user/jaeger-client-cpp/src/jaegertracing/*.h</span><br><span class="line">/home/user/jaeger-client-cpp/src/jaegertracing/*/*.h</span><br><span class="line">/home/user/jaeger-client-cpp/src/jaegertracing/*/*/*.h</span><br><span class="line">/home/user/.hunter/_Base/d45d77d/924bcec/3b7ee27/Install/include/yaml-cpp</span><br><span class="line">/home/user/.hunter/_Base/d45d77d/924bcec/3b7ee27/Install/include/opentracing</span><br><span class="line">/home/user/.hunter/_Base/d45d77d/924bcec/3b7ee27/Install/include/thrift</span><br><span class="line">/home/user/.hunter/_Base/d45d77d/924bcec/3b7ee27/Install/include/boost</span><br></pre></td></tr></table></figure></li></ul></li><li>compile<br><code>g++ -std=c++11 -L/home/user/jaeger/lib -I/home/user/jaeger/include App.cpp -o test -ljaegertracing -lyaml-cpp</code></li><li>execute<br><code>LD_LIBRARY_PATH=/home/user/jaeger/lib ./test config.yml</code></li><li>App.cpp<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;yaml-cpp/yaml.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jaegertracing/Tracer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setUpTracer</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* configFilePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> configYAML = YAML::LoadFile(configFilePath);</span><br><span class="line">    <span class="keyword">auto</span> config = jaegertracing::Config::parse(configYAML);</span><br><span class="line">    <span class="keyword">auto</span> tracer = jaegertracing::Tracer::make(</span><br><span class="line">        <span class="string">"example-service"</span>, config, jaegertracing::logging::consoleLogger());</span><br><span class="line">    opentracing::Tracer::InitGlobal(</span><br><span class="line">        <span class="built_in">std</span>::static_pointer_cast&lt;opentracing::Tracer&gt;(tracer));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tracedSubroutine</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">unique_ptr</span>&lt;opentracing::Span&gt;&amp; parentSpan)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> span = opentracing::Tracer::Global()-&gt;StartSpan(</span><br><span class="line">        <span class="string">"tracedSubroutine"</span>, &#123; opentracing::ChildOf(&amp;parentSpan-&gt;context()) &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tracedFunction</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> span = opentracing::Tracer::Global()-&gt;StartSpan(<span class="string">"tracedFunction"</span>);</span><br><span class="line">    tracedSubroutine(span);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// anonymous namespace</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (argc &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">"usage: "</span> &lt;&lt; argv[<span class="number">0</span>] &lt;&lt; <span class="string">" &lt;config-yaml-path&gt;\n"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    setUpTracer(argv[<span class="number">1</span>]);</span><br><span class="line">    tracedFunction();</span><br><span class="line">    <span class="comment">// Not stricly necessary to close tracer, but might flush any buffered</span></span><br><span class="line">    <span class="comment">// spans. See more details in opentracing::Tracer::Close() documentation.</span></span><br><span class="line">    opentracing::Tracer::Global()-&gt;Close();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>inject and extract<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CustomCarrierWriter</span> :</span> opentracing::TextMapWriter &#123;</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">CustomCarrierWriter</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="built_in">std</span>::<span class="built_in">unordered_map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="built_in">std</span>::<span class="built_in">string</span>&gt;&amp; data_)</span></span></span><br><span class="line">        : data&#123;data_&#125; &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// OpenTracing uses opentracing::expected for error handling.</span></span><br><span class="line">    opentracing::expected&lt;<span class="keyword">void</span>&gt; Set(</span><br><span class="line">        opentracing::string_view key,</span><br><span class="line">        opentracing::string_view value) <span class="keyword">const</span> override &#123;</span><br><span class="line">        <span class="comment">// for more background.</span></span><br><span class="line">        opentracing::expected&lt;<span class="keyword">void</span>&gt; result;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">auto</span> was_successful = data.emplace(key, value);</span><br><span class="line">        <span class="keyword">if</span> (was_successful.second) &#123;</span><br><span class="line">        <span class="comment">// Use a default constructed opentracing::expected&lt;void&gt; to indicate success.</span></span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// `key` clashes with existing data, so the span context can't be encoded</span></span><br><span class="line">            <span class="comment">// successfully; set opentracing::expected&lt;void&gt; to an std::error_code.</span></span><br><span class="line">            <span class="keyword">return</span> opentracing::make_unexpected(</span><br><span class="line">                <span class="built_in">std</span>::make_error_code(<span class="built_in">std</span>::errc::not_supported));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">unordered_map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="built_in">std</span>::<span class="built_in">string</span>&gt;&amp; data;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inject</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> span = opentracing::Tracer::Global()-&gt;StartSpan(<span class="string">"websocket event"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">unordered_map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="built_in">std</span>::<span class="built_in">string</span>&gt; text_map;</span><br><span class="line">    <span class="function">CustomCarrierWriter <span class="title">carrier</span><span class="params">(text_map)</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> err = opentracing::Tracer::Global()-&gt;Inject(span-&gt;context(), carrier);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; t : carrier.data)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"key: "</span> &lt;&lt; t.first &lt;&lt; <span class="string">", value: "</span> &lt;&lt; t.second &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// do something...</span></span><br><span class="line">    span-&gt;Finish();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extract</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>config.yaml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">disabled: false</span><br><span class="line">reporter:</span><br><span class="line">    logSpans: true</span><br><span class="line">    localAgentHostPort: &quot;192.168.56.5:6831&quot;</span><br><span class="line">sampler:</span><br><span class="line">  type: const</span><br><span class="line">  param: 1</span><br></pre></td></tr></table></figure></li><li>config by code<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> disabled = <span class="literal">false</span>;</span><br><span class="line">jaegertracing::samplers::Config sampler &#123;<span class="string">"const"</span>, <span class="number">1</span>, <span class="string">""</span>, <span class="number">0</span>, <span class="built_in">std</span>::chrono::seconds(<span class="number">0</span>)&#125;;</span><br><span class="line">jaegertracing::reporters::Config reporter &#123;<span class="number">0</span>, <span class="built_in">std</span>::chrono::seconds(<span class="number">0</span>), <span class="literal">true</span>, <span class="string">"192.168.56.5:6831"</span>, <span class="string">""</span>&#125;;</span><br><span class="line">jaegertracing::Config config &#123;disabled, sampler, reporter&#125;;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> Jaeger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>middleware for golang(mux)</title>
      <link href="/posts/1509988e/"/>
      <url>/posts/1509988e/</url>
      
        <content type="html"><![CDATA[<ul><li>main.go<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"github.com/gorilla/mux"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">before</span><span class="params">(h http.Handler)</span> <span class="title">http</span>.<span class="title">Handler</span></span> &#123;</span><br><span class="line">    fn := <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"before"</span>)</span><br><span class="line">        h.ServeHTTP(w, r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> http.HandlerFunc(fn)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">after</span><span class="params">(h http.Handler)</span> <span class="title">http</span>.<span class="title">Handler</span></span> &#123;</span><br><span class="line">    fn := <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        h.ServeHTTP(w, r)</span><br><span class="line">        fmt.Println(<span class="string">"after"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> http.HandlerFunc(fn)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := mux.NewRouter()</span><br><span class="line">    r.HandleFunc(<span class="string">"/"</span>, Hello)</span><br><span class="line">    http.ListenAndServe(<span class="string">":8888"</span>, after(before(r)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Hello</span><span class="params">(w http.ResponseWriter, req *http.Request)</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"do something..."</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//w.Write([]byte("Hello World!"))</span></span><br><span class="line">    fmt.Fprintln(w, <span class="string">"Hello World!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>result<br><code>curl -X GET http://127.0.0.1:8888</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">before</span><br><span class="line"><span class="keyword">do</span> something...</span><br><span class="line">after</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>middleware for golang(gin)</title>
      <link href="/posts/a3df554/"/>
      <url>/posts/a3df554/</url>
      
        <content type="html"><![CDATA[<ul><li>c.Next()<br>It means that after middleware is done executing, we can pass on request handler to the next function in the chain.</li><li>main.go<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">before</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"before"</span>)</span><br><span class="line">    c.Next()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">after</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"after"</span>)</span><br><span class="line">    c.Next()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := gin.Default()</span><br><span class="line"></span><br><span class="line">    r.Use(before)</span><br><span class="line">    r.GET(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"do something..."</span>)</span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World"</span>)</span><br><span class="line">    &#125;, after)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    r.Run(<span class="string">":8888"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>result<br><code>curl -X GET http://127.0.0.1:8888</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[GIN-debug] GET    /                         --&gt; main.after (5 handlers)</span><br><span class="line">[GIN-debug] Listening and serving HTTP on :8888</span><br><span class="line">before</span><br><span class="line"><span class="keyword">do</span> something...</span><br><span class="line">after</span><br><span class="line">[GIN] 2020/06/12 - 11:12:52 | 200 |     262.611µs |    192.168.56.5 | GET      <span class="string">"/"</span></span><br></pre></td></tr></table></figure></li><li>middleware function can be written in another way<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">before</span><span class="params">()</span> <span class="title">gin</span>.<span class="title">HandlerFunc</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"do something here..."</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"before"</span>)</span><br><span class="line">        c.Next()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    r.Use(before())</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Information of flask.request</title>
      <link href="/posts/f4d5bb19/"/>
      <url>/posts/f4d5bb19/</url>
      
        <content type="html"><![CDATA[<ul><li><p>GET api request<br><code>curl -X GET http://127.0.0.1:5000/api/test?x=abc</code></p></li><li><p>Information of flask.request</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">request.method:              GET</span><br><span class="line">request.url:                 http://127.0.0.1:5000/api/test?x=abc</span><br><span class="line">request.base_url:            http://127.0.0.1:5000/api/test</span><br><span class="line">request.url_charset:         utf-8</span><br><span class="line">request.url_root:            http://127.0.0.1:5000/</span><br><span class="line">str(request.url_rule):       /api/test</span><br><span class="line">request.host_url:            http://127.0.0.1:5000/</span><br><span class="line">request.host:                127.0.0.1:5000</span><br><span class="line">request.script_root:</span><br><span class="line">request.path:                /api/test</span><br><span class="line">request.full_path:           /api/test?x=abc</span><br><span class="line">request.args:                ImmutableMultiDict([(&apos;x&apos;, &apos;abc&apos;)])</span><br><span class="line">request.args.get(&apos;x&apos;):       abc</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in golang(gin)</title>
      <link href="/posts/1306a70/"/>
      <url>/posts/1306a70/</url>
      
        <content type="html"><![CDATA[<ul><li>package<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ go get -u github.com/uber/jaeger-client-go/</span><br><span class="line">$ go get -u github.com/pkg/errors</span><br><span class="line">$ go get -u go.uber.org/atomic</span><br></pre></td></tr></table></figure></li><li>main.go<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"io"</span></span><br><span class="line">    <span class="string">"time"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">    <span class="string">"github.com/opentracing/opentracing-go"</span></span><br><span class="line">    <span class="string">"github.com/uber/jaeger-client-go"</span></span><br><span class="line">    <span class="string">"github.com/uber/jaeger-client-go/config"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func initTracer() (opentracing.Tracer, io.Closer) &#123;</span><br><span class="line">    cfg := &amp;config.Configuration&#123;</span><br><span class="line">        ServiceName: <span class="string">"golang"</span>,</span><br><span class="line">        Sampler: &amp;config.SamplerConfig &#123;</span><br><span class="line">            Type: <span class="string">"const"</span>,</span><br><span class="line">            Param: <span class="number">1</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        Reporter: &amp;config.ReporterConfig &#123;</span><br><span class="line">            LogSpans: <span class="literal">true</span>,</span><br><span class="line">            LocalAgentHostPort:<span class="string">"192.168.56.5:6831"</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    tracer, closer, <span class="attr">err</span> := cfg.NewTracer(config.Logger(jaeger.StdLogger))</span><br><span class="line">    <span class="keyword">if</span> err != nil &#123;</span><br><span class="line">        fmt.Sprintf(<span class="string">"ERROR: cannot init Jaeger: %v\n"</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tracer, closer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    tracer, <span class="attr">closer</span> := initTracer()</span><br><span class="line">    defer closer.Close()</span><br><span class="line">    opentracing.SetGlobalTracer(tracer)</span><br><span class="line"></span><br><span class="line">    r := gin.Default()</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">"/"</span>, func(c *gin.Context) &#123;</span><br><span class="line">        span := tracer.StartSpan(c.Request.URL.Path)</span><br><span class="line">        defer span.Finish()</span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">"/extract"</span>, func(c *gin.Context) &#123;</span><br><span class="line">        spanCtx, <span class="attr">_</span> := opentracing.GlobalTracer().Extract(opentracing.HTTPHeaders, opentracing.HTTPHeadersCarrier(c.Request.Header))</span><br><span class="line">        span := opentracing.StartSpan(c.Request.URL.Path, opentracing.ChildOf(spanCtx))</span><br><span class="line">        defer span.Finish()</span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">"/inject"</span>, func(c *gin.Context) &#123;</span><br><span class="line">        span := tracer.StartSpan(c.Request.URL.Path)</span><br><span class="line">        defer span.Finish()</span><br><span class="line"></span><br><span class="line">        client := &amp;http.Client &#123; <span class="attr">Timeout</span>: time.Second * <span class="number">5</span> &#125;</span><br><span class="line">        req, <span class="attr">err</span> := http.NewRequest(<span class="string">"GET"</span>, <span class="string">"http://192.168.56.5:5000/extract"</span>, nil)</span><br><span class="line">        <span class="keyword">if</span> err != nil &#123;</span><br><span class="line">            fmt.Println(err)</span><br><span class="line">        &#125;</span><br><span class="line">        injectErr := opentracing.GlobalTracer().Inject(span.Context(), opentracing.HTTPHeaders, opentracing.HTTPHeadersCarrier(req.Header))</span><br><span class="line">        <span class="keyword">if</span> injectErr != nil &#123;</span><br><span class="line">            fmt.Println(<span class="string">"%s: Couldn't inject headers"</span>, err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        resp, <span class="attr">err</span> := client.Do(req)</span><br><span class="line">        <span class="keyword">if</span> err != nil &#123;</span><br><span class="line">            fmt.Println(err)</span><br><span class="line">        &#125;</span><br><span class="line">        defer resp.Body.Close()</span><br><span class="line"></span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.Run(<span class="string">":8888"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>tag and log<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">span.LogKV(<span class="string">"key"</span>, <span class="string">"value"</span>)</span><br><span class="line">span.SetTag(<span class="string">"key"</span>, <span class="string">"value"</span>)</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="https://juejin.im/post/5d8f5cd2f265da5b62533852" target="_blank" rel="noopener">https://juejin.im/post/5d8f5cd2f265da5b62533852</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jaeger </tag>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World for Golnag</title>
      <link href="/posts/2ac2687f/"/>
      <url>/posts/2ac2687f/</url>
      
        <content type="html"><![CDATA[<ul><li>安裝 Golang in 開發環境<br>go version 1.11+ is required for gin<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:longsleep/golang-backports</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install golang-go</span><br></pre></td></tr></table></figure></li><li>Without any framework<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"log"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">index</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span>&#123;</span><br><span class="line">    fmt.Fprintf(w, <span class="string">"Hello World!"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">"/"</span>, index)</span><br><span class="line">    http.HandleFunc(<span class="string">"/api"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        res := <span class="string">"Hello World!"</span></span><br><span class="line">        fmt.Fprintf(w, <span class="string">"%s"</span>, res)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    log.Fatal(http.ListenAndServe(<span class="string">":8888"</span>, <span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Using gin</li></ul><ol><li>安裝gin套件<br><code>go get -u github.com/gin-gonic/gin</code></li><li>app.go<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := gin.Default()</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World!"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.Run(<span class="string">":8888"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>start server<br><code>go run app.go</code></li><li>compile<br><code>go build</code><br><code>go build -o app</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in Node.js</title>
      <link href="/posts/9a34aaf2/"/>
      <url>/posts/9a34aaf2/</url>
      
        <content type="html"><![CDATA[<ul><li>package<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install express --save</span><br><span class="line">$ npm install opentracing jaeger-client --save</span><br></pre></td></tr></table></figure></li><li>server.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="keyword">var</span> initJaegerTracer = <span class="built_in">require</span>(<span class="string">'jaeger-client'</span>).initTracer;</span><br><span class="line"><span class="keyword">var</span> opentracing = <span class="built_in">require</span>(<span class="string">'opentracing'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initTracer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> config = &#123;</span><br><span class="line">    serviceName: <span class="string">'nodejs'</span>,</span><br><span class="line">    sampler: &#123;<span class="attr">type</span>: <span class="string">'const'</span>, <span class="attr">param</span>: <span class="number">1</span>&#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">const</span> options = &#123;</span><br><span class="line">    logger: &#123;</span><br><span class="line">      info(msg) &#123;<span class="built_in">console</span>.log(<span class="string">'INFO '</span>, msg);&#125;,</span><br><span class="line">      error(msg) &#123;<span class="built_in">console</span>.log(<span class="string">'ERROR'</span>, msg);&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> initJaegerTracer(config, options);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tracer = initTracer();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> span = tracer.startSpan(req.url);</span><br><span class="line">  res.send(<span class="string">'Hello World!'</span>);</span><br><span class="line">  span.finish();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/extract'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> parentSpanContext = tracer.extract(opentracing.FORMAT_HTTP_HEADERS, req.headers);</span><br><span class="line">  <span class="keyword">const</span> span = tracer.startSpan(req.url, &#123; <span class="attr">childOf</span>: parentSpanContext &#125;);</span><br><span class="line">  res.send(<span class="string">'Hello World!'</span>);</span><br><span class="line">  span.finish();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/inject'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.send(<span class="string">'Hello World!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">9527</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Example app listening on port 9527!'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>tag<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">span.setTag(<span class="string">"key"</span>, <span class="string">"value"</span>)</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="https://rainmakerho.github.io/2019/01/15/2019004/" target="_blank" rel="noopener">https://rainmakerho.github.io/2019/01/15/2019004/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> Jaeger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in Flask</title>
      <link href="/posts/cbe29751/"/>
      <url>/posts/cbe29751/</url>
      
        <content type="html"><![CDATA[<ul><li>package<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ pip install flask flask-sqlalchemy redis</span><br><span class="line">(venv) $ pip install opentracing_instrumentation jaeger-client flask-opentracing</span><br></pre></td></tr></table></figure></li><li>app.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> opentracing</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">from</span> flask_opentracing <span class="keyword">import</span> FlaskTracing</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"><span class="keyword">from</span> jaeger_client <span class="keyword">import</span> Config</span><br><span class="line"><span class="keyword">from</span> opentracing_instrumentation.client_hooks <span class="keyword">import</span> install_all_patches</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initTracer</span><span class="params">()</span>:</span></span><br><span class="line">  config = Config(</span><br><span class="line">      config=&#123;</span><br><span class="line">          <span class="string">'sampler'</span>: &#123;<span class="string">'type'</span>: <span class="string">'const'</span>, <span class="string">'param'</span>: <span class="number">1</span>&#125;,</span><br><span class="line">          <span class="string">'local_agent'</span>: &#123;</span><br><span class="line">              <span class="string">'reporting_host'</span>: <span class="string">'192.168.56.5'</span>,</span><br><span class="line">              <span class="string">'reporting_port'</span>: <span class="number">6831</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      service_name=<span class="string">'flask'</span>)</span><br><span class="line">  <span class="keyword">return</span> config.initialize_tracer()</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">conn = redis.Redis(host=<span class="string">'192.168.56.5'</span>, port=<span class="number">6379</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Trace MySQL and Redis automatically</span></span><br><span class="line">install_all_patches()</span><br><span class="line"></span><br><span class="line"><span class="comment">#Trace all api requests automatically, it's not necessary to create span manually</span></span><br><span class="line">tracer = FlaskTracing(initTracer, trace_all_requests=<span class="literal">True</span>, app=app)</span><br><span class="line"></span><br><span class="line">pjdir = os.path.abspath(os.path.dirname(__file__))</span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_TRACK_MODIFICATIONS'</span>] = <span class="literal">True</span></span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_DATABASE_URI'</span>] = <span class="string">'sqlite:///'</span> + os.path.join(pjdir, <span class="string">'data.sqlite'</span>)</span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">'users'</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = db.Column(db.String(<span class="number">20</span>))</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">db.create_all()</span><br><span class="line">db.session.commit()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> opentracing.tracer.start_active_span(request.path) <span class="keyword">as</span> span:</span><br><span class="line">        print(<span class="string">"do something..."</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!!'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/extract')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extract</span><span class="params">()</span>:</span></span><br><span class="line">    span_context = opentracing.tracer.extract(</span><br><span class="line">                       format=opentracing.Format.HTTP_HEADERS,</span><br><span class="line">                       carrier=request.headers)</span><br><span class="line">    span = opentracing.tracer.start_span(request.path, child_of=span_context)</span><br><span class="line">    print(<span class="string">"do something..."</span>)</span><br><span class="line">    span.finish()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!!'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/inject')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inject</span><span class="params">()</span>:</span></span><br><span class="line">    span = tracer.get_span(request)</span><br><span class="line">    http_header_carrier = &#123;&#125;</span><br><span class="line">    opentracing.global_tracer().inject(span_context=span,</span><br><span class="line">                                       format=opentracing.Format.HTTP_HEADERS,</span><br><span class="line">                                       carrier=http_header_carrier)</span><br><span class="line">    requests.get(<span class="string">'http://192.168.56.5:8888/extract'</span>, headers=http_header_carrier)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!!'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/get')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">()</span>:</span></span><br><span class="line">    redis_data = conn.get(<span class="string">'test'</span>)</span><br><span class="line">    user = User.query.filter_by(name=<span class="string">'test'</span>).first()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'GET'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/set')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set</span><span class="params">()</span>:</span></span><br><span class="line">    conn.set(name=<span class="string">'test'</span>, value=<span class="string">'data'</span>)</span><br><span class="line">    user = User(name=<span class="string">'test'</span>)</span><br><span class="line">    db.session.add(user)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'SET'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></li><li>tag and log<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">span.set_tag(<span class="string">'key'</span>, <span class="string">'value'</span>)</span><br><span class="line">span.log_kv(&#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>, <span class="string">'key2'</span>: value2&#125;)</span><br></pre></td></tr></table></figure></li><li>建立一個單純tracing api功能的server<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_opentracing <span class="keyword">import</span> FlaskTracing</span><br><span class="line"><span class="keyword">from</span> jaeger_client <span class="keyword">import</span> Config</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initTracer</span><span class="params">()</span>:</span></span><br><span class="line">  config = Config(</span><br><span class="line">      config=&#123;</span><br><span class="line">          <span class="string">'sampler'</span>: &#123;<span class="string">'type'</span>: <span class="string">'const'</span>, <span class="string">'param'</span>: <span class="number">1</span>&#125;,</span><br><span class="line">          <span class="string">'local_agent'</span>: &#123;</span><br><span class="line">              <span class="string">'reporting_host'</span>: <span class="string">'192.168.56.5'</span>,</span><br><span class="line">              <span class="string">'reporting_port'</span>: <span class="number">6831</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      service_name=<span class="string">'flask'</span>)</span><br><span class="line">  <span class="keyword">return</span> config.initialize_tracer()</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">tracer = FlaskTracing(initTracer, trace_all_requests=<span class="literal">True</span>, app=app)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!!'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Jaeger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger Deployment</title>
      <link href="/posts/bfd5d971/"/>
      <url>/posts/bfd5d971/</url>
      
        <content type="html"><![CDATA[<p><img src="/posts/bfd5d971/architecture-v1.png" alt></p><ul><li>cassandra DB</li><li>jarger-query</li><li>jaeger-collector</li><li>jaeger-agent</li><li>spark</li></ul><ol><li>建立cassandra數據庫<br><a href="https://hub.docker.com/_/cassandra/" target="_blank" rel="noopener">https://hub.docker.com/_/cassandra/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name cassandra \</span><br><span class="line">  -p9042:9042 \</span><br><span class="line">  -v /opt/docker-software/cassandra/data:/var/lib/cassandra \</span><br><span class="line">  -v /opt/docker-software/cassandra/log:/var/log/cassandra \</span><br><span class="line">  cassandra</span><br></pre></td></tr></table></figure></li><li>建立數據庫中Jaeger table schema (僅需建立一次)<br><a href="https://hub.docker.com/r/jaegertracing/jaeger-cassandra-schema/" target="_blank" rel="noopener">https://hub.docker.com/r/jaegertracing/jaeger-cassandra-schema/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm --name cassandra-schema \</span><br><span class="line">  --link cassandra \</span><br><span class="line">  jaegertracing/jaeger-cassandra-schema:1.18</span><br></pre></td></tr></table></figure>執行結果如下<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Generating the schema <span class="keyword">for</span> the keyspace jaeger_v1_dc1 and datacenter dc1</span><br><span class="line">Using template file /cassandra-schema/v003.cql.tmpl with parameters:</span><br><span class="line">    mode = <span class="built_in">test</span></span><br><span class="line">    datacenter = dc1</span><br><span class="line">    keyspace = jaeger_v1_dc1</span><br><span class="line">    replication = &#123;<span class="string">'class'</span>: <span class="string">'SimpleStrategy'</span>, <span class="string">'replication_factor'</span>: <span class="string">'1'</span>&#125;</span><br><span class="line">    trace_ttl = 172800</span><br><span class="line">    dependencies_ttl = 0</span><br></pre></td></tr></table></figure></li><li>setup jaeger-query<br><a href="https://hub.docker.com/r/jaegertracing/jaeger-query/" target="_blank" rel="noopener">https://hub.docker.com/r/jaegertracing/jaeger-query/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name jaeger-query \</span><br><span class="line">  --link cassandra \</span><br><span class="line">  -p16686:16686 \</span><br><span class="line">  -p16687 \</span><br><span class="line">  -e CASSANDRA_KEYSPACE=jaeger_v1_dc1 \</span><br><span class="line">  -e CASSANDRA_SERVERS=cassandra \</span><br><span class="line">  jaegertracing/jaeger-query:1.18</span><br></pre></td></tr></table></figure></li><li>setup jaeger-collector<br><a href="https://hub.docker.com/r/jaegertracing/jaeger-collector/" target="_blank" rel="noopener">https://hub.docker.com/r/jaegertracing/jaeger-collector/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name jaeger-collector \</span><br><span class="line">  --link cassandra \</span><br><span class="line">  -p9411:9411 \</span><br><span class="line">  -p14250 \</span><br><span class="line">  -p14268:14268 \</span><br><span class="line">  -p14269 \</span><br><span class="line">  -e CASSANDRA_KEYSPACE=jaeger_v1_dc1 \</span><br><span class="line">  -e CASSANDRA_SERVERS=cassandra \</span><br><span class="line">  jaegertracing/jaeger-collector:1.18</span><br></pre></td></tr></table></figure></li><li>setup jaeger-agent<br><a href="https://hub.docker.com/r/jaegertracing/jaeger-agent/" target="_blank" rel="noopener">https://hub.docker.com/r/jaegertracing/jaeger-agent/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name jaeger-agent \</span><br><span class="line">  --link jaeger-collector \</span><br><span class="line">  -p5775:5775/udp \</span><br><span class="line">  -p5778:5778 \</span><br><span class="line">  -p6831:6831/udp \</span><br><span class="line">  -p6832:6832/udp \</span><br><span class="line">  jaegertracing/jaeger-agent:1.18 \</span><br><span class="line">  --reporter.grpc.host-port=jaeger-collector:14250</span><br></pre></td></tr></table></figure></li><li>spark<br><a href="https://hub.docker.com/r/jaegertracing/spark-dependencies/" target="_blank" rel="noopener">https://hub.docker.com/r/jaegertracing/spark-dependencies/</a><br>每執行一次僅會計算一次<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name spark \</span><br><span class="line">  -e STORAGE=cassandra \</span><br><span class="line">  -e CASSANDRA_CONTACT_POINTS=192.168.56.5:9042 \</span><br><span class="line">  jaegertracing/spark-dependencies</span><br></pre></td></tr></table></figure></li><li>docker-compose.yml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;2&apos;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">    cassandra:</span><br><span class="line">      image: cassandra</span><br><span class="line">      container_name: cassandra</span><br><span class="line">      ports:</span><br><span class="line">        - &quot;9042:9042&quot;</span><br><span class="line">      restart: always</span><br><span class="line">      volumes:</span><br><span class="line">        - /opt/docker-software/cassandra/data:/var/lib/cassandra</span><br><span class="line">        - /opt/docker-software/cassandra/log:/var/log/cassandra</span><br><span class="line"></span><br><span class="line">    cassandra-schema:</span><br><span class="line">      image: jaegertracing/jaeger-cassandra-schema:1.18</span><br><span class="line">      container_name: cassandra-schema</span><br><span class="line">      depends_on:</span><br><span class="line">        - cassandra</span><br><span class="line"></span><br><span class="line">    jaeger-query:</span><br><span class="line">      image: jaegertracing/jaeger-query:1.18</span><br><span class="line">      container_name: jaeger-query</span><br><span class="line">      command: [&quot;--cassandra.keyspace=jaeger_v1_dc1&quot;, &quot;--cassandra.servers=cassandra&quot;]</span><br><span class="line">      ports:</span><br><span class="line">        - &quot;16686:16686&quot;</span><br><span class="line">        - &quot;16687&quot;</span><br><span class="line">      restart: always</span><br><span class="line">      depends_on:</span><br><span class="line">        - cassandra-schema</span><br><span class="line"></span><br><span class="line">    jaeger-collector:</span><br><span class="line">      image: jaegertracing/jaeger-collector:1.18</span><br><span class="line">      container_name: jaeger-collector</span><br><span class="line">      command: [&quot;--cassandra.keyspace=jaeger_v1_dc1&quot;, &quot;--cassandra.servers=cassandra&quot;, &quot;--collector.zipkin.http-port=9411&quot;]</span><br><span class="line">      ports:</span><br><span class="line">        - &quot;14269&quot;</span><br><span class="line">        - &quot;14268:14268&quot;</span><br><span class="line">        - &quot;14250&quot;</span><br><span class="line">        - &quot;9411:9411&quot;</span><br><span class="line">      restart: always</span><br><span class="line">      depends_on:</span><br><span class="line">        - cassandra-schema</span><br><span class="line"></span><br><span class="line">    jaeger-agent:</span><br><span class="line">      image: jaegertracing/jaeger-agent:1.18</span><br><span class="line">      container_name: jaeger-agent</span><br><span class="line">      command: [&quot;--reporter.grpc.host-port=jaeger-collector:14250&quot;]</span><br><span class="line">      ports:</span><br><span class="line">        - &quot;5775:5775/udp&quot;</span><br><span class="line">        - &quot;5778:5778&quot;</span><br><span class="line">        - &quot;6831:6831/udp&quot;</span><br><span class="line">        - &quot;6832:6832/udp&quot;</span><br><span class="line">      restart: always</span><br><span class="line">      depends_on:</span><br><span class="line">        - jaeger-collector</span><br><span class="line"></span><br><span class="line">    spark:</span><br><span class="line">      image: jaegertracing/spark-dependencies</span><br><span class="line">      container_name: spark</span><br><span class="line">      environments:</span><br><span class="line">        - STORAGE=cassandra</span><br><span class="line">        - CASSANDRA_CONTACT_POINTS=192.168.56.5:9042</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Jaeger </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jaeger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python pexpect</title>
      <link href="/posts/c7bdd75f/"/>
      <url>/posts/c7bdd75f/</url>
      
        <content type="html"><![CDATA[<p>expect(“xxx”)=&gt;等待”xxx”字串出現</p><ul><li>Sample 1<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pexpect</span><br><span class="line"></span><br><span class="line">c = pexpect.spawn(<span class="string">'sudo su'</span>)</span><br><span class="line">c.expect(<span class="string">'nick: '</span>)</span><br><span class="line">c.sendline(<span class="string">'123456'</span>)</span><br><span class="line">c.sendline(<span class="string">'mkdir test_folder'</span>)</span><br></pre></td></tr></table></figure></li><li>Sample 2<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pexpect</span><br><span class="line"></span><br><span class="line">c = pexpect.spawn(<span class="string">'git push'</span>)</span><br><span class="line">c.expect(<span class="string">'.ssh/id_rsa\':'</span>)</span><br><span class="line">c.sendline(<span class="string">'123456'</span>)</span><br><span class="line">c.expect(<span class="string">'master -&gt; master'</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> shell script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Server for Download in Node.js</title>
      <link href="/posts/c3baede7/"/>
      <url>/posts/c3baede7/</url>
      
        <content type="html"><![CDATA[<ul><li>setup server<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm init</span><br><span class="line">$ npm install express --save</span><br><span class="line">$ node server.js</span><br></pre></td></tr></table></figure></li><li>server.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app     = express();</span><br><span class="line"><span class="keyword">var</span> port    = process.env.PORT || <span class="number">1234</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//files in the public folder(and sub-folders in the public) can be downloaded via url directly</span></span><br><span class="line">app.use(express.static(__dirname + <span class="string">'/public'</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//or you can add any subpath</span></span><br><span class="line"><span class="comment">//app.use('/static', express.static(__dirname + '/public'));</span></span><br><span class="line"></span><br><span class="line">app.listen(port);</span><br></pre></td></tr></table></figure></li><li>目錄結構<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── public</span><br><span class="line">│   ├── image</span><br><span class="line">│   │   └── test.jpg</span><br><span class="line">│   ├── test.txt</span><br><span class="line">│   └── video</span><br><span class="line">│       └── test.mp4</span><br><span class="line">└── server.js</span><br></pre></td></tr></table></figure></li><li>下載網址：<br><a href="http://127.0.0.1:1234/test.txt" target="_blank" rel="noopener">http://127.0.0.1:1234/test.txt</a><br><a href="http://127.0.0.1:1234/video/test.mp4" target="_blank" rel="noopener">http://127.0.0.1:1234/video/test.mp4</a><br><a href="http://127.0.0.1:1234/image/test.jpg" target="_blank" rel="noopener">http://127.0.0.1:1234/image/test.jpg</a><br>如果有設定subpath：<br><a href="http://127.0.0.1:1234/static/test.txt" target="_blank" rel="noopener">http://127.0.0.1:1234/static/test.txt</a><br><a href="http://127.0.0.1:1234/static/video/test.mp4" target="_blank" rel="noopener">http://127.0.0.1:1234/static/video/test.mp4</a><br><a href="http://127.0.0.1:1234/static/image/test.jpg" target="_blank" rel="noopener">http://127.0.0.1:1234/static/image/test.jpg</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Server for Upload in Node.js</title>
      <link href="/posts/ee140a30/"/>
      <url>/posts/ee140a30/</url>
      
        <content type="html"><![CDATA[<ul><li>setup server<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm init</span><br><span class="line">$ npm install express multer --save</span><br><span class="line">$ node server.js</span><br></pre></td></tr></table></figure></li><li>server.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">var</span> multer  = <span class="built_in">require</span>(<span class="string">'multer'</span>);</span><br><span class="line"><span class="keyword">var</span> path    = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">var</span> app     = express();</span><br><span class="line"><span class="keyword">var</span> port    = process.env.PORT || <span class="number">1234</span>;</span><br><span class="line"><span class="keyword">var</span> storage = multer.diskStorage(&#123;</span><br><span class="line">    destination: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">        cb(<span class="literal">null</span>, __dirname + <span class="string">'/uploads/'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    filename: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">const</span> extension = path.extname(file.originalname)</span><br><span class="line">        <span class="keyword">const</span> basename = path.basename(file.originalname, extension)</span><br><span class="line">        cb(<span class="literal">null</span>, basename + <span class="string">'-'</span> + <span class="built_in">Date</span>.now() + extension)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> upload  = multer(&#123; <span class="attr">storage</span>: storage &#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    res.sendFile(__dirname + <span class="string">"/index.html"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/upload'</span>, upload.any(), <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.files)</span><br><span class="line">    res.redirect(<span class="string">'/'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(port);</span><br></pre></td></tr></table></figure></li><li>index.html<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>This is title<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>      =  <span class="string">"uploadForm"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">enctype</span> =  <span class="string">"multipart/form-data"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">action</span>  =  <span class="string">"/upload"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">method</span>  =  <span class="string">"post"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">value</span>=<span class="string">"Choose Files"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>目錄結構<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── uploads</span><br><span class="line">└── server.js</span><br></pre></td></tr></table></figure></li><li>Android HttpClient<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">HttpPost httpPost = new HttpPost(&quot;http://127.0.0.1:1234/upload&quot;);</span><br><span class="line">MultipartEntityBuilder builder = MultipartEntityBuilder.create();</span><br><span class="line">builder.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);</span><br><span class="line"></span><br><span class="line">final File file = new File(&quot;/sdcard/filename&quot;);</span><br><span class="line">FileBody fb = new FileBody(file);</span><br><span class="line">builder.addPart(&quot;file&quot;, fb);</span><br><span class="line"></span><br><span class="line">final HttpEntity entity = builder.build();</span><br><span class="line">httpPost.setEntity(entity);</span><br><span class="line"></span><br><span class="line">HttpResponse httpResponse = httpClient.execute(httpPost);</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="http://expressjs.com/en/resources/middleware/multer.html" target="_blank" rel="noopener">http://expressjs.com/en/resources/middleware/multer.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis in Flask</title>
      <link href="/posts/602ee73a/"/>
      <url>/posts/602ee73a/</url>
      
        <content type="html"><![CDATA[<ol><li>setup redis server in ubuntu<br><code>$ sudo apt install redis-server</code></li><li>redis package for python<br><code>$ pip install redis</code></li><li>Hello World for redis<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">conn = redis.Redis(host=<span class="string">'192.168.56.5'</span>, port=<span class="number">6379</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/get')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_get</span><span class="params">()</span>:</span></span><br><span class="line">    data = conn.get(<span class="string">'key'</span>)</span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'no data found'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/set')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_set</span><span class="params">()</span>:</span></span><br><span class="line">    conn.set(name=<span class="string">'key'</span>, value=<span class="string">'value'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'OK'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ curl -X GET http://192.168.56.5:5000/get</span><br><span class="line">no data found</span><br><span class="line">(venv) $ curl -X GET http://192.168.56.5:5000/<span class="built_in">set</span></span><br><span class="line">OK</span><br><span class="line">(venv) $ curl -X GET http://192.168.56.5:5000/get</span><br><span class="line">value</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ping and nc in Python</title>
      <link href="/posts/dfaf3d8a/"/>
      <url>/posts/dfaf3d8a/</url>
      
        <content type="html"><![CDATA[<p>linux與windows中，ping的參數不一樣</p><ul><li><p>the ping will stop afer 1 package is replied</p><ul><li>in linux<br><code>-c</code></li><li>in windows<br><code>-n</code></li></ul></li><li><p>timeout</p><ul><li>in linux<br><code>-W</code> 單位為秒</li><li>in windows<br><code>-w</code> 單位為毫秒</li></ul></li><li><p>ping</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ping</span><span class="params">(ip)</span>:</span></span><br><span class="line">    ping = subprocess.call([<span class="string">"ping"</span>, <span class="string">"-c"</span>, <span class="string">"1"</span>, ip])</span><br><span class="line">    <span class="keyword">if</span> ping == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">"ping to "</span> + ip + <span class="string">" OK"</span>)</span><br><span class="line">    <span class="keyword">elif</span> ping == <span class="number">2</span>:</span><br><span class="line">        print(<span class="string">"no response from "</span> + ip)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"ping to "</span> + ip + <span class="string">" failed"</span>)</span><br></pre></td></tr></table></figure></li><li><p>netcat</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">netcat</span><span class="params">(ip, port)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        s.connect((ip, int(port)))</span><br><span class="line">        s.shutdown(socket.SHUT_WR)</span><br><span class="line">        s.close()</span><br><span class="line">        print(ip + <span class="string">":"</span> + str(port) + <span class="string">" can be connected"</span>)</span><br><span class="line">    <span class="keyword">except</span> ConnectionRefusedError:</span><br><span class="line">        print(ip + <span class="string">":"</span> + str(port) + <span class="string">" cannot be connected"</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>API Request in Node.js</title>
      <link href="/posts/c81ebda3/"/>
      <url>/posts/c81ebda3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> request = <span class="built_in">require</span>(<span class="string">'request'</span>);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/api'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> payload = &#123;<span class="string">"name"</span>:req.body.name, <span class="string">"password"</span>:req.body.password&#125;</span><br><span class="line">    request.post(&#123;<span class="attr">url</span>:<span class="string">'http://192.168.21.84:8080/api'</span>, <span class="attr">form</span>:payload&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, response, body</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!err &amp;&amp; response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(body);</span><br><span class="line">            res.send(body);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/api'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    request(<span class="string">'http://192.168.21.84:8080/api?abc=123'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error, response, body</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!err &amp;&amp; response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(body);</span><br><span class="line">            res.send(body);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thread in C++11</title>
      <link href="/posts/f5b96866/"/>
      <url>/posts/f5b96866/</url>
      
        <content type="html"><![CDATA[<p>On GCC, compile with -std=c++0x -pthread</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The function we want to execute on the new thread.</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">task1</span><span class="params">(<span class="built_in">string</span> msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"task1 says: "</span> &lt;&lt; msg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Constructs the new thread and runs it. Does not block execution.</span></span><br><span class="line">    <span class="function">thread <span class="title">t1</span><span class="params">(task1, <span class="string">"Hello"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do other things...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Makes the main thread wait for the new thread to finish execution, therefore blocks its own execution.</span></span><br><span class="line">    t1.join();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Calculate FPS</title>
      <link href="/posts/6e72c2d5/"/>
      <url>/posts/6e72c2d5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> imutils.video <span class="keyword">import</span> FPS</span><br><span class="line">fps = FPS().start()</span><br><span class="line"><span class="comment">#do something...</span></span><br><span class="line">fps.update()</span><br><span class="line">fps.stop()</span><br><span class="line">logging.info(<span class="string">"[INFO] elapsed time: &#123;:.3f&#125;"</span>.format(fps.elapsed()))</span><br><span class="line">logging.info(<span class="string">"[INFO] approx. FPS: &#123;:.2f&#125;"</span>.format(fps.fps()))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debug Mode in Python</title>
      <link href="/posts/641ef2a2/"/>
      <url>/posts/641ef2a2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __debug__:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"In debug mode"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Not in debug mode"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ python main.py</span><br><span class="line">In debug mode</span><br><span class="line">$ python -O main.py</span><br><span class="line">Not <span class="keyword">in</span> debug mode</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World for Rust</title>
      <link href="/posts/bfb3e384/"/>
      <url>/posts/bfb3e384/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Install Rust using rustup</p><ul><li>in windows<br><code>https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe</code></li><li>in linux<br><code>curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh</code></li></ul></li><li><p>Hello World</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// This is the main function</span></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="comment">// Statements here are executed when the compiled binary is called</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Print text to the console</span></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"Hello World!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ rustc hello.rs</span><br><span class="line">$ ./hello</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Rust </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rust </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World for React</title>
      <link href="/posts/991d0773/"/>
      <url>/posts/991d0773/</url>
      
        <content type="html"><![CDATA[<ol><li>install react installation package<br><code>$ sudo npm install -g create-react-app</code></li><li>create react app<br><code>$ create-react-app hello-world</code></li><li>start react server on port 3000<br><code>$ cd hello-world</code><br><code>$ npm start</code></li><li>install json server<br><code>$ npm install -g json-server</code></li><li>start json server<br>到當前的 project folder<br><code>--watch</code>可以監控當 data 有修改時，會自動 reload server<br><code>$ json-server.cmd --watch --port 3004 ./src/db.json</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask sqlalchemy</title>
      <link href="/posts/9d490f81/"/>
      <url>/posts/9d490f81/</url>
      
        <content type="html"><![CDATA[<ul><li>Preparation<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ pip install flask flask-sqlalchemy</span><br></pre></td></tr></table></figure></li><li>edit main.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">pjdir = os.path.abspath(os.path.dirname(__file__))</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_TRACK_MODIFICATIONS'</span>] = <span class="literal">True</span></span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_DATABASE_URI'</span>] = <span class="string">'sqlite:///'</span> + os.path.join(pjdir, <span class="string">'data.sqlite'</span>)</span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">'users'</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = db.Column(db.String(<span class="number">20</span>))</span><br><span class="line">    username = db.Column(db.String(<span class="number">20</span>), unique=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    password = db.Column(db.String(<span class="number">20</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, username, password)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.username = username</span><br><span class="line">        self.password = hashlib.sha1(password).hexdigest()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User('&#123;&#125;','&#123;&#125;', '&#123;&#125;')"</span>.format(</span><br><span class="line">            self.name,</span><br><span class="line">            self.username,</span><br><span class="line">            self.password</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">db.create_all()</span><br><span class="line">db.session.commit()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;h1&gt;Hello World!&lt;/h1&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></li><li>Test using flask shell<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ flask shell</span><br><span class="line">Python 3.6.9 (default, Apr 18 2020, 01:56:04) </span><br><span class="line">[GCC 8.4.0] on linux</span><br><span class="line">App: main [production]</span><br><span class="line">Instance: /home/user/data/sqlalchemy/instance</span><br><span class="line">&gt;&gt;&gt; from main import db</span><br><span class="line">&gt;&gt;&gt; db.create_all() # 執行完後，就會建立data.sqlite</span><br><span class="line">&gt;&gt;&gt; from main import User</span><br><span class="line">&gt;&gt;&gt; user_1 = User(&apos;user1&apos;, &apos;username1&apos;, &apos;password_1&apos;.encode(&apos;utf-8&apos;))</span><br><span class="line">&gt;&gt;&gt; user_2 = User(&apos;user2&apos;, &apos;username2&apos;, &apos;password_2&apos;.encode(&apos;utf-8&apos;))</span><br><span class="line">&gt;&gt;&gt; user_3 = User(&apos;user3&apos;, &apos;username3&apos;, &apos;password_3&apos;.encode(&apos;utf-8&apos;))</span><br><span class="line">&gt;&gt;&gt; db.session.add_all([user_1, user_2, user_3])</span><br><span class="line">&gt;&gt;&gt; db.session.commit()</span><br><span class="line">&gt;&gt;&gt; db.session.query(User)</span><br><span class="line">&lt;flask_sqlalchemy.BaseQuery object at 0x05389DB0&gt;</span><br><span class="line">&gt;&gt;&gt; db.session.query(User).all()</span><br><span class="line">[User(&apos;user1&apos;,&apos;username1&apos;, &apos;3833b3a1c69cf71a31d86cb5bb4d3866789b4d1e&apos;), User(&apos;user2&apos;,&apos;username2&apos;, &apos;148dfdc3c539d35004cb808ca84e17ff962af744&apos;), User(&apos;user3&apos;,&apos;username3&apos;, &apos;2f508abdcc1da55a452e2436b47e9a860cdbdcc6&apos;)]</span><br><span class="line">&gt;&gt;&gt; User.query.all()</span><br><span class="line">[User(&apos;user1&apos;,&apos;username1&apos;, &apos;3833b3a1c69cf71a31d86cb5bb4d3866789b4d1e&apos;), User(&apos;user2&apos;,&apos;username2&apos;, &apos;148dfdc3c539d35004cb808ca84e17ff962af744&apos;), User(&apos;user3&apos;,&apos;username3&apos;, &apos;2f508abdcc1da55a452e2436b47e9a860cdbdcc6&apos;)]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask cors</title>
      <link href="/posts/22884ce3/"/>
      <url>/posts/22884ce3/</url>
      
        <content type="html"><![CDATA[<ul><li>document<br><a href="https://flask-cors.readthedocs.io/en/latest/" target="_blank" rel="noopener">https://flask-cors.readthedocs.io/en/latest/</a></li><li>install<br><code>pip install flask_cors</code></li><li>全域設定<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_cors <span class="keyword">import</span> CORS</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">CORS(app)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello, cross-origin-world!"</span></span><br></pre></td></tr></table></figure></li><li>api個別設定<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_cors <span class="keyword">import</span> cross_origin</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="meta">@cross_origin()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello, cross-origin-world!"</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Threading in Python</title>
      <link href="/posts/828ababc/"/>
      <url>/posts/828ababc/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子執行緒的工作函數</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">job</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    print(<span class="string">"Child thread:"</span>, i)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立一個子執行緒</span></span><br><span class="line">t = threading.Thread(target = job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 執行該子執行緒</span></span><br><span class="line">t.start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主執行緒繼續執行自己的工作</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">  print(<span class="string">"Main thread:"</span>, i)</span><br><span class="line">  time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待 t 這個子執行緒結束</span></span><br><span class="line">t.join()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Done."</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Child thread: 0</span><br><span class="line">Main thread: 0</span><br><span class="line">Main thread: 1</span><br><span class="line">Child thread: 1</span><br><span class="line">Main thread: 2</span><br><span class="line">Child thread: 2</span><br><span class="line">Child thread: 3</span><br><span class="line">Child thread: 4</span><br><span class="line">Done.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子執行緒的工作函數</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">job</span><span class="params">(num)</span>:</span></span><br><span class="line">  print(<span class="string">"Thread"</span>, num)</span><br><span class="line">  time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立 5 個子執行緒</span></span><br><span class="line">threads = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">  threads.append(threading.Thread(target = job, args = (i,)))</span><br><span class="line">  threads[i].start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主執行緒繼續執行自己的工作</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待所有子執行緒結束</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">  threads[i].join()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Done."</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子執行緒類別</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, num)</span>:</span></span><br><span class="line">    threading.Thread.__init__(self)</span><br><span class="line">    self.num = num</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">    print(<span class="string">"Thread"</span>, self.num)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立 5 個子執行緒</span></span><br><span class="line">threads = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">  threads.append(MyThread(i))</span><br><span class="line">  threads[i].start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主執行緒繼續執行自己的工作</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待所有子執行緒結束</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">  threads[i].join()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Done."</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Thread 0</span><br><span class="line">Thread 1</span><br><span class="line">Thread 2</span><br><span class="line">Thread 3</span><br><span class="line">Thread 4</span><br><span class="line">Done.</span><br></pre></td></tr></table></figure><ul><li>reference<br><a href="https://blog.gtwang.org/programming/python-threading-multithreaded-programming-tutorial/" target="_blank" rel="noopener">https://blog.gtwang.org/programming/python-threading-multithreaded-programming-tutorial/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World for Flask</title>
      <link href="/posts/d5faf89c/"/>
      <url>/posts/d5faf89c/</url>
      
        <content type="html"><![CDATA[<ol><li>setup virtual environment<br><code>$ virtualenv venv</code><br><code>$ source venv/bin/activate</code></li><li>install flask<br><code>(venv)$ pip install flask</code></li><li>edit main.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></li><li>start server<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> FLASK_APP=main.py</span><br><span class="line">$ flask run --host 0.0.0.0 --port 3000</span><br></pre></td></tr></table></figure></li><li>在debug模式下，有任何修改都會自動reload server<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ <span class="built_in">set</span> FLASK_APP=main.py</span><br><span class="line">(venv) $ <span class="built_in">set</span> FLASK_DEBUG=1</span><br><span class="line">(venv) $ flask run --host 0.0.0.0 --port 3000</span><br><span class="line"> * Environment: production</span><br><span class="line">   WARNING: This is a development server. Do not use it <span class="keyword">in</span> a production deployment.</span><br><span class="line">   Use a production WSGI server instead.</span><br><span class="line"> * Debug mode: on</span><br><span class="line"> * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)</span><br><span class="line"> * Restarting with <span class="built_in">stat</span></span><br><span class="line"> * Debugger is active!</span><br><span class="line"> * Debugger PIN: 369-389-049</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World for Node.js</title>
      <link href="/posts/3bd1d4df/"/>
      <url>/posts/3bd1d4df/</url>
      
        <content type="html"><![CDATA[<ol><li>建立project，過程中一直Enter即可<br><code>$ npm init</code></li><li>安裝Express<br><code>$ npm install express --save</code></li><li>edit index.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.send(<span class="string">'Hello World!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">9527</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Example app listening on port 9527!'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>執行server<br><code>$ node index.js</code></li><li>建立<code>server</code> folder (後端代碼通常都寫在該目錄下)</li><li>用JSON模擬後台數據，create <code>data</code> folder<br>edit server/data/getMessage.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> MessageList = [</span><br><span class="line">    &#123; <span class="string">"Message"</span>:<span class="string">"Hello React"</span>&#125;,</span><br><span class="line">    &#123; <span class="string">"Message"</span>:<span class="string">"Hello Webpack"</span>&#125;,</span><br><span class="line">    &#123; <span class="string">"Message"</span>:<span class="string">"Hello Nodejs"</span>&#125;,</span><br><span class="line">    &#123; <span class="string">"Message"</span>:<span class="string">"Hello Express"</span>&#125;</span><br><span class="line">];</span><br><span class="line">exports.getMessageList = <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>) </span>&#123;</span><br><span class="line">    callback(MessageList);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>封裝接口<br>edit server/action/data/getMessage.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> getMessageList = <span class="built_in">require</span>(<span class="string">'../../data/getMessage'</span>);</span><br><span class="line"></span><br><span class="line">exports.execute = <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">     getMessageList.getMessageList(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">         res.send(data);</span><br><span class="line">     &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>定義接口並修改路由配置<br>edit index.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新增接口路由</span></span><br><span class="line">app.get(<span class="string">'/data/:module'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c_path = req.params.module;</span><br><span class="line">    <span class="keyword">var</span> Action = <span class="built_in">require</span>(<span class="string">'./server/action/data/'</span> + c_path);</span><br><span class="line">    Action.execute(req, res);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>api<br><a href="http://ip:9527/" target="_blank" rel="noopener">http://ip:9527/</a><br><a href="http://ip:9527/data/getMessage" target="_blank" rel="noopener">http://ip:9527/data/getMessage</a></li></ol><ul><li>nodemon，監控server，當有資料修改時，會自動重啟server<br><code>$ sudo npm install -g nodemon --save</code><br><code>$ nodemon index.js</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask csrf</title>
      <link href="/posts/5a69f21c/"/>
      <url>/posts/5a69f21c/</url>
      
        <content type="html"><![CDATA[<p>csrf: Cross-Site Request Forgery, 跨站請求攻擊或跨站偽造請求<br>在使用者不知情的情況下，讓使用者的瀏覽器自動送出請求給目標網站，利用使用者當前的身份去做一些未經過授權的操作以達攻擊目的<br>開啟csrf的配置，可以確保request是由網頁中的form送出的 而不是hacker自己偽造的<br><code>pip install flask-wtf</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask_wtf.csrf <span class="keyword">import</span> CsrfProtect</span><br><span class="line"></span><br><span class="line">csrf = CsrfProtect()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_app</span><span class="params">()</span>:</span></span><br><span class="line">    app = Flask(__name__)</span><br><span class="line">    app.config[<span class="string">'SECRET_KEY'</span>] = <span class="string">'...'</span></span><br><span class="line">    csrf.init_app(app)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Requests</title>
      <link href="/posts/7b85d651/"/>
      <url>/posts/7b85d651/</url>
      
        <content type="html"><![CDATA[<ul><li>Overview<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://ip:port/api'</span></span><br><span class="line">headers = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json;'</span>&#125;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    res = requests.get(url, headers=headers, timeout=<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">        res_json = res.json()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(traceback.format_exc())</span><br></pre></td></tr></table></figure></li><li>Client side<ul><li>GET<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</span><br><span class="line">payload = &#123; </span><br><span class="line">    <span class="string">'username'</span>: <span class="string">'user'</span>,</span><br><span class="line">    <span class="string">'password'</span>: <span class="string">'1234'</span></span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">'http://ip:port/api?'</span> + urlencode(payload)</span><br><span class="line">res = requests.get(url)</span><br></pre></td></tr></table></figure></li><li>POST<br>payload可分為form/json兩種type<br>form: 透過<code>data=payload</code>傳遞<br>json: 透過<code>json=payload</code>傳遞，且headers必須設定<code>Content-Type</code>為<code>application/json;</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">payload = &#123; </span><br><span class="line">    <span class="string">'username'</span>: <span class="string">'user'</span>,</span><br><span class="line">    <span class="string">'password'</span>: <span class="string">'1234'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'image.png'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    res = requests.post(url, data=payload, files=&#123;<span class="string">'image'</span>: f&#125;)</span><br></pre></td></tr></table></figure>files 參數也可以直接帶入 string<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = requests.post(url, data=payload, files=&#123;<span class="string">'file'</span>: <span class="string">'content_in_a_file'</span>&#125;)</span><br></pre></td></tr></table></figure></li><li>PUT<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = requests.put(url)</span><br></pre></td></tr></table></figure></li><li>DELETE<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = requests.delete(url)</span><br></pre></td></tr></table></figure></li></ul></li><li>Server side<ul><li>GET<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">params = request.args</span><br><span class="line">username = params.get(<span class="string">'username'</span>)</span><br><span class="line">password = params.get(<span class="string">'password'</span>)</span><br></pre></td></tr></table></figure></li><li>POST<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">params = request.form <span class="keyword">or</span> request.get_json()</span><br><span class="line">username = params.get(<span class="string">'username'</span>)</span><br><span class="line">password = params.get(<span class="string">'password'</span>)</span><br><span class="line">upload_file = request.files[<span class="string">'image'</span>]</span><br></pre></td></tr></table></figure></li></ul></li><li>Get params and transfer to dict for GET/POST(form, json) requests<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">params = request.args.to_dict() <span class="keyword">or</span> request.form.to_dict() <span class="keyword">or</span> request.get_json()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pywebview</title>
      <link href="/posts/e8087d33/"/>
      <url>/posts/e8087d33/</url>
      
        <content type="html"><![CDATA[<ul><li>Installation<br><code>pip install pywebview</code></li><li>Hello World<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> webview</span><br><span class="line">webview.create_window(<span class="string">'Hello world'</span>, <span class="string">'https://pywebview.flowrl.com/'</span>)</span><br><span class="line">webview.start()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>try-except in Python</title>
      <link href="/posts/2abc1d30/"/>
      <url>/posts/2abc1d30/</url>
      
        <content type="html"><![CDATA[<p>else: 如果沒有發生例外，執行<br>finally: 無論有沒有發生例外，都會執行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(<span class="string">"Normal execution block"</span>)</span><br><span class="line"><span class="keyword">except</span> A:</span><br><span class="line">    print(<span class="string">"Exception A handle"</span>)</span><br><span class="line"><span class="keyword">except</span> B:</span><br><span class="line">    print(<span class="string">"Exception B handle"</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"Other exception handle"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"if no exception, get here"</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    print(<span class="string">"finally"</span>)</span><br></pre></td></tr></table></figure><p><code>Exception</code>會獲得除了SystemExit，KeyboardInterrupt和GeneratorExit之外的所有異常<br>如果想捕獲這三個異常，將Exception改成<code>BaseException</code>即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   ...</span><br><span class="line"><span class="keyword">except</span> BaseException <span class="keyword">as</span> e:</span><br><span class="line">   ...</span><br><span class="line">   print(<span class="string">'Reason:'</span>, e)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Class Variable in Python</title>
      <link href="/posts/78834cdd/"/>
      <url>/posts/78834cdd/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span><span class="params">(object)</span>:</span></span><br><span class="line">    abc = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">A</span><span class="params">(cls)</span>:</span></span><br><span class="line">         cls.abc = <span class="number">2</span></span><br><span class="line">         print(cls.abc)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">B</span><span class="params">(cls)</span>:</span></span><br><span class="line">         print(cls.abc)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">C</span><span class="params">(cls)</span>:</span></span><br><span class="line">         print(cls.abc) <span class="comment">#還沒建立instance前，cls.abc是class variable</span></span><br><span class="line">         cls.abc = <span class="number">3</span>    <span class="comment">#建立instance variable</span></span><br><span class="line">         print(cls.abc) <span class="comment">#cls.abc是instance variable</span></span><br></pre></td></tr></table></figure><ul><li>sample 1<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">test.B()         <span class="comment">#1</span></span><br><span class="line">print(test.abc)  <span class="comment">#1</span></span><br><span class="line"></span><br><span class="line">test.A()         <span class="comment">#2</span></span><br><span class="line">test.B()         <span class="comment">#2</span></span><br><span class="line">print(test.abc)  <span class="comment">#2</span></span><br><span class="line"></span><br><span class="line">obj = test()</span><br><span class="line">obj.A()          <span class="comment">#2</span></span><br><span class="line">obj.C()          <span class="comment">#2 3</span></span><br><span class="line">test.A()         <span class="comment">#2</span></span><br><span class="line">test.B()         <span class="comment">#2</span></span><br><span class="line">print(test.abc)  <span class="comment">#2</span></span><br><span class="line">obj.C()          <span class="comment">#3 3</span></span><br></pre></td></tr></table></figure></li><li>sample 2<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">obj = test()</span><br><span class="line">obj.C()           <span class="comment">#1 3</span></span><br><span class="line">obj.B()           <span class="comment">#1</span></span><br><span class="line">obj.C()           <span class="comment">#3 3</span></span><br><span class="line"></span><br><span class="line">obj = test()</span><br><span class="line">obj.A()           <span class="comment">#2</span></span><br><span class="line">obj.C()           <span class="comment">#2 3</span></span><br><span class="line">obj.B()           <span class="comment">#2</span></span><br><span class="line">obj.C()           <span class="comment">#3 3</span></span><br></pre></td></tr></table></figure></li><li>sample 3<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">obj = test()</span><br><span class="line">obj.C()           <span class="comment">#1 3</span></span><br><span class="line">obj.B()           <span class="comment">#1</span></span><br><span class="line">obj.C()           <span class="comment">#3 3</span></span><br><span class="line">obj.A()           <span class="comment">#2</span></span><br><span class="line"></span><br><span class="line">obj2 = test()</span><br><span class="line">obj2.C()          <span class="comment">#2 3</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sftp</title>
      <link href="/posts/fc2aa32/"/>
      <url>/posts/fc2aa32/</url>
      
        <content type="html"><![CDATA[<p><code>pip install paramiko</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sftp_upload_file</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        t = paramiko.Transport((<span class="string">"192.168.56.5"</span>, <span class="number">22</span>))</span><br><span class="line">        t.connect(username=<span class="string">"user"</span>, password=<span class="string">"123456"</span>)</span><br><span class="line">        sftp = paramiko.SFTPClient.from_transport(t)</span><br><span class="line">        sftp.put(source, dest)</span><br><span class="line">        t.close()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    sftp_upload_file()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>list Operation in Python</title>
      <link href="/posts/ccc82893/"/>
      <url>/posts/ccc82893/</url>
      
        <content type="html"><![CDATA[<ul><li>List<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = [1, 2, 3, 4]</span><br><span class="line">b = [1, 4, 5, 6]</span><br></pre></td></tr></table></figure></li><li>交集<br>[法一]<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = [val for val in a if val in b] # [1, 4]</span><br></pre></td></tr></table></figure>[法二]<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = list(set(a).intersection(set(b))) # [1, 4]</span><br></pre></td></tr></table></figure></li><li>合集<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = list(set(a).union(set(b))) # [1, 2, 3, 4, 5, 6]</span><br></pre></td></tr></table></figure></li><li>差集<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result_a = list(set(a).difference(set(b))) # [2, 3]</span><br><span class="line">result_b = list(set(b).difference(set(a))) # [5, 6]</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kivy Sample</title>
      <link href="/posts/dad94859/"/>
      <url>/posts/dad94859/</url>
      
        <content type="html"><![CDATA[<p>A type of python GUI</p><ul><li>Installation on windows<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install docutils pygments pypiwin32 kivy_deps.sdl2==0.1.* kivy_deps.glew==0.1.* kivy_deps.gstreamer==0.1.* kivy_deps.angle==0.1.* kivy==1.11.1</span><br></pre></td></tr></table></figure></li><li>Example<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pip install kivy_examples==1.11.1</span><br><span class="line">$ python venv\share\kivy-examples\demo\showcase\main.py</span><br></pre></td></tr></table></figure></li><li>Hello World<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from kivy.app import App</span><br><span class="line">from kivy.uix.button import Button</span><br><span class="line"></span><br><span class="line">class TestApp(App):</span><br><span class="line">    def build(self):</span><br><span class="line">        return Button(text=&apos;Hello World&apos;)</span><br><span class="line"></span><br><span class="line">TestApp().run()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> kivy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Samba in ubuntu</title>
      <link href="/posts/d6bbfdfc/"/>
      <url>/posts/d6bbfdfc/</url>
      
        <content type="html"><![CDATA[<ol><li><p>install samba<br><code>sudo apt install samba</code></p></li><li><p>samba service<br><code>sudo service smbd stop</code><br><code>sudo service smbd start</code></p></li><li><p>samba config</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/samba/smb.conf</span><br><span class="line">[share]</span><br><span class="line">   path = /home/user</span><br><span class="line">   writeable = yes</span><br><span class="line">   browseable = yes</span><br><span class="line"></span><br><span class="line">// optional config</span><br><span class="line">valid users = user</span><br><span class="line"><span class="built_in">read</span> only = no</span><br><span class="line">create mask = 0644         ;檔案遮罩</span><br><span class="line">directory mask = 0755      ;資料夾遮罩</span><br><span class="line">public = yes               ;guest也可存取</span><br><span class="line">guess account = root       ;用samba登入預設是root權限</span><br><span class="line">force user = root          ;用samba登入預設是root權限</span><br><span class="line">force group = root         ;用samba登入預設是root權限</span><br><span class="line">guest ok = yes</span><br></pre></td></tr></table></figure></li><li><p>create account<br><code>sudo smbpasswd -a $USER</code></p></li><li><p>activate account<br><code>sudo smbpasswd -a $USER -e</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Notes</title>
      <link href="/posts/106b04cc/"/>
      <url>/posts/106b04cc/</url>
      
        <content type="html"><![CDATA[<ul><li>change image format<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install imagemagick</span><br><span class="line">//change png files to jpg</span><br><span class="line">$ mogrify -format jpg *.png</span><br><span class="line">//change bmp files to jpg</span><br><span class="line">$ mogrify -format jpg *.bmp</span><br></pre></td></tr></table></figure></li><li>deb files<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dpkg -i 軟體套件名稱.deb</span><br><span class="line">$ sudo apt-get remove 軟體套件名稱</span><br></pre></td></tr></table></figure></li><li>check connection status<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ping ip</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"hello"</span> | nc ip port</span><br></pre></td></tr></table></figure></li><li>file format<br>dos格式文件傳輸到unix系統時，會在每行的結尾多一個<code>^M</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//<span class="keyword">in</span> vim</span><br><span class="line">//查詢file format</span><br><span class="line">:<span class="built_in">set</span> ff</span><br><span class="line"></span><br><span class="line">//  設定file format</span><br><span class="line">:<span class="built_in">set</span> ff=dos</span><br><span class="line">:<span class="built_in">set</span> ff=unix</span><br></pre></td></tr></table></figure></li><li>add-apt-repository<br>透過add-apt-repository新增的資訊，會存在<br><code>/etc/apt/sources.list.d</code></li><li>查詢一個process在執行期間，context switch的次數<ul><li>voluntary_ctxt_switches: 自願  </li><li>nonvoluntary_ctxt_switches: 強制  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ grep ctxt /proc/6415/status</span><br><span class="line">voluntary_ctxt_switches:        80757</span><br><span class="line">nonvoluntary_ctxt_switches:     805</span><br></pre></td></tr></table></figure></li></ul></li><li>查看process切换的每秒統計值<br><code>pidstat -w 1</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install sysstat</span><br><span class="line">$ pidstat -w 1</span><br><span class="line">Linux 4.4.0-131-generic (vm-docker)     04/02/2019      _x86_64_        (4 CPU)</span><br><span class="line"></span><br><span class="line">05:14:06 PM   UID       PID   cswch/s nvcswch/s  Command</span><br><span class="line">05:14:07 PM     0         7     38.61      0.00  rcu_sched</span><br><span class="line">05:14:07 PM     0        23     19.80      0.00  ksoftirqd/3</span><br><span class="line">05:14:07 PM     0        29      0.99      0.00  khungtaskd</span><br></pre></td></tr></table></figure></li><li>useful tools<ul><li>landscape-common<br>Show system information when ssh logging<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">System information as of Fri Jun 12 16:37:37 CST 2020</span><br><span class="line"></span><br><span class="line">System load:                    0.24</span><br><span class="line">Usage of /:                     25.7% of 97.93GB</span><br><span class="line">Memory usage:                   78%</span><br><span class="line">Swap usage:                     71%</span><br><span class="line">Processes:                      310</span><br><span class="line">Users logged <span class="keyword">in</span>:                1</span><br><span class="line">IP address <span class="keyword">for</span> enp0s3:          10.0.2.15</span><br><span class="line">IP address <span class="keyword">for</span> enp0s8:          192.168.56.5</span><br></pre></td></tr></table></figure></li></ul></li><li>Boot Information<ul><li>boot-id, 每次重開機都會自動生成一組unique uuid<br><code>cat /proc/sys/kernel/random/boot_id</code></li><li>Bootup Identifier History<br><code>journalctl --list-boots</code></li></ul></li><li>Machine Identifier<br><code>cat /etc/machine-id</code></li><li>Hard Drive Block ID<br><code>sudo blkid | grep -oP &#39;UUID=&quot;\K[^&quot;]+&#39;</code></li><li>Drive Identifiers<br><code>sudo fdisk -l | grep -i &quot;Disk identifier&quot; | awk &#39;{print $3}&#39;</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>設定時間 in ubuntu</title>
      <link href="/posts/5a578a77/"/>
      <url>/posts/5a578a77/</url>
      
        <content type="html"><![CDATA[<ul><li>config ntp on/off<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ timedatectl set-ntp 0</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.timedate1.set-ntp ===</span><br><span class="line">Authentication is required to control whether network time synchronization shall be enabled.</span><br><span class="line">Authenticating as: user,,, (user)</span><br><span class="line">Password: </span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br><span class="line"></span><br><span class="line">$ timedatectl set-ntp 1</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.timedate1.set-ntp ===</span><br><span class="line">Authentication is required to control whether network time synchronization shall be enabled.</span><br><span class="line">Authenticating as: user,,, (user)</span><br><span class="line">Password: </span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br></pre></td></tr></table></figure></li><li>set time<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo timedatectl set-time &quot;2019-8-20 18:59:40&quot;</span><br><span class="line">$ sudo date -s &quot;Thu Dec 31 16:33:14 CST 2020&quot;</span><br></pre></td></tr></table></figure></li><li>set timezone<ul><li>Ubuntu<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dpkg-reconfigure tzdata</span><br></pre></td></tr></table></figure></li><li>Centos<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ timedatectl list-timezones</span><br><span class="line">$ sudo timedatectl set-timezone Asia/Taipei</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速建立 Docker Image</title>
      <link href="/posts/6a707551/"/>
      <url>/posts/6a707551/</url>
      
        <content type="html"><![CDATA[<ul><li>Dockerfile<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.6-alpine</span><br><span class="line"></span><br><span class="line">RUN apk update &amp;&amp; \</span><br><span class="line">    apk add bash &amp;&amp; \</span><br><span class="line">    pip install --no-cache-dir docker &amp;&amp; \</span><br><span class="line">    rm -rf /var/cache/apk/*</span><br><span class="line"></span><br><span class="line">CMD tail -f /dev/null</span><br></pre></td></tr></table></figure></li><li>build &amp; run<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker build --no-cache -t myimage .</span><br><span class="line">$ docker images</span><br><span class="line">REPOSITORY                  TAG                  IMAGE ID                  CREATED                  SIZE</span><br><span class="line">myimage                     latest               2afb69df98d1              27 minutes ago           79MB</span><br><span class="line">$ docker run -d --name mycontainer -v /var/run/docker.sock:/var/run/docker.sock myimage</span><br><span class="line">$ docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                  COMMAND                  CREATED                  STATUS                  PORTS                  NAMES</span><br><span class="line">9a2daa815404        myimage                <span class="string">"/bin/sh -c 'tail -f…"</span>   18 minutes ago           Up 18 minutes                                  mycontainer</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Client</title>
      <link href="/posts/20536423/"/>
      <url>/posts/20536423/</url>
      
        <content type="html"><![CDATA[<p>在container的程式中，獲取docker information</p><ul><li>安裝docker module<br><code>pip install docker</code><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(venv) user@vm-docker:~$ pip freeze</span><br><span class="line">certifi==2019.3.9</span><br><span class="line">chardet==3.0.4</span><br><span class="line">docker==3.7.2</span><br><span class="line">docker-pycreds==0.4.0</span><br><span class="line">idna==2.8</span><br><span class="line">requests==2.21.0</span><br><span class="line">six==1.12.0</span><br><span class="line">urllib3==1.24.1</span><br><span class="line">websocket-client==0.56.0</span><br></pre></td></tr></table></figure></li><li>container執行時，必須要建立以下volume<br><code>-v /var/run/docker.sock:/var/run/docker.sock</code></li><li>讀取container的image information<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> docker</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"/etc/hostname"</span>, <span class="string">"r"</span>, encoding=<span class="string">'utf8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    container_id = f.read()</span><br><span class="line">container_id = container_id.strip()</span><br><span class="line">client = docker.from_env()</span><br><span class="line">container = client.containers.get(str(container_id))</span><br><span class="line">image_info = container.attrs[<span class="string">'Config'</span>][<span class="string">'Image'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#container_id = 12220ad7e446</span></span><br><span class="line"><span class="comment">#info = myimage:1.0.2</span></span><br></pre></td></tr></table></figure></li><li>讀取cpu info及memory info<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> docker</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"/etc/hostname"</span>, <span class="string">"r"</span>, encoding=<span class="string">'utf8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    container_id = f.read()</span><br><span class="line">container_id = container_id.strip()</span><br><span class="line">client = docker.from_env()</span><br><span class="line">container = client.containers.get(str(container_id))</span><br><span class="line">stats = container.stats(stream=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">cpuDelta = int(stats[<span class="string">'cpu_stats'</span>][<span class="string">'cpu_usage'</span>][<span class="string">'total_usage'</span>]) - int(stats[<span class="string">'precpu_stats'</span>][<span class="string">'cpu_usage'</span>][<span class="string">'total_usage'</span>])</span><br><span class="line">systemDelta = int(stats[<span class="string">'cpu_stats'</span>][<span class="string">'system_cpu_usage'</span>]) - int(stats[<span class="string">'precpu_stats'</span>][<span class="string">'system_cpu_usage'</span>])</span><br><span class="line">usage = int(stats[<span class="string">'memory_stats'</span>][<span class="string">'usage'</span>])</span><br><span class="line">total = int(stats[<span class="string">'memory_stats'</span>][<span class="string">'limit'</span>])</span><br><span class="line"></span><br><span class="line">core = int(stats[<span class="string">'cpu_stats'</span>][<span class="string">'online_cpus'</span>])</span><br><span class="line">cpu_usage = (cpuDelta / systemDelta) * len(stats[<span class="string">'cpu_stats'</span>][<span class="string">'cpu_usage'</span>][<span class="string">'percpu_usage'</span>]) * <span class="number">100.0</span></span><br><span class="line">mem_usage = float(usage/(<span class="number">1024.0</span>*<span class="number">1024.0</span>))</span><br><span class="line">mem_total = float(total/(<span class="number">1024.0</span>*<span class="number">1024.0</span>))</span><br></pre></td></tr></table></figure></li><li>container.attrs內容，也可以經由docker inspect container_id得到<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">'Id'</span>: <span class="string">'9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454'</span>,</span><br><span class="line">    <span class="string">'Created'</span>: <span class="string">'2020-05-25T06: 01: 15.047049798Z'</span>,</span><br><span class="line">    <span class="string">'Path'</span>: <span class="string">'/bin/sh'</span>,</span><br><span class="line">    <span class="string">'Args'</span>: [<span class="string">'-c'</span>,</span><br><span class="line">    <span class="string">'tail-f/dev/null'</span>],</span><br><span class="line">    <span class="string">'State'</span>: &#123;</span><br><span class="line">        <span class="string">'Status'</span>: <span class="string">'running'</span>,</span><br><span class="line">        <span class="string">'Running'</span>: True,</span><br><span class="line">        <span class="string">'Paused'</span>: False,</span><br><span class="line">        <span class="string">'Restarting'</span>: False,</span><br><span class="line">        <span class="string">'OOMKilled'</span>: False,</span><br><span class="line">        <span class="string">'Dead'</span>: False,</span><br><span class="line">        <span class="string">'Pid'</span>: 18810,</span><br><span class="line">        <span class="string">'ExitCode'</span>: 0,</span><br><span class="line">        <span class="string">'Error'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'StartedAt'</span>: <span class="string">'2020-05-25T06: 01: 15.690055067Z'</span>,</span><br><span class="line">        <span class="string">'FinishedAt'</span>: <span class="string">'0001-01-01T00: 00: 00Z'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'Image'</span>: <span class="string">'sha256: 2afb69df98d14bd72295d3b5f61877879c35b2c1ba1300289f9f4ba3b9e54749'</span>,</span><br><span class="line">    <span class="string">'ResolvConfPath'</span>: <span class="string">'/var/lib/docker/containers/9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454/resolv.conf'</span>,</span><br><span class="line">    <span class="string">'HostnamePath'</span>: <span class="string">'/var/lib/docker/containers/9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454/hostname'</span>,</span><br><span class="line">    <span class="string">'HostsPath'</span>: <span class="string">'/var/lib/docker/containers/9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454/hosts'</span>,</span><br><span class="line">    <span class="string">'LogPath'</span>: <span class="string">'/var/lib/docker/containers/9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454/9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454-json.log'</span>,</span><br><span class="line">    <span class="string">'Name'</span>: <span class="string">'/mycontainer'</span>,</span><br><span class="line">    <span class="string">'RestartCount'</span>: 0,</span><br><span class="line">    <span class="string">'Driver'</span>: <span class="string">'overlay2'</span>,</span><br><span class="line">    <span class="string">'Platform'</span>: <span class="string">'linux'</span>,</span><br><span class="line">    <span class="string">'MountLabel'</span>: <span class="string">''</span>,</span><br><span class="line">    <span class="string">'ProcessLabel'</span>: <span class="string">''</span>,</span><br><span class="line">    <span class="string">'AppArmorProfile'</span>: <span class="string">'docker-default'</span>,</span><br><span class="line">    <span class="string">'ExecIDs'</span>: [<span class="string">'404b508dfb4fad457a7683f18fe2a96e6917c604261c35f8f3ba053c8ef64eb4'</span>],</span><br><span class="line">    <span class="string">'HostConfig'</span>: &#123;</span><br><span class="line">        <span class="string">'Binds'</span>: [<span class="string">'/var/run/docker.sock: /var/run/docker.sock'</span>],</span><br><span class="line">        <span class="string">'ContainerIDFile'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'LogConfig'</span>: &#123;</span><br><span class="line">            <span class="string">'Type'</span>: <span class="string">'json-file'</span>,</span><br><span class="line">            <span class="string">'Config'</span>: &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'NetworkMode'</span>: <span class="string">'default'</span>,</span><br><span class="line">        <span class="string">'PortBindings'</span>: &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'RestartPolicy'</span>: &#123;</span><br><span class="line">            <span class="string">'Name'</span>: <span class="string">'no'</span>,</span><br><span class="line">            <span class="string">'MaximumRetryCount'</span>: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'AutoRemove'</span>: False,</span><br><span class="line">        <span class="string">'VolumeDriver'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'VolumesFrom'</span>: None,</span><br><span class="line">        <span class="string">'CapAdd'</span>: None,</span><br><span class="line">        <span class="string">'CapDrop'</span>: None,</span><br><span class="line">        <span class="string">'Capabilities'</span>: None,</span><br><span class="line">        <span class="string">'Dns'</span>: [],</span><br><span class="line">        <span class="string">'DnsOptions'</span>: [],</span><br><span class="line">        <span class="string">'DnsSearch'</span>: [],</span><br><span class="line">        <span class="string">'ExtraHosts'</span>: None,</span><br><span class="line">        <span class="string">'GroupAdd'</span>: None,</span><br><span class="line">        <span class="string">'IpcMode'</span>: <span class="string">'private'</span>,</span><br><span class="line">        <span class="string">'Cgroup'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'Links'</span>: None,</span><br><span class="line">        <span class="string">'OomScoreAdj'</span>: 0,</span><br><span class="line">        <span class="string">'PidMode'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'Privileged'</span>: False,</span><br><span class="line">        <span class="string">'PublishAllPorts'</span>: False,</span><br><span class="line">        <span class="string">'ReadonlyRootfs'</span>: False,</span><br><span class="line">        <span class="string">'SecurityOpt'</span>: None,</span><br><span class="line">        <span class="string">'UTSMode'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'UsernsMode'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'ShmSize'</span>: 67108864,</span><br><span class="line">        <span class="string">'Runtime'</span>: <span class="string">'runc'</span>,</span><br><span class="line">        <span class="string">'ConsoleSize'</span>: [0,</span><br><span class="line">        0],</span><br><span class="line">        <span class="string">'Isolation'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'CpuShares'</span>: 0,</span><br><span class="line">        <span class="string">'Memory'</span>: 0,</span><br><span class="line">        <span class="string">'NanoCpus'</span>: 0,</span><br><span class="line">        <span class="string">'CgroupParent'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'BlkioWeight'</span>: 0,</span><br><span class="line">        <span class="string">'BlkioWeightDevice'</span>: [],</span><br><span class="line">        <span class="string">'BlkioDeviceReadBps'</span>: None,</span><br><span class="line">        <span class="string">'BlkioDeviceWriteBps'</span>: None,</span><br><span class="line">        <span class="string">'BlkioDeviceReadIOps'</span>: None,</span><br><span class="line">        <span class="string">'BlkioDeviceWriteIOps'</span>: None,</span><br><span class="line">        <span class="string">'CpuPeriod'</span>: 0,</span><br><span class="line">        <span class="string">'CpuQuota'</span>: 0,</span><br><span class="line">        <span class="string">'CpuRealtimePeriod'</span>: 0,</span><br><span class="line">        <span class="string">'CpuRealtimeRuntime'</span>: 0,</span><br><span class="line">        <span class="string">'CpusetCpus'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'CpusetMems'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'Devices'</span>: [],</span><br><span class="line">        <span class="string">'DeviceCgroupRules'</span>: None,</span><br><span class="line">        <span class="string">'DeviceRequests'</span>: None,</span><br><span class="line">        <span class="string">'KernelMemory'</span>: 0,</span><br><span class="line">        <span class="string">'KernelMemoryTCP'</span>: 0,</span><br><span class="line">        <span class="string">'MemoryReservation'</span>: 0,</span><br><span class="line">        <span class="string">'MemorySwap'</span>: 0,</span><br><span class="line">        <span class="string">'MemorySwappiness'</span>: None,</span><br><span class="line">        <span class="string">'OomKillDisable'</span>: False,</span><br><span class="line">        <span class="string">'PidsLimit'</span>: None,</span><br><span class="line">        <span class="string">'Ulimits'</span>: None,</span><br><span class="line">        <span class="string">'CpuCount'</span>: 0,</span><br><span class="line">        <span class="string">'CpuPercent'</span>: 0,</span><br><span class="line">        <span class="string">'IOMaximumIOps'</span>: 0,</span><br><span class="line">        <span class="string">'IOMaximumBandwidth'</span>: 0,</span><br><span class="line">        <span class="string">'MaskedPaths'</span>: [<span class="string">'/proc/asound'</span>,</span><br><span class="line">        <span class="string">'/proc/acpi'</span>,</span><br><span class="line">        <span class="string">'/proc/kcore'</span>,</span><br><span class="line">        <span class="string">'/proc/keys'</span>,</span><br><span class="line">        <span class="string">'/proc/latency_stats'</span>,</span><br><span class="line">        <span class="string">'/proc/timer_list'</span>,</span><br><span class="line">        <span class="string">'/proc/timer_stats'</span>,</span><br><span class="line">        <span class="string">'/proc/sched_debug'</span>,</span><br><span class="line">        <span class="string">'/proc/scsi'</span>,</span><br><span class="line">        <span class="string">'/sys/firmware'</span>],</span><br><span class="line">        <span class="string">'ReadonlyPaths'</span>: [<span class="string">'/proc/bus'</span>,</span><br><span class="line">        <span class="string">'/proc/fs'</span>,</span><br><span class="line">        <span class="string">'/proc/irq'</span>,</span><br><span class="line">        <span class="string">'/proc/sys'</span>,</span><br><span class="line">        <span class="string">'/proc/sysrq-trigger'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'GraphDriver'</span>: &#123;</span><br><span class="line">        <span class="string">'Data'</span>: &#123;</span><br><span class="line">            <span class="string">'LowerDir'</span>: <span class="string">'/var/lib/docker/overlay2/88b48830bb0194f5b8f508e2b477a6a6daaa79efa4875c7e595ed20ec49456b3-init/diff: /var/lib/docker/overlay2/6152ebc3b355019c9cb78069a1d4fef7ce334efe5228778b0325f8ec8b947cfe/diff: /var/lib/docker/overlay2/eb4051b611cab6a92f5d437d641b1aa67c586e1ba756502f5d756b48ed8a38da/diff: /var/lib/docker/overlay2/9d82a25654ecc29f794a0b640c030d491b15f342b163306cb1155ae74065471f/diff: /var/lib/docker/overlay2/509403a386d5a3e7a7fac3b528c9d1353bd204cfc9af0632190afd1565776bd8/diff: /var/lib/docker/overlay2/519ff85e86fcc2feb97debfba7652b01325e5ee797bee0ede9e7052c4f98477e/diff: /var/lib/docker/overlay2/29d4cbdb840f8f5aad65fda1260fddadcfcde3b89d3a0621cdd96331f94ff4f5/diff'</span>,</span><br><span class="line">            <span class="string">'MergedDir'</span>: <span class="string">'/var/lib/docker/overlay2/88b48830bb0194f5b8f508e2b477a6a6daaa79efa4875c7e595ed20ec49456b3/merged'</span>,</span><br><span class="line">            <span class="string">'UpperDir'</span>: <span class="string">'/var/lib/docker/overlay2/88b48830bb0194f5b8f508e2b477a6a6daaa79efa4875c7e595ed20ec49456b3/diff'</span>,</span><br><span class="line">            <span class="string">'WorkDir'</span>: <span class="string">'/var/lib/docker/overlay2/88b48830bb0194f5b8f508e2b477a6a6daaa79efa4875c7e595ed20ec49456b3/work'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'Name'</span>: <span class="string">'overlay2'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'Mounts'</span>: [&#123;</span><br><span class="line">        <span class="string">'Type'</span>: <span class="string">'bind'</span>,</span><br><span class="line">        <span class="string">'Source'</span>: <span class="string">'/var/run/docker.sock'</span>,</span><br><span class="line">        <span class="string">'Destination'</span>: <span class="string">'/var/run/docker.sock'</span>,</span><br><span class="line">        <span class="string">'Mode'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'RW'</span>: True,</span><br><span class="line">        <span class="string">'Propagation'</span>: <span class="string">'rprivate'</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">'Config'</span>: &#123;</span><br><span class="line">        <span class="string">'Hostname'</span>: <span class="string">'9a2daa815404'</span>,</span><br><span class="line">        <span class="string">'Domainname'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'User'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'AttachStdin'</span>: False,</span><br><span class="line">        <span class="string">'AttachStdout'</span>: False,</span><br><span class="line">        <span class="string">'AttachStderr'</span>: False,</span><br><span class="line">        <span class="string">'Tty'</span>: False,</span><br><span class="line">        <span class="string">'OpenStdin'</span>: False,</span><br><span class="line">        <span class="string">'StdinOnce'</span>: False,</span><br><span class="line">        <span class="string">'Env'</span>: [<span class="string">'PATH=/usr/local/bin: /usr/local/sbin: /usr/local/bin: /usr/sbin: /usr/bin: /sbin: /bin'</span>,</span><br><span class="line">        <span class="string">'LANG=C.UTF-8'</span>,</span><br><span class="line">        <span class="string">'GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D'</span>,</span><br><span class="line">        <span class="string">'PYTHON_VERSION=3.6.10'</span>,</span><br><span class="line">        <span class="string">'PYTHON_PIP_VERSION=20.1.1'</span>,</span><br><span class="line">        <span class="string">'PYTHON_GET_PIP_URL=https: //github.com/pypa/get-pip/raw/eff16c878c7fd6b688b9b4c4267695cf1a0bf01b/get-pip.py'</span>,</span><br><span class="line">        <span class="string">'PYTHON_GET_PIP_SHA256=b3153ec0cf7b7bbf9556932aa37e4981c35dc2a2c501d70d91d2795aa532be79'</span>],</span><br><span class="line">        <span class="string">'Cmd'</span>: [<span class="string">'/bin/sh'</span>,</span><br><span class="line">        <span class="string">'-c'</span>,</span><br><span class="line">        <span class="string">'tail-f/dev/null'</span>],</span><br><span class="line">        <span class="string">'Image'</span>: <span class="string">'myimage'</span>,</span><br><span class="line">        <span class="string">'Volumes'</span>: None,</span><br><span class="line">        <span class="string">'WorkingDir'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'Entrypoint'</span>: None,</span><br><span class="line">        <span class="string">'OnBuild'</span>: None,</span><br><span class="line">        <span class="string">'Labels'</span>: &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'NetworkSettings'</span>: &#123;</span><br><span class="line">        <span class="string">'Bridge'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'SandboxID'</span>: <span class="string">'d8e855fbadd1f3fc1633aa7478beb01fbfcca89bfddcd58cd5636b74f0791362'</span>,</span><br><span class="line">        <span class="string">'HairpinMode'</span>: False,</span><br><span class="line">        <span class="string">'LinkLocalIPv6Address'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'LinkLocalIPv6PrefixLen'</span>: 0,</span><br><span class="line">        <span class="string">'Ports'</span>: &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'SandboxKey'</span>: <span class="string">'/var/run/docker/netns/d8e855fbadd1'</span>,</span><br><span class="line">        <span class="string">'SecondaryIPAddresses'</span>: None,</span><br><span class="line">        <span class="string">'SecondaryIPv6Addresses'</span>: None,</span><br><span class="line">        <span class="string">'EndpointID'</span>: <span class="string">'303b3ffdbb01586ea6319d1cfeb7c68839c1b8986dfdc212d1888aea9af52797'</span>,</span><br><span class="line">        <span class="string">'Gateway'</span>: <span class="string">'172.17.0.1'</span>,</span><br><span class="line">        <span class="string">'GlobalIPv6Address'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'GlobalIPv6PrefixLen'</span>: 0,</span><br><span class="line">        <span class="string">'IPAddress'</span>: <span class="string">'172.17.0.2'</span>,</span><br><span class="line">        <span class="string">'IPPrefixLen'</span>: 16,</span><br><span class="line">        <span class="string">'IPv6Gateway'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'MacAddress'</span>: <span class="string">'02: 42: ac: 11: 00: 02'</span>,</span><br><span class="line">        <span class="string">'Networks'</span>: &#123;</span><br><span class="line">            <span class="string">'bridge'</span>: &#123;</span><br><span class="line">                <span class="string">'IPAMConfig'</span>: None,</span><br><span class="line">                <span class="string">'Links'</span>: None,</span><br><span class="line">                <span class="string">'Aliases'</span>: None,</span><br><span class="line">                <span class="string">'NetworkID'</span>: <span class="string">'7a6b48661c84f84e7abff76b99a0bdcdedca5e791aee328263ab4f446c4358db'</span>,</span><br><span class="line">                <span class="string">'EndpointID'</span>: <span class="string">'303b3ffdbb01586ea6319d1cfeb7c68839c1b8986dfdc212d1888aea9af52797'</span>,</span><br><span class="line">                <span class="string">'Gateway'</span>: <span class="string">'172.17.0.1'</span>,</span><br><span class="line">                <span class="string">'IPAddress'</span>: <span class="string">'172.17.0.2'</span>,</span><br><span class="line">                <span class="string">'IPPrefixLen'</span>: 16,</span><br><span class="line">                <span class="string">'IPv6Gateway'</span>: <span class="string">''</span>,</span><br><span class="line">                <span class="string">'GlobalIPv6Address'</span>: <span class="string">''</span>,</span><br><span class="line">                <span class="string">'GlobalIPv6PrefixLen'</span>: 0,</span><br><span class="line">                <span class="string">'MacAddress'</span>: <span class="string">'02: 42: ac: 11: 00: 02'</span>,</span><br><span class="line">                <span class="string">'DriverOpts'</span>: None</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>container.stats內容<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">'read'</span>: <span class="string">'2020-05-25T06: 01: 26.458566764Z'</span>,</span><br><span class="line">    <span class="string">'preread'</span>: <span class="string">'2020-05-25T06: 01: 25.443024014Z'</span>,</span><br><span class="line">    <span class="string">'pids_stats'</span>: &#123;</span><br><span class="line">        <span class="string">'current'</span>: 3</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'blkio_stats'</span>: &#123;</span><br><span class="line">        <span class="string">'io_service_bytes_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_serviced_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_queue_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_service_time_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_wait_time_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_merged_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_time_recursive'</span>: [],</span><br><span class="line">        <span class="string">'sectors_recursive'</span>: []</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'num_procs'</span>: 0,</span><br><span class="line">    <span class="string">'storage_stats'</span>: &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'cpu_stats'</span>: &#123;</span><br><span class="line">        <span class="string">'cpu_usage'</span>: &#123;</span><br><span class="line">            <span class="string">'total_usage'</span>: 748089610,</span><br><span class="line">            <span class="string">'percpu_usage'</span>: [174746977,</span><br><span class="line">            1024708,</span><br><span class="line">            366764419,</span><br><span class="line">            205553506],</span><br><span class="line">            <span class="string">'usage_in_kernelmode'</span>: 100000000,</span><br><span class="line">            <span class="string">'usage_in_usermode'</span>: 640000000</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'system_cpu_usage'</span>: 3451400000000,</span><br><span class="line">        <span class="string">'online_cpus'</span>: 4,</span><br><span class="line">        <span class="string">'throttling_data'</span>: &#123;</span><br><span class="line">            <span class="string">'periods'</span>: 0,</span><br><span class="line">            <span class="string">'throttled_periods'</span>: 0,</span><br><span class="line">            <span class="string">'throttled_time'</span>: 0</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'precpu_stats'</span>: &#123;</span><br><span class="line">        <span class="string">'cpu_usage'</span>: &#123;</span><br><span class="line">            <span class="string">'total_usage'</span>: 748024997,</span><br><span class="line">            <span class="string">'percpu_usage'</span>: [174746977,</span><br><span class="line">            1024708,</span><br><span class="line">            366764419,</span><br><span class="line">            205488893],</span><br><span class="line">            <span class="string">'usage_in_kernelmode'</span>: 100000000,</span><br><span class="line">            <span class="string">'usage_in_usermode'</span>: 640000000</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'system_cpu_usage'</span>: 3447470000000,</span><br><span class="line">        <span class="string">'online_cpus'</span>: 4,</span><br><span class="line">        <span class="string">'throttling_data'</span>: &#123;</span><br><span class="line">            <span class="string">'periods'</span>: 0,</span><br><span class="line">            <span class="string">'throttled_periods'</span>: 0,</span><br><span class="line">            <span class="string">'throttled_time'</span>: 0</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'memory_stats'</span>: &#123;</span><br><span class="line">        <span class="string">'usage'</span>: 17653760,</span><br><span class="line">        <span class="string">'max_usage'</span>: 17756160,</span><br><span class="line">        <span class="string">'stats'</span>: &#123;</span><br><span class="line">            <span class="string">'active_anon'</span>: 15409152,</span><br><span class="line">            <span class="string">'active_file'</span>: 0,</span><br><span class="line">            <span class="string">'cache'</span>: 0,</span><br><span class="line">            <span class="string">'dirty'</span>: 0,</span><br><span class="line">            <span class="string">'hierarchical_memory_limit'</span>: 9223372036854771712,</span><br><span class="line">            <span class="string">'hierarchical_memsw_limit'</span>: 0,</span><br><span class="line">            <span class="string">'inactive_anon'</span>: 0,</span><br><span class="line">            <span class="string">'inactive_file'</span>: 0,</span><br><span class="line">            <span class="string">'mapped_file'</span>: 0,</span><br><span class="line">            <span class="string">'pgfault'</span>: 6699,</span><br><span class="line">            <span class="string">'pgmajfault'</span>: 0,</span><br><span class="line">            <span class="string">'pgpgin'</span>: 6072,</span><br><span class="line">            <span class="string">'pgpgout'</span>: 2285,</span><br><span class="line">            <span class="string">'rss'</span>: 15372288,</span><br><span class="line">            <span class="string">'rss_huge'</span>: 0,</span><br><span class="line">            <span class="string">'total_active_anon'</span>: 15409152,</span><br><span class="line">            <span class="string">'total_active_file'</span>: 0,</span><br><span class="line">            <span class="string">'total_cache'</span>: 0,</span><br><span class="line">            <span class="string">'total_dirty'</span>: 0,</span><br><span class="line">            <span class="string">'total_inactive_anon'</span>: 0,</span><br><span class="line">            <span class="string">'total_inactive_file'</span>: 0,</span><br><span class="line">            <span class="string">'total_mapped_file'</span>: 0,</span><br><span class="line">            <span class="string">'total_pgfault'</span>: 6699,</span><br><span class="line">            <span class="string">'total_pgmajfault'</span>: 0,</span><br><span class="line">            <span class="string">'total_pgpgin'</span>: 6072,</span><br><span class="line">            <span class="string">'total_pgpgout'</span>: 2285,</span><br><span class="line">            <span class="string">'total_rss'</span>: 15372288,</span><br><span class="line">            <span class="string">'total_rss_huge'</span>: 0,</span><br><span class="line">            <span class="string">'total_unevictable'</span>: 0,</span><br><span class="line">            <span class="string">'total_writeback'</span>: 0,</span><br><span class="line">            <span class="string">'unevictable'</span>: 0,</span><br><span class="line">            <span class="string">'writeback'</span>: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'limit'</span>: 4126978048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'/mycontainer'</span>,</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">'9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454'</span>,</span><br><span class="line">    <span class="string">'networks'</span>: &#123;</span><br><span class="line">        <span class="string">'eth0'</span>: &#123;</span><br><span class="line">            <span class="string">'rx_bytes'</span>: 2710,</span><br><span class="line">            <span class="string">'rx_packets'</span>: 21,</span><br><span class="line">            <span class="string">'rx_errors'</span>: 0,</span><br><span class="line">            <span class="string">'rx_dropped'</span>: 0,</span><br><span class="line">            <span class="string">'tx_bytes'</span>: 0,</span><br><span class="line">            <span class="string">'tx_packets'</span>: 0,</span><br><span class="line">            <span class="string">'tx_errors'</span>: 0,</span><br><span class="line">            <span class="string">'tx_dropped'</span>: 0</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>crontab in Docker</title>
      <link href="/posts/f9ddbed/"/>
      <url>/posts/f9ddbed/</url>
      
        <content type="html"><![CDATA[<p>設定週期性要執行的指令<br>第一次執行會先讓user選擇editor</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br><span class="line">no crontab <span class="keyword">for</span> root - using an empty one</span><br><span class="line"></span><br><span class="line">Select an editor.  To change later, run <span class="string">'select-editor'</span>.</span><br><span class="line">  1. /bin/nano        &lt;---- easiest</span><br><span class="line">  2. /usr/bin/vim.basic</span><br><span class="line">  3. /usr/bin/vim.tiny</span><br><span class="line">  4. /bin/ed</span><br><span class="line"></span><br><span class="line">Choose 1-4 [1]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Edit this file to introduce tasks to be run by cron.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Each task to run has to be defined through a single line</span></span><br><span class="line"><span class="comment"># indicating with different fields when the task will be run</span></span><br><span class="line"><span class="comment"># and what command to run for the task</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># To define the time you can provide concrete values for</span></span><br><span class="line"><span class="comment"># minute (m), hour (h), day of month (dom), month (mon),</span></span><br><span class="line"><span class="comment"># and day of week (dow) or use '*' in these fields (for 'any').#</span></span><br><span class="line"><span class="comment"># Notice that tasks will be started based on the cron's system</span></span><br><span class="line"><span class="comment"># daemon's notion of time and timezones.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Output of the crontab jobs (including errors) is sent through</span></span><br><span class="line"><span class="comment"># email to the user the crontab file belongs to (unless redirected).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For example, you can run a backup of all your user accounts</span></span><br><span class="line"><span class="comment"># at 5 a.m every week with:</span></span><br><span class="line"><span class="comment"># 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For more information see the manual pages of crontab(5) and cron(8)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># m h  dom mon dow   command</span></span><br></pre></td></tr></table></figure><p>如果要執行的指令需要下sudo，可以編輯root權限的crontab<br><code>$ sudo crontab -e</code></p><p>在 Linux 裡面執行 crontab 時，log 會被記錄在 syslog 裡面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ grep CRON /var/<span class="built_in">log</span>/syslog</span><br><span class="line">May 22 08:00:01 ubuntu CRON[9527]: (user) CMD (python /home/user/backup.py)</span><br><span class="line">May 22 08:17:01 ubuntu CRON[9851]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br></pre></td></tr></table></figure><p>For example</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每天下午17:00都執行backup.sh這個script，並把log存到output.log</span></span><br><span class="line">00 17 * * * /home/user/backup.sh &gt;&gt; /home/user/output.log 2&gt;&amp;1</span><br><span class="line"><span class="comment"># 每分鐘執行</span></span><br><span class="line">*/1 * * * * do_something</span><br><span class="line"><span class="comment"># 每隔30秒執行</span></span><br><span class="line">*/1 * * * * do_something_A</span><br><span class="line">*/1 * * * * sleep 30; do_something_B</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ftplib in Python</title>
      <link href="/posts/741b618f/"/>
      <url>/posts/741b618f/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Connection</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ftplib <span class="keyword">import</span> FTP</span><br><span class="line"></span><br><span class="line">ftp = FTP()</span><br><span class="line">ftp.set_debuglevel(<span class="number">2</span>)</span><br><span class="line">ftp.connect(<span class="string">'192.168.56.3'</span>, <span class="number">21</span>)</span><br><span class="line">ftp.login(<span class="string">'account'</span>, <span class="string">'password'</span>)</span><br><span class="line">print(ftp.getwelcome())</span><br><span class="line">ftp.quit()</span><br></pre></td></tr></table></figure></li><li><p>General Operation</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set the current directory on the server.</span></span><br><span class="line">ftp.cwd(pathname)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a new directory on the server.</span></span><br><span class="line">ftp.mkd(pathname)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Return the pathname of the current directory on the server.</span></span><br><span class="line">ftp.pwd()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove the directory named dirname on the server.</span></span><br><span class="line">ftp.rmd(dirname)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Rename file fromname on the server to toname.</span></span><br><span class="line">ftp.rename(fromname, toname)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove the file named filename from the server.</span></span><br><span class="line">ftp.delete(filename)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Request the size of the file named filename on the server.</span></span><br><span class="line">ftp.size(filename)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Produce a directory listing as returned by the LIST command.</span></span><br><span class="line">ftp.dir()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Return a list of file names as returned by the NLST command.</span></span><br><span class="line">ftp.nlst()</span><br></pre></td></tr></table></figure></li><li><p>Upload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(local_filename,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ftp.storbinary(<span class="string">'STOR %s'</span> % server_filename, f, <span class="number">1024</span>)</span><br></pre></td></tr></table></figure></li><li><p>Download</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(local_filename, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ftp.retrbinary(<span class="string">'RETR %s'</span> % server_filename, f.write, <span class="number">1024</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Payload in pytest</title>
      <link href="/posts/b7198fcc/"/>
      <url>/posts/b7198fcc/</url>
      
        <content type="html"><![CDATA[<ul><li>在pytest中，若參數為file，直接放在data payload裡，不可以用files參數<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_recognize</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'avatar.png'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="string">'file'</span>: f,</span><br><span class="line">            <span class="string">'screen_token'</span>: <span class="string">'123'</span></span><br><span class="line">        &#125;</span><br><span class="line">        ret = test_app.post(<span class="string">'/recognize'</span>, data=payload)</span><br></pre></td></tr></table></figure></li><li>一般的post request<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recognize</span><span class="params">(self)</span>:</span></span><br><span class="line">    payload = &#123; </span><br><span class="line">        <span class="string">'screen_token'</span>: <span class="string">'123'</span></span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">'http://ip:port/recognize'</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'avatar.png'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        ret = requests.post(url, data=payload, files=&#123;<span class="string">'file'</span>: f&#125;)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Example for video.js</title>
      <link href="/posts/b57b0f6a/"/>
      <url>/posts/b57b0f6a/</url>
      
        <content type="html"><![CDATA[<p>使用video.js在瀏覽器上播放影片<br><a href="https://videojs.com/" target="_blank" rel="noopener">https://videojs.com/</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>VideoJS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://vjs.zencdn.net/7.3.0/video-js.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://vjs.zencdn.net/7.3.0/video.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.video-js</span> <span class="selector-class">.vjs-time-control</span>&#123;<span class="attribute">display</span>:block;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.video-js</span> <span class="selector-class">.vjs-remaining-time</span>&#123;<span class="attribute">display</span>:none;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"my-video"</span> <span class="attr">class</span>=<span class="string">"video-js vjs-big-play-centered"</span>&gt;</span><span class="tag">&lt;<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> player = videojs(<span class="string">'my-video'</span>,&#123;</span></span><br><span class="line"><span class="actionscript">            sources:[&#123; src: <span class="string">"http://192.168.56.3:8081/mv.mp4"</span>&#125;],</span></span><br><span class="line">            playbackRates: [0.5, 1, 2, 4],</span><br><span class="line"><span class="actionscript">            loop:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">            muted:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">            width:<span class="string">"1280"</span>,</span></span><br><span class="line"><span class="actionscript">            height:<span class="string">"720"</span>,</span></span><br><span class="line"><span class="actionscript">            controls:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">            autoplay: <span class="literal">true</span></span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        player.on(<span class="string">"playing"</span>,()=&gt;&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'playing'</span>);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Setup a File Server Quickly</title>
      <link href="/posts/dbaaf77f/"/>
      <url>/posts/dbaaf77f/</url>
      
        <content type="html"><![CDATA[<p>透過nodejs，在ubuntu中快速建立一個File server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install nodejs</span><br><span class="line">$ sudo apt install npm</span><br><span class="line">$ sudo npm install http-server -g</span><br><span class="line">$ http-server</span><br><span class="line">Starting up http-server, serving ./</span><br><span class="line">Available on:</span><br><span class="line">  http://127.0.0.1:8080</span><br><span class="line">  http://10.0.2.15:8080</span><br><span class="line">  http://192.168.96.4:8080</span><br><span class="line">Hit CTRL-C to stop the server</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTSP Player on Web Page</title>
      <link href="/posts/b9c5d30/"/>
      <url>/posts/b9c5d30/</url>
      
        <content type="html"><![CDATA[<ul><li>git source: <a href="https://github.com/qcycp/SampleCode/tree/master/HTML_RTSP_Player" target="_blank" rel="noopener">https://github.com/qcycp/SampleCode/tree/master/HTML_RTSP_Player</a></li><li>reference: <a href="https://my.oschina.net/chengpengvb/blog/1832469?p=4" target="_blank" rel="noopener">https://my.oschina.net/chengpengvb/blog/1832469?p=4</a></li></ul><p>包含三個部份</p><ol><li><p>NodeJS: contains a http server to receive content from ffmpeg and send out these data via websocket<br><code>$ node websocket.js secret 8081 8082</code></p></li><li><p>FFmpeg: decode rtsp streaming and encode to mpeg1, then send to a http streaming<br><code>$ ffmpeg -rtsp_transport tcp -i rtsp://10.60.6.28:8554/CH001.sdp -r 20 -q 0 -f mpegts -codec:v mpeg1video -codec:a mp2 -s 1280x720 http://127.0.0.1:8081/secret/rtsp</code></p></li><li><p>JSMpeg: receive video content via websocket and do MPEG1 video &amp; MP2 audio decode in JavaScript</p></li></ol><ul><li><p>FFmpeg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-rtsp_transport tcp: receive rtsp streaming input via tcp</span><br><span class="line">-i rtsp://10.60.6.28:8554/CH001.sdp: rtsp streaming input</span><br><span class="line">-r 20: set output frame rate, MPEG-1/2 does not support 15/1 fps</span><br><span class="line">-q 0: use fixed quality scale</span><br><span class="line">-f mpegts: set force output format</span><br><span class="line">-codec:v mpeg1video: set output video codec</span><br><span class="line">-codec:a mp2:  set output audio codec</span><br><span class="line">-s 1280x720: set output frame size</span><br></pre></td></tr></table></figure></li><li><p>JSMpeg</p></li></ul><ol><li><a href="https://github.com/phoboslab/jsmpeg" target="_blank" rel="noopener">https://github.com/phoboslab/jsmpeg</a></li><li>MPEG1 Video &amp; MP2 Audio Decoder in JavaScript<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"video"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"jsmpeg.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'video'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> url = <span class="string">'ws://127.0.0.1:8082/rtsp'</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> player = <span class="keyword">new</span> JSMpeg.Player(url, &#123;canvas: canvas&#125;);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JSMpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FFmpeg 常用指令</title>
      <link href="/posts/2ffce39e/"/>
      <url>/posts/2ffce39e/</url>
      
        <content type="html"><![CDATA[<ul><li><p>show video information<br><code>$ ffprobe -show_format -i input.mp4</code></p></li><li><p>play local video<br><code>$ ffplay input.mp4</code></p></li><li><p>play rtsp streaming<br><code>$ ffplay rtsp://10.60.6.28:8554/CH001.sdp</code><br><code>$ ffplay -rtsp_transport tcp rtsp://10.60.6.28:8554/CH001.sdp</code></p></li><li><p>speed up the video by 2x<br><code>$ ffmpeg -i input.mp4 -filter:v &quot;setpts=PTS/2&quot; output.mp4</code><br>Note that: if original fps is 30 and play by 2x speed up, we can set fps to 60 to prevent frame loss<br><code>$ ffmpeg -i input.mp4 -r 60 -filter:v &quot;setpts=PTS/2&quot; output.mp4</code></p></li><li><p>slow down the video by 1/2x<br><code>$ ffmpeg -i input.mp4 -filter:v &quot;setpts=PTS*2&quot; output.mp4</code></p></li><li><p>modify the frame rate to 15<br><code>$ ffmpeg -i input.mp4 -r 15 output.mp4</code></p></li><li><p>modify the frame size to 1920x1080<br><code>$ ffmpeg -i input.mp4 -s 1920x1080 output.mp4</code></p></li><li><p>record rtsp streaming to file without video and audio decode/encode<br><code>$ ffmpeg -rtsp_transport tcp -i rtsp://10.60.6.28:8554/CH001.sdp -acodec copy -vcodec copy output.mp4</code><br><code>$ ffmpeg -rtsp_transport tcp -i rtsp://10.60.6.28:8554/CH001.sdp -codec copy output.mp4</code></p></li><li><p>cut the video from 00:00:10 to 00:00:35<br><code>$ ffmpeg -i input.mp4 -ss 00:00:10 -t 00:00:25 output.mp4</code><br>You can do the following operation(change all frames to key frame) at first to do precise cutting<br><code>$ ffmpeg -i output.mp4 -strict -2  -qscale 0 -intra keyoutput.mp4</code></p></li><li><p>concate two video file<br><code>$ ffmpeg -f concat -safe 0 -i list.txt -c copy concat.mp4</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat list.txt</span><br><span class="line">file part1.mp4</span><br><span class="line">file part2.mp4</span><br></pre></td></tr></table></figure></li><li><p>capture screenshot at 00:00:10<br><code>$ ffmpeg -i input.mp4 -ss 00:00:10 -vframes 1 screenshot.jpg</code></p></li><li><p>capture 20 screenshots from 00:00:42 by 10 images per second<br><code>$ ffmpeg -i abc.mp4 -ss 00:00:42 -r 10 -vframes 20 %d.jpg</code></p></li><li><p>translate between video and images<br><code>$ ffmpeg -i output.mp4 image%d.jpg</code><br><code>$ ffmpeg -f image2 -i image%d.jpg output.mp4</code></p></li><li><p>flip and rotate video<br><code>$ ffmpeg -i input.mp4 -vf hflip output.mp4</code><br><code>$ ffmpeg -i input.mp4 -vf vflip output.mp4</code><br><code>$ ffmpeg -i input.mp4 -vf transpose=1 output.mp4</code></p></li><li><p>extract audio<br><code>$ ffmpeg -i input.mp4 -acodec copy -vn out.aac</code></p></li><li><p>extract video<br><code>$ ffmpeg -i input.mp4 -vcodec copy -an out.h264</code></p></li><li><p>merge audo and video<br><code>$ ffmpeg -i out.h264 -i out.aac -vcodec copy -acodec copy out.mp4</code></p></li><li><p>crop video<br>crop format: crop=out_w:out_h:x:y<br>if x, y are missing, crop the video base on center<br>if x, y are set to be 0, 0, crop the video base on left top corner<br><code>$ ffmpeg -i input.mp4 -vf crop=in_w-400:in_h-200 -c:v libx264 -c:a copy -video_size 1280x720 output.mp4</code></p></li><li><p>以下寫法相同</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-codec:v</span><br><span class="line">-c:v</span><br><span class="line">-vcodec</span><br><span class="line"></span><br><span class="line">-frames:v</span><br><span class="line">-vframes</span><br></pre></td></tr></table></figure></li><li><p>note</p></li></ul><p>-crf is parameter for x264, 0 代表無損壓縮<br>-re: Read input at native frame rate. Mainly used to simulate a grab device. i.e. if you wanted to stream a video file, then you would want to use this, otherwise it might stream it too fast.</p><ul><li><p>轉流<br>ffmpeg -rtsp_transport tcp -i rtsp://10.60.6.28:8554/CH001.sdp -q 0 -f mpegts -codec:v mpeg1video -s 1280x720 <a href="http://192.168.56.3:8081/secret/live" target="_blank" rel="noopener">http://192.168.56.3:8081/secret/live</a></p></li><li><p>推流<br>ffmpeg -re -i input.mp4 -q 0 -f mpegts -codec:v mpeg1video -s 1280x720 <a href="http://192.168.56.3:8081/secret/live" target="_blank" rel="noopener">http://192.168.56.3:8081/secret/live</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FFmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Execute MySQL Commands in shell script</title>
      <link href="/posts/7bd7c7e8/"/>
      <url>/posts/7bd7c7e8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 10000)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    mysql --user=root --password=1234 db_name -e <span class="string">"INSERT INTO table_name (id, date) VALUES (<span class="variable">$i</span>, <span class="variable">$(date +%s)</span>);"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MySQL </tag>
            
            <tag> shell script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uuid Generator in Linux</title>
      <link href="/posts/fa21d003/"/>
      <url>/posts/fa21d003/</url>
      
        <content type="html"><![CDATA[<p>透過系統中的uuid檔案，生成UUID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat /proc/sys/kernel/random/uuid</span><br><span class="line">371a8e69-d35c-4eb1-bc3c-36accca6a6a0</span><br><span class="line">$ cat /proc/sys/kernel/random/uuid</span><br><span class="line">0c1f3448-a089-4f4a-aaca-a7dc817f6cea</span><br><span class="line">$ cat /proc/sys/kernel/random/uuid</span><br><span class="line">8fff67aa-093d-441d-ae57-277ae5fb1bde</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Crontab in Docker</title>
      <link href="/posts/ca10b1f5/"/>
      <url>/posts/ca10b1f5/</url>
      
        <content type="html"><![CDATA[<h4 id="手動執行cron-task，並查看目前系統中執行的cron-task"><a href="#手動執行cron-task，並查看目前系統中執行的cron-task" class="headerlink" title="手動執行cron task，並查看目前系統中執行的cron task"></a>手動執行cron task，並查看目前系統中執行的cron task</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ docker cp cron-task container:/etc/cron.d/</span><br><span class="line">root@847d0eb77dfe:/<span class="comment"># cd /etc/cron.d/</span></span><br><span class="line">root@847d0eb77dfe:/etc/cron.d<span class="comment"># crontab cron-task</span></span><br><span class="line">root@847d0eb77dfe:/etc/cron.d<span class="comment"># cd /var/spool/cron/crontabs/</span></span><br><span class="line">root@847d0eb77dfe:/var/spool/cron/crontabs<span class="comment"># cat root</span></span><br><span class="line"><span class="comment"># DO NOT EDIT THIS FILE - edit the master and reinstall.</span></span><br><span class="line"><span class="comment"># (parse-log-cron installed on Wed May  1 14:55:42 2019)</span></span><br><span class="line"><span class="comment"># (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)</span></span><br><span class="line">00 * * * * run-one /usr/bin/python3.6 /app.py</span><br></pre></td></tr></table></figure><h4 id="在Dockerfile中設定cron-task"><a href="#在Dockerfile中設定cron-task" class="headerlink" title="在Dockerfile中設定cron task"></a>在Dockerfile中設定cron task</h4><ol><li><p>create cron-task</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00 * * * * run-one /usr/bin/python3.6 /app.py</span><br></pre></td></tr></table></figure></li><li><p>in Dockerfile</p></li></ol><ul><li>apt-get install cron run-one</li><li>add cron tasks script<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">RUN apt-get update &amp;&amp; \</span><br><span class="line">    apt-get install --no-install-recommends -y cron run-one &amp;&amp; \</span><br><span class="line">ADD cron_task /etc/cron.d/cron-task</span><br><span class="line">RUN chmod 0644 /etc/cron.d/cron-task &amp;&amp; \</span><br><span class="line">    crontab /etc/cron.d/cron-task</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li>in supervisord.conf<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[program:cron]</span><br><span class="line"><span class="built_in">command</span>=/usr/sbin/cron -f</span><br><span class="line"></span><br><span class="line">stdout_logfile_maxbytes = 0</span><br><span class="line">stdout_logfile = /dev/stdout</span><br><span class="line">stderr_logfile_maxbytes = 0</span><br><span class="line">stderr_logfile = /dev/stderr</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> cron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell script Notes</title>
      <link href="/posts/dd240c9a/"/>
      <url>/posts/dd240c9a/</url>
      
        <content type="html"><![CDATA[<ul><li>get the folder where the shell script is<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DIR=`dirname $0`</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://www.tutorialspoint.com/unix/shell_scripting.htm" target="_blank" rel="noopener">https://www.tutorialspoint.com/unix/shell_scripting.htm</a><br>!   This is logical negation. This inverts a true condition into false and vice versa. [ ! false ] is true.<br>-o  This is logical OR. If one of the operands is true, then the condition becomes true. [ $a -lt 20 -o $b -gt 100 ] is true.<br>-a  This is logical AND. If both the operands are true, then the condition becomes true otherwise false. [ $a -lt 20 -a $b -gt 100 ] is false.<br>-z  Checks if the given string operand size is zero; if it is zero length, then it returns true. [ -z $a ] is not true.<br>-n  Checks if the given string operand size is non-zero; if it is nonzero length, then it returns true. [ -n $a ] is not false.<br>=   Checks if the value of two operands are equal or not; if yes, then the condition becomes true. [ $a = $b ] is not true.<br>!=  Checks if the value of two operands are equal or not; if values are not equal then the condition becomes true. [ $a != $b ] is true.<br>-f file Checks if file is an ordinary file as opposed to a directory or special file; if yes, then the condition becomes true. [ -f $file ] is true.<br>-d file Checks if file is a directory; if yes, then the condition becomes true. [ -d $file ] is not true.</p><ul><li><p>check symbolic link</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">lrwxrwxrwx. 1 root root 22 Dec 31 16:26 bbu_cli -&gt; /home/user/bbu_cli</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -L bbu_cli ] ; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"This is a symbolic link"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>除了stdout，把所有output也導一份到test.log去<br>set -x: 把執行的command也印出來</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">NOW=$(date +<span class="string">"%Y-%m-%d-%H:%M:%S"</span>)</span><br><span class="line"><span class="built_in">exec</span> &amp;&gt; &gt;(tee <span class="built_in">test</span>-<span class="variable">$NOW</span>.<span class="built_in">log</span>)</span><br><span class="line"><span class="built_in">set</span> -x</span><br></pre></td></tr></table></figure></li><li><p>字串處理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">result=$(echo $msg | grep xxx)</span><br><span class="line">if [ -z &quot;$result&quot; ]; then</span><br><span class="line">    echo &quot;msg中找不到xxx內容&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>如果script中有多個block commands利用&amp;進行背景執行，透過wait可以不退出script，直到直到執行Ctrl+C，並且，透過trap signal可以將所有背景執行的command也終止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">trap</span> <span class="string">"exit"</span> INT TERM ERR</span><br><span class="line"><span class="built_in">trap</span> <span class="string">"kill 0"</span> EXIT</span><br><span class="line"></span><br><span class="line">tail -F test.log &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">wait</span></span><br></pre></td></tr></table></figure></li><li><p>echo -n 不換行輸出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$echo</span> -n <span class="string">"123"</span></span><br><span class="line"><span class="variable">$echo</span> <span class="string">"456"</span></span><br><span class="line"></span><br><span class="line">output: </span><br><span class="line">123456</span><br></pre></td></tr></table></figure></li><li><p>echo -e 處理特殊字符<br>若字符串中出現字符，則特别加以處理，不會將它當成一般文字輸出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">\a 發出警告聲；</span><br><span class="line">\b 删除前一个字符；</span><br><span class="line">\c 最後不加上换行符號；</span><br><span class="line">\f 换行但光标仍舊停留在原来的位置；</span><br><span class="line">\n 换行且光标移至行首；</span><br><span class="line">\r 光标移至行首，但不换行；</span><br><span class="line">\t 插入tab；</span><br><span class="line">\v 与\f相同；</span><br><span class="line">\\ 插入\字符；</span><br><span class="line">\nnn 插入nnn（八进制）所代表的ASCII字符；</span><br></pre></td></tr></table></figure></li><li><p>大小寫轉換</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NAME=&quot;NaMe&quot;</span><br><span class="line">echo $&#123;NAME^&#125; =&gt; Name</span><br><span class="line">echo $&#123;NAME^^&#125; =&gt; NAME</span><br><span class="line">echo $&#123;NAME,&#125; =&gt; naMe</span><br><span class="line">echo $&#123;NAME,,&#125; =&gt; name</span><br></pre></td></tr></table></figure></li><li><p>stdin/stdout/stderr<br>0: stdin<br>1: stdout<br>2: stderr</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; /dev/null 2&gt;&amp;1 =&gt; stdout 跟 stderr 都丟掉</span><br><span class="line">2&gt;&amp;1 =&gt; 把 stderr 導到 stdout</span><br><span class="line">&gt; 等同於 1&gt;</span><br><span class="line">&amp;&gt; file =&gt; 把 stdout 跟 stderr 都導向 file</span><br></pre></td></tr></table></figure></li></ul><h1 id="Close-STDOUT-file-descriptor"><a href="#Close-STDOUT-file-descriptor" class="headerlink" title="Close STDOUT file descriptor"></a>Close STDOUT file descriptor</h1><p>exec 1&lt;&amp;-</p><h1 id="Close-STDERR-FD"><a href="#Close-STDERR-FD" class="headerlink" title="Close STDERR FD"></a>Close STDERR FD</h1><p>exec 2&lt;&amp;-</p><h1 id="Open-STDOUT-as-LOG-FILE-file-for-read-and-write"><a href="#Open-STDOUT-as-LOG-FILE-file-for-read-and-write" class="headerlink" title="Open STDOUT as $LOG_FILE file for read and write."></a>Open STDOUT as $LOG_FILE file for read and write.</h1><p>exec 1&lt;&gt;$LOG_FILE</p><h1 id="Redirect-STDERR-to-STDOUT"><a href="#Redirect-STDERR-to-STDOUT" class="headerlink" title="Redirect STDERR to STDOUT"></a>Redirect STDERR to STDOUT</h1><p>exec 2&gt;&amp;1</p><h1 id="for-lines-in-command-result"><a href="#for-lines-in-command-result" class="headerlink" title="for lines in command result"></a>for lines in command result</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update-alternatives --display java | while read line ; do</span><br><span class="line">    echo $line</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="delete-specific-cron-job"><a href="#delete-specific-cron-job" class="headerlink" title="delete specific cron job"></a>delete specific cron job</h1><p>保留 “job command” 以外的 cron jobs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l 2&gt;/dev/null | grep -v &apos;job command&apos; | crontab -</span><br></pre></td></tr></table></figure><h1 id="dynamic-variable"><a href="#dynamic-variable" class="headerlink" title="dynamic variable"></a>dynamic variable</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">id=0</span><br><span class="line">A_0=1</span><br><span class="line">A_1=2</span><br><span class="line"></span><br><span class="line">target=A_$&#123;id&#125;</span><br><span class="line">echo $&#123;!target&#125; #1</span><br></pre></td></tr></table></figure><h1 id="filename-and-extension"><a href="#filename-and-extension" class="headerlink" title="filename and extension"></a>filename and extension</h1><p>filename=$(basename – “$fullfile”)<br>extension=”${filename##<em>.}”<br>filename=”${filename%.</em>}”</p><p><a href="https://blog.csdn.net/toopoo/article/details/105409383" target="_blank" rel="noopener">https://blog.csdn.net/toopoo/article/details/105409383</a><br>將導向檔案的log，加上時間戳記</p><ul><li><p>Process Uptime<br>ps -p <process_id> -o etime</process_id></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; ps -p 1 -o etime</span><br><span class="line">ELAPSED</span><br><span class="line">21:51</span><br><span class="line">&gt;&gt; ps -p 1 -o etime=</span><br><span class="line">03:24:30</span><br><span class="line">&gt;&gt; ps -p 1 -o etimes=</span><br><span class="line">12270</span><br></pre></td></tr></table></figure></li><li><p>string<br>${string:index:length}<br>test=123<br>${test:0:1} //1<br>${test:1:1} //2<br>${test:2:1} //3</p></li><li><p>isdigit<br>if [[ $value =~ ^[0-9]+$ ]];then<br>echo $value is a digit<br>fi<br>if [[ ! $value =~ ^[0-9]+$ ]];then<br>echo $value is not a digit<br>fi<br>if [[ $value =~ ^-?[0-9]+$ ]];then<br>echo $value is a digit<br>fi<br>The ^ indicates the beginning of the input pattern<br>The - is a literal “-“<br>The ? means “0 or 1 of the preceding (-)”<br>The + means “1 or more of the preceding ([0-9])”<br>The $ indicates the end of the input pattern</p></li><li><p>return value of function</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">foo()</span><br><span class="line">&#123;</span><br><span class="line">    a=<span class="variable">$1</span></span><br><span class="line">    b=<span class="variable">$2</span></span><br><span class="line">    <span class="built_in">echo</span> `expr <span class="variable">$a</span> \* 2 + <span class="variable">$b</span>`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret=$(foo 1 2)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ret</span> <span class="comment"># 4</span></span><br></pre></td></tr></table></figure></li><li><p>array</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">array 宣告</span><br><span class="line">declare -a array</span><br><span class="line"></span><br><span class="line">建立 array with items</span><br><span class="line">array=( item1 item2 item3 )</span><br><span class="line"></span><br><span class="line">for index in $&#123;!array[@]&#125;; do</span><br><span class="line">    echo $((index+1))/$&#123;#array[@]&#125;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">// 1/3</span><br><span class="line">// 2/3</span><br><span class="line">// 3/3</span><br><span class="line"></span><br><span class="line">array+=(item4)</span><br><span class="line"></span><br><span class="line">for i in $&#123;array[@]&#125;; do</span><br><span class="line">    echo $i</span><br><span class="line">done</span><br><span class="line">// item1</span><br><span class="line">// item2</span><br><span class="line">// item3</span><br><span class="line">// item4</span><br></pre></td></tr></table></figure></li><li><p>check item in an array</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">array=(1 2 3)</span><br><span class="line">value=3</span><br><span class="line">if [[ &quot;$&#123;array[@]&#125;&quot; =~ &quot;$value&quot; ]]; then</span><br><span class="line">  echo &quot;found $value in the array&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>check item is a list</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">list=&quot;a ab abc&quot;</span><br><span class="line">value=bc</span><br><span class="line">if [[ $list =~ (^|[[:space:]])&quot;$value&quot;($|[[:space:]]) ]]; then</span><br><span class="line">  echo &quot;found $value in the list&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>array difference</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">array_diff()</span><br><span class="line">&#123;</span><br><span class="line">    eval local ARR1=\(\&quot;\$&#123;$2[@]&#125;\&quot;\)</span><br><span class="line">    eval local ARR2=\(\&quot;\$&#123;$3[@]&#125;\&quot;\)</span><br><span class="line">    local IFS=$&apos;\n&apos;</span><br><span class="line">    mapfile -t $1 &lt; &lt;(comm -23 &lt;(echo &quot;$&#123;ARR1[*]&#125;&quot; | sort) &lt;(echo &quot;$&#123;ARR2[*]&#125;&quot; | sort))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">array1=(1 2)</span><br><span class="line">array2=(2 3 4)</span><br><span class="line"></span><br><span class="line">array_diff RESULT array1 array2</span><br><span class="line">echo &quot;$&#123;RESULT[@]&#125;&quot; // 1</span><br><span class="line"></span><br><span class="line">array_diff RESULT array2 array1</span><br><span class="line">echo &quot;$&#123;RESULT[@]&#125;&quot; // 3 4</span><br></pre></td></tr></table></figure></li><li><p>color<br>Text Style<br>Code | Description</p></li></ul><p>—–|——-<br>0 | Reset/Normal<br>1 | Bold text<br>2 | Faint text<br>3 | Italics<br>4 | Underlined text</p><p>Color | Foreground | Background<br>Black | 30 | 40<br>Red | 31 | 41<br>Green | 32 | 42<br>Yellow | 33 | 43<br>Blue | 34 | 44<br>Magenta | 35 | 45<br>Cyan | 36 | 46<br>Light Gray | 37 | 47<br>Gray | 90 | 100<br>Light Red | 91 | 101<br>Light Green 92 | 102<br>Light Yellow | 93 | 103<br>Light Blue | 94 | 104<br>Light Magenta | 95 | 105<br>Light Cyan | 96 | 106<br>White | 97 | 107</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">RED=&apos;\033[0;31m&apos;</span><br><span class="line">BOLD=&apos;\033[1m&apos;</span><br><span class="line">BOLD_RED=&apos;\033[1;31m&apos;</span><br><span class="line">NC=&apos;\033[0m&apos;</span><br><span class="line"></span><br><span class="line">echo -e $&#123;RED&#125;RED$&#123;NC&#125;</span><br><span class="line">echo -e $&#123;BOLD&#125;BOLD$&#123;NC&#125;</span><br><span class="line">echo -e $&#123;BOLD_RED&#125;BOLD_RED$&#123;NC&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Shell Script </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell Script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jq</title>
      <link href="/posts/f9c9d078/"/>
      <url>/posts/f9c9d078/</url>
      
        <content type="html"><![CDATA[<p>使用curl執行webapi，可以把結果拋給jq，格式化json的內容</p><p><code>sudo apt install jq</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">'&#123; "name":"John", "age":31, "city":"New York" &#125;'</span> | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"John"</span>,</span><br><span class="line">  <span class="string">"age"</span>: 31,</span><br><span class="line">  <span class="string">"city"</span>: <span class="string">"New York"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sample 1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X POST -d <span class="string">'username=admin&amp;password=123456'</span> http://localhost/api/login | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"code"</span>: 0,</span><br><span class="line">  <span class="string">"data"</span>: &#123;</span><br><span class="line">    <span class="string">"token"</span>: <span class="string">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X POST -d <span class="string">'username=admin&amp;password=123456'</span> http://localhost/api/login | jq .data</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"token"</span>: <span class="string">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X POST -d <span class="string">'username=admin&amp;password=123456'</span> http://localhost/api/login | jq .data.token</span><br><span class="line"><span class="string">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9"</span></span><br><span class="line"></span><br><span class="line">$ curl -X POST -d <span class="string">'username=admin&amp;password=123456'</span> http://localhost/api/login | jq -r .data.token</span><br><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9</span><br></pre></td></tr></table></figure><p>sample 2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET http://localhost/api/data</span><br><span class="line">&#123;<span class="string">"code"</span>:0,<span class="string">"data"</span>:[&#123;<span class="string">"Location"</span>:<span class="string">"4F"</span>,<span class="string">"URL"</span>:<span class="string">"rtsp://localhost:8888/CH001.sdp"</span>,<span class="string">"status"</span>:null&#125;]&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X GET http://localhost/api/data | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"code"</span>: 0,</span><br><span class="line">  <span class="string">"data"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"Location"</span>: <span class="string">"4F"</span>,</span><br><span class="line">      <span class="string">"URL"</span>: <span class="string">"rtsp://localhost:8888/CH001.sdp"</span>,</span><br><span class="line">      <span class="string">"status"</span>: null</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X GET http://localhost/api/data | jq .data</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"Location"</span>: <span class="string">"4F"</span>,</span><br><span class="line">    <span class="string">"URL"</span>: <span class="string">"rtsp://localhost:8888/CH001.sdp"</span>,</span><br><span class="line">    <span class="string">"status"</span>: null</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">$ curl -X GET http://localhost/api/data | jq .data[0]</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"Location"</span>: <span class="string">"4F"</span>,</span><br><span class="line">  <span class="string">"URL"</span>: <span class="string">"rtsp://localhost:8888/CH001.sdp"</span>,</span><br><span class="line">  <span class="string">"status"</span>: null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X GET http://localhost/api/data | jq .data[0].URL</span><br><span class="line"><span class="string">"rtsp://localhost:8888/CH001.sdp"</span></span><br><span class="line"></span><br><span class="line">$ curl -X GET http://localhost/api/data | jq -r .data[0].URL</span><br><span class="line">rtsp://localhost:8888/CH001.sdp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chkdsk</title>
      <link href="/posts/eb6b61c0/"/>
      <url>/posts/eb6b61c0/</url>
      
        <content type="html"><![CDATA[<p>當隨身碟出現以下錯誤時，可以透過chkdsk來修復<br><img src="/posts/eb6b61c0/error.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/f</span><br><span class="line">修復硬碟上的錯誤。必須鎖定硬碟。如果 chkdsk 無法鎖定磁碟區</span><br><span class="line">則會顯示一條訊息，詢問您是否希望在下次重新啟動電腦時檢查該驅動器</span><br><span class="line">/v</span><br><span class="line">當檢查硬碟時，顯示所有目錄中每個文件的名稱</span><br><span class="line">/r</span><br><span class="line">找到壞軌區並恢復可讀取的信息。必須鎖定硬碟</span><br><span class="line">/x</span><br><span class="line">僅在 NTFS 上使用。如果必要，首先強制卸載磁碟區</span><br><span class="line">該磁碟槽的所有打開指令&amp;檔案都無效。/x 還包含了/f 的功能</span><br><span class="line">/i</span><br><span class="line">僅隨 NTFS 使用。對索引項執行充分檢查，降低運行 chkdsk 的所用時間量</span><br><span class="line">/c</span><br><span class="line">僅隨 NTFS 使用。跳過文件夾結構中的週期檢查，減少運行 chkdsk 所需的時間量</span><br><span class="line">/l[:size]</span><br><span class="line">僅隨 NTFS 使用。將日誌文件的大小更改為由用戶輸入的大小</span><br><span class="line">如果省略該參數，則 /l 會顯示當前日誌文件的大小</span><br><span class="line">/?</span><br><span class="line">在命令提示符顯示幫助。</span><br></pre></td></tr></table></figure><p><img src="/posts/eb6b61c0/chkdsk.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chkdsk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sort with structs</title>
      <link href="/posts/4294109/"/>
      <url>/posts/4294109/</url>
      
        <content type="html"><![CDATA[<p>針對struct內的某個欄位，進行sort</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Person</span> &#123;</span></span><br><span class="line">    Person() : name(<span class="string">""</span>),  age(INT_MAX) &#123;&#125;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> Person&amp; rhs) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> age &lt; rhs.age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; Person;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person *data = <span class="keyword">new</span> Person[<span class="number">4</span>];</span><br><span class="line">    data[<span class="number">0</span>].name = <span class="string">"Nick"</span>; data[<span class="number">0</span>].age = <span class="number">37</span>;</span><br><span class="line">    data[<span class="number">1</span>].name = <span class="string">"John"</span>; data[<span class="number">1</span>].age = <span class="number">45</span>;</span><br><span class="line">    data[<span class="number">2</span>].name = <span class="string">"Mary"</span>; data[<span class="number">2</span>].age = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">0</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">0</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">1</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">1</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">2</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">2</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    sort(data, data+<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">0</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">0</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">1</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">1</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">2</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">2</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    sort(data, data+<span class="number">3</span>, [](Person a, Person b)&#123; <span class="keyword">return</span> a.age &gt; b.age; &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">0</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">0</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">1</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">1</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">2</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">2</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Nick: 37</span><br><span class="line">John: 45</span><br><span class="line">Mary: 20</span><br><span class="line"></span><br><span class="line">Mary: 20</span><br><span class="line">Nick: 37</span><br><span class="line">John: 45</span><br><span class="line"></span><br><span class="line">John: 45</span><br><span class="line">Nick: 37</span><br><span class="line">Mary: 20</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Open Web Page using Selenium</title>
      <link href="/posts/3db6e2b6/"/>
      <url>/posts/3db6e2b6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    chrome_options = webdriver.ChromeOptions()</span><br><span class="line">    chrome_options.add_argument(<span class="string">'--headless'</span>)</span><br><span class="line">    chrome_options.add_argument(<span class="string">'--no-sandbox'</span>)</span><br><span class="line">    chrome_options.add_argument(<span class="string">'--disable-dev-shm-usage'</span>)</span><br><span class="line">    driver = webdriver.Chrome(executable_path=<span class="string">'/usr/bin/chromedriver'</span>, options=chrome_options)</span><br><span class="line">    driver.implicitly_wait(<span class="number">30</span>)</span><br><span class="line">    driver.get(<span class="string">'https://google.com'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.6-alpine</span><br><span class="line"></span><br><span class="line">ADD app.py /</span><br><span class="line">RUN apk add --update bash chromium chromium-chromedriver</span><br><span class="line">RUN pip install selenium</span><br><span class="line">CMD [<span class="string">"python"</span>, <span class="string">"app.py"</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Docker </tag>
            
            <tag> Selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stress</title>
      <link href="/posts/7212f3ac/"/>
      <url>/posts/7212f3ac/</url>
      
        <content type="html"><![CDATA[<p>透過stress可以模擬系統busy的狀況<br><code>sudo apt install stress</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">`stress&apos; imposes certain types of compute stress on your system</span><br><span class="line"></span><br><span class="line">Usage: stress [OPTION [ARG]] ...</span><br><span class="line"> -?, --help         show this help statement</span><br><span class="line">     --version      show version statement</span><br><span class="line"> -v, --verbose      be verbose</span><br><span class="line"> -q, --quiet        be quiet</span><br><span class="line"> -n, --dry-run      show what would have been done</span><br><span class="line"> -t, --timeout N    timeout after N seconds</span><br><span class="line">     --backoff N    wait factor of N microseconds before work starts</span><br><span class="line"> -c, --cpu N        spawn N workers spinning on sqrt()</span><br><span class="line"> -i, --io N         spawn N workers spinning on sync()</span><br><span class="line"> -m, --vm N         spawn N workers spinning on malloc()/free()</span><br><span class="line">     --vm-bytes B   malloc B bytes per vm worker (default is 256MB)</span><br><span class="line">     --vm-stride B  touch a byte every B bytes (default is 4096)</span><br><span class="line">     --vm-hang N    sleep N secs before free (default none, 0 is inf)</span><br><span class="line">     --vm-keep      redirty memory instead of freeing and reallocating</span><br><span class="line"> -d, --hdd N        spawn N workers spinning on write()/unlink()</span><br><span class="line">     --hdd-bytes B  write B bytes per hdd worker (default is 1GB)</span><br><span class="line"></span><br><span class="line">Example: stress --cpu 8 --io 4 --vm 2 --vm-bytes 128M --timeout 10s</span><br><span class="line"></span><br><span class="line">Note: Numbers may be suffixed with s,m,h,d,y (time) or B,K,M,G (size).</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Append Date/Time to File</title>
      <link href="/posts/4228bd6/"/>
      <url>/posts/4228bd6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">time_t</span> rawtime;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> * <span class="title">timeinfo</span>;</span></span><br><span class="line">    <span class="keyword">char</span> buffer[<span class="number">80</span>];</span><br><span class="line"></span><br><span class="line">    time (&amp;rawtime);</span><br><span class="line">    timeinfo = localtime(&amp;rawtime);</span><br><span class="line"></span><br><span class="line">    strftime(buffer,<span class="number">80</span>,<span class="string">"%Y-%m-%d %H:%M:%S\n"</span>,timeinfo);</span><br><span class="line"></span><br><span class="line">    ofstream myfile;</span><br><span class="line">    myfile.open(<span class="string">"test.txt"</span>, ios_base::app);</span><br><span class="line">    myfile &lt;&lt; <span class="built_in">string</span>(buffer);</span><br><span class="line">    myfile.close();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在category跟tag頁面，加上年份分隔</title>
      <link href="/posts/327d13d/"/>
      <url>/posts/327d13d/</url>
      
        <content type="html"><![CDATA[<img src="/posts/327d13d/before.jpg" class title="修改前"><p>category跟tag的改法一樣</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/themes/next/layout/category.swig b/themes/next/layout/category.swig</span><br><span class="line">index 8e3aa72..83e7916 100644</span><br><span class="line">--- a/themes/next/layout/category.swig</span><br><span class="line">+++ b/themes/next/layout/category.swig</span><br><span class="line">@@ -20,6 +20,19 @@</span><br><span class="line">       &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">       &#123;% for post in page.posts %&#125;</span><br><span class="line">+</span><br><span class="line">+          &#123;# Show year #&#125;</span><br><span class="line">+          &#123;% set year %&#125;</span><br><span class="line">+          &#123;% set post.year = date(post.date, &apos;YYYY&apos;) %&#125;</span><br><span class="line">+</span><br><span class="line">+          &#123;% if post.year !== year %&#125;</span><br><span class="line">+              &#123;% set year = post.year %&#125;</span><br><span class="line">+              &lt;div class=&quot;collection-title&quot;&gt;</span><br><span class="line">+                &lt;h2 class=&quot;archive-year motion-element&quot; id=&quot;archive-year-&#123;&#123; year &#125;&#125;&quot;&gt;&#123;&#123; year &#125;&#125;&lt;/h2&gt;</span><br><span class="line">+              &lt;/div&gt;</span><br><span class="line">+          &#123;% endif %&#125;</span><br><span class="line">+          &#123;# endshow #&#125;</span><br><span class="line">+</span><br><span class="line">         &#123;&#123; post_template.render(post) &#125;&#125;</span><br><span class="line">       &#123;% endfor %&#125;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line">@@ -36,3 +49,11 @@</span><br><span class="line"> &#123;% block sidebar %&#125;</span><br><span class="line">   &#123;&#123; sidebar_template.render(false) &#125;&#125;</span><br><span class="line"> &#123;% endblock %&#125;</span><br><span class="line">+</span><br><span class="line">+&#123;% block script_extra %&#125;</span><br><span class="line">+  &#123;% if theme.use_motion %&#125;</span><br><span class="line">+    &lt;script type=&quot;text/javascript&quot; id=&quot;motion.page.archive&quot;&gt;</span><br><span class="line">+      $(&apos;.archive-year&apos;).velocity(&apos;transition.slideLeftIn&apos;);</span><br><span class="line">+    &lt;/script&gt;</span><br><span class="line">+  &#123;% endif %&#125;</span><br><span class="line">+&#123;% endblock %&#125;</span><br><span class="line">\ No newline at end of file</span><br></pre></td></tr></table></figure><img src="/posts/327d13d/after.jpg" class title="修改後">]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rclone</title>
      <link href="/posts/dd6717ac/"/>
      <url>/posts/dd6717ac/</url>
      
        <content type="html"><![CDATA[<ul><li><p>下載<br><a href="https://rclone.org/downloads/" target="_blank" rel="noopener">https://rclone.org/downloads/</a><br>直接解壓縮 rclone-v1.51.0-windows-amd64.zip</p></li><li><p>設定config</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rclone config</span></span><br><span class="line">No remotes found - make a new one</span><br><span class="line">n) New remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line"><span class="meta">n/s/q&gt;</span><span class="bash"> n</span></span><br><span class="line"><span class="meta">name&gt;</span><span class="bash"> GD</span></span><br><span class="line">Type of storage to configure.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line">...</span><br><span class="line">13 / Google Drive</span><br><span class="line">   \ "drive"</span><br><span class="line">...</span><br><span class="line"><span class="meta">Storage&gt;</span><span class="bash"> 13</span></span><br><span class="line">** See help for drive backend at: https://rclone.org/drive/ **</span><br><span class="line"></span><br><span class="line">Google Application Client Id</span><br><span class="line">Setting your own is recommended.</span><br><span class="line">See https://rclone.org/drive/#making-your-own-client-id for how to create your own.</span><br><span class="line">If you leave this blank, it will use an internal key which is low performance.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">client_id&gt;</span></span><br><span class="line">Google Application Client Secret</span><br><span class="line">Setting your own is recommended.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">client_secret&gt;</span></span><br><span class="line">Scope that rclone should use when requesting access from drive.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line"> 1 / Full access all files, excluding Application Data Folder.</span><br><span class="line">   \ "drive"</span><br><span class="line"> 2 / Read-only access to file metadata and file contents.</span><br><span class="line">   \ "drive.readonly"</span><br><span class="line">   / Access to files created by rclone only.</span><br><span class="line"> 3 | These are visible in the drive website.</span><br><span class="line">   | File authorization is revoked when the user deauthorizes the app.</span><br><span class="line">   \ "drive.file"</span><br><span class="line">   / Allows read and write access to the Application Data folder.</span><br><span class="line"> 4 | This is not visible in the drive website.</span><br><span class="line">   \ "drive.appfolder"</span><br><span class="line">   / Allows read-only access to file metadata but</span><br><span class="line"> 5 | does not allow any access to read or download file content.</span><br><span class="line">   \ "drive.metadata.readonly"</span><br><span class="line"><span class="meta">scope&gt;</span><span class="bash"> 1</span></span><br><span class="line">ID of the root folder</span><br><span class="line">Leave blank normally.</span><br><span class="line"></span><br><span class="line">Fill in to access "Computers" folders (see docs), or for rclone to use</span><br><span class="line">a non root folder as its starting point.</span><br><span class="line"></span><br><span class="line">Note that if this is blank, the first time rclone runs it will fill it</span><br><span class="line">in with the ID of the root folder.</span><br><span class="line"></span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">root_folder_id&gt;</span></span><br><span class="line">Service Account Credentials JSON file path</span><br><span class="line">Leave blank normally.</span><br><span class="line">Needed only if you want use SA instead of interactive login.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">service_account_file&gt;</span></span><br><span class="line">Edit advanced config? (y/n)</span><br><span class="line">y) Yes</span><br><span class="line">n) No (default)</span><br><span class="line"><span class="meta">y/n&gt;</span><span class="bash"> n</span></span><br><span class="line">Remote config</span><br><span class="line">Use auto config?</span><br><span class="line"> * Say Y if not sure</span><br><span class="line"> * Say N if you are working on a remote or headless machine</span><br><span class="line">y) Yes (default)</span><br><span class="line">n) No</span><br><span class="line"><span class="meta">y/n&gt;</span><span class="bash"> y</span></span><br><span class="line">If your browser doesn't open automatically go to the following link: http://127.0.0.1:53682/auth?state=dcXtut6iPOjzZEkRgNhRGw</span><br><span class="line">Log in and authorize rclone for access</span><br><span class="line">Waiting for code...</span><br><span class="line">Got code</span><br><span class="line">Configure this as a team drive?</span><br><span class="line">y) Yes</span><br><span class="line">n) No (default)</span><br><span class="line"><span class="meta">y/n&gt;</span><span class="bash"> n</span></span><br><span class="line">--------------------</span><br><span class="line">[GD]</span><br><span class="line">type = drive</span><br><span class="line">scope = drive</span><br><span class="line">token = &#123;"access_token":"XXXX","token_type":"Bearer","refresh_token":"YYYY","expiry":"2020-03-04T10:53:52.6578174+08:00"&#125;</span><br><span class="line">--------------------</span><br><span class="line">y) Yes this is OK (default)</span><br><span class="line">e) Edit this remote</span><br><span class="line">d) Delete this remote</span><br><span class="line"><span class="meta">y/e/d&gt;</span><span class="bash"> y</span></span><br></pre></td></tr></table></figure><ul><li>client_id和client_secret可以略過不設定</li><li>root_folder_id和service_account_file可以略過不設定</li><li>在設定過程中，會自動開啟網頁要求同意rclone存取Google Drive的權限<table style="width: 70%;"><tbody><tr><td>　<img alt src="/posts/dd6717ac/permission1.jpg">　</td><td>　<img alt src="/posts/dd6717ac/permission2.jpg">　</td></tr></tbody></table></li></ul></li><li><p>操作</p><ul><li>list<br>lsd -&gt; 列出GD:目錄下的資料夾 (–max-depth預設為1，即只會列出第一層目錄下的資料夾)<br>ls -&gt; 列出GD:目錄下的檔案 (預設會列出所有的檔案)<br>ls –max-depth 1 -&gt; 列出GD:目錄下，第一層的檔案<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rclone lsd GD:</span></span><br><span class="line">        -1 2018-09-18 09:00:36        -1 folder1</span><br><span class="line">        -1 2018-09-18 08:50:55        -1 folder2</span><br><span class="line"><span class="meta">$</span><span class="bash"> rclone ls --max-depth 1 GD:</span></span><br><span class="line">    28263 file1.xlsx</span><br><span class="line">  3554240 file2.docx</span><br></pre></td></tr></table></figure></li><li>copy file from local to remote<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rclone copy -v README.txt GD:</span></span><br><span class="line">2020/03/04 10:18:31 INFO  : README.txt: Copied (new)</span><br><span class="line">2020/03/04 10:18:31 INFO  :</span><br><span class="line">Transferred:      838.637k / 838.637 kBytes, 100%, 222.683 kBytes/s, ETA 0s</span><br><span class="line">Transferred:            1 / 1, 100%</span><br><span class="line">Elapsed time:         3.7s</span><br><span class="line"><span class="meta">$</span><span class="bash"> rclone copy -v folder GD:/folder</span></span><br><span class="line">2020/03/04 10:27:57 INFO  : Google drive root 'folder': Waiting for checks to finish</span><br><span class="line">2020/03/04 10:27:57 INFO  : Google drive root 'folder': Waiting for transfers to finish</span><br><span class="line">2020/03/04 10:28:00 INFO  : api.txt: Copied (new)</span><br><span class="line">2020/03/04 10:28:01 INFO  : issue.txt: Copied (new)</span><br><span class="line">2020/03/04 10:28:01 INFO  : index.html: Copied (new)</span><br><span class="line">2020/03/04 10:28:04 INFO  : log.txt: Copied (new)</span><br><span class="line">2020/03/04 10:28:22 INFO  : 192.168.56.3_2020-02-18_10-19-22.log: Copied (new)</span><br><span class="line">2020/03/04 10:28:22 INFO  :</span><br><span class="line">Transferred:        7.076M / 7.076 MBytes, 100%, 285.334 kBytes/s, ETA 0s</span><br><span class="line">Transferred:            5 / 5, 100%</span><br><span class="line">Elapsed time:        25.3s</span><br></pre></td></tr></table></figure></li><li>copy file from remote to local<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rclone copy -v GD:/file.txt .</span></span><br><span class="line">2020/03/04 10:21:54 INFO  : file.txt: Copied (new)</span><br><span class="line">2020/03/04 10:21:54 INFO  :</span><br><span class="line">Transferred:      838.637k / 838.637 kBytes, 100%, 513.379 kBytes/s, ETA 0s</span><br><span class="line">Transferred:            1 / 1, 100%</span><br><span class="line">Elapsed time:         1.6s</span><br><span class="line"><span class="meta">$</span><span class="bash"> rclone copy -v GD:/folder ./folder</span></span><br><span class="line">2020/03/04 10:24:36 INFO  : Local file system at //?/D:/rclone-v1.51.0-windows-amd64/folder: Waiting for checks to finish</span><br><span class="line">2020/03/04 10:24:36 INFO  : Local file system at //?/D:/rclone-v1.51.0-windows-amd64/folder: Waiting for transfers to finish</span><br><span class="line">2020/03/04 10:24:36 INFO  : api.txt: Copied (new)</span><br><span class="line">2020/03/04 10:24:37 INFO  : index.html: Copied (new)</span><br><span class="line">2020/03/04 10:24:37 INFO  : issue.txt: Copied (new)</span><br><span class="line">2020/03/04 10:24:37 INFO  : log.txt: Copied (new)</span><br><span class="line">2020/03/04 10:24:38 INFO  : 192.168.56.3_2020-02-18_10-19-22.log: Copied (new)</span><br><span class="line">2020/03/04 10:24:38 INFO  :</span><br><span class="line">Transferred:        7.076M / 7.076 MBytes, 100%, 4.007 MBytes/s, ETA 0s</span><br><span class="line">Transferred:            5 / 5, 100%</span><br><span class="line">Elapsed time:         1.7s</span><br></pre></td></tr></table></figure></li><li>query size<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rclone size GD:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rclone size GD:folder</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rclone size GD:folder/subfolder</span></span><br><span class="line">Total objects: 7</span><br><span class="line">Total size: 596.513 MBytes (625489224 Bytes)</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> rclone </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rclone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Guide</title>
      <link href="/posts/ab21860c/"/>
      <url>/posts/ab21860c/</url>
      
        <content type="html"><![CDATA[<h4 id="安裝hexo，並且使用git追蹤所有資料"><a href="#安裝hexo，並且使用git追蹤所有資料" class="headerlink" title="安裝hexo，並且使用git追蹤所有資料"></a>安裝hexo，並且使用git追蹤所有資料</h4><ol start="0"><li><p>Pre-required</p><ul><li>Node.js</li><li>git</li></ul></li><li><p>安裝hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g (預設裝的hexo是4.0.0)</span><br><span class="line">$ npm install hexo@5.0.0</span><br></pre></td></tr></table></figure></li><li><p>建立github repository<br>qcycp.github.io</p></li><li><p>建立branch<br>master: hexo生成的網頁資料<br>hexo (set default): raw data的markdown檔案</p></li><li><p>in a new and empty folder <code>tmp</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></li><li><p>建立本機端hexo project</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git clone http://github.com/qcycp/qcycp.github.io.git -b hexo</span><br><span class="line">$ cp -rf tmp/* qcycp.github.io/</span><br><span class="line">$ cd qcycp.github.io/</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>設定config<br>edit _config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: http://github.com/qcycp/qcycp.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>將source code進到hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;setup Hexo&quot;</span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure></li><li><p>將hexo內容進到master</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure></li><li><p>網頁<br><a href="https://qcycp.github.io/">https://qcycp.github.io/</a></p></li><li><p>re-setup hexo project</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone http://github.com/qcycp/qcycp.github.io.git -b hexo</span><br><span class="line">$ cd qcycp.github.io</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p>更改資料夾或檔名大小寫<br>假設原本已經建立了tag為AAA，後來改成aaa時，網頁連結會修改為/aaa/index.html<br>但是在gitlab中的資料夾，依然會是AAA，所以實際上會造成網頁連結404<br>預設git在windows中，是不分大小寫的，所以hexo在checkin時，才會無法對大小修改進行更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> .deploy_git</span><br><span class="line">$ git config core.ignorecase <span class="literal">false</span></span><br><span class="line">$ rm -rf tags/AAA <span class="comment">#把舊的git目錄結構刪除，再重新上傳，根據需求處理categories或tags中的目錄</span></span><br><span class="line">$ git commit -m <span class="string">"update"</span></span><br><span class="line">$ git push <span class="comment">#在.deploy_git中操作的，是qcycp.github.io.git(master)生成的網頁資料</span></span><br><span class="line">$ <span class="built_in">cd</span> ../</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><h4 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$ cat package.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"hexo generate"</span>,</span><br><span class="line">    <span class="attr">"clean"</span>: <span class="string">"hexo clean"</span>,</span><br><span class="line">    <span class="attr">"deploy"</span>: <span class="string">"hexo deploy"</span>,</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"hexo server"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hexo"</span>: &#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"4.0.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"hexo"</span>: <span class="string">"^4.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-abbrlink"</span>: <span class="string">"^2.0.5"</span>, <span class="comment">/* 建立文章唯一的link */</span></span><br><span class="line">    <span class="attr">"hexo-asset-link"</span>: <span class="string">"^1.2.1"</span>, <span class="comment">/* 支援圖片目錄、自動上傳的套件 */</span></span><br><span class="line">    <span class="attr">"hexo-blog-encrypt"</span>: <span class="string">"^3.0.3"</span>, <span class="comment">/* 支援文章加密的套件 */</span></span><br><span class="line">    <span class="attr">"hexo-deployer-git"</span>: <span class="string">"^2.0.0"</span>, <span class="comment">/* 支援git部署的套件 */</span></span><br><span class="line">    <span class="attr">"hexo-generator-archive"</span>: <span class="string">"^1.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-generator-category"</span>: <span class="string">"^1.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-generator-index"</span>: <span class="string">"^1.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-generator-search"</span>: <span class="string">"^2.4.0"</span>, <span class="comment">/* 支援搜尋的套件 */</span></span><br><span class="line">    <span class="attr">"hexo-generator-tag"</span>: <span class="string">"^1.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-hide-posts"</span>: <span class="string">"^0.1.0"</span>, <span class="comment">/* 支援文章隱藏的套件 */</span></span><br><span class="line">    <span class="attr">"hexo-renderer-ejs"</span>: <span class="string">"^1.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-renderer-marked"</span>: <span class="string">"^2.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-renderer-stylus"</span>: <span class="string">"^1.1.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-server"</span>: <span class="string">"^1.0.0"</span> <span class="comment">/* 默認安裝 */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd qcycp.github.io</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br><span class="line">$ git clone https://github.com/theme-next/hexo-theme-next.git</span><br></pre></td></tr></table></figure><ul><li>建立tags頁面<br>$ hexo new page tags<br>$ cd source/tags/<br>$ edit index.md<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2019-11-07 12:45:26</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>$ cd themes/next/<br>$ edit _config.yml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /|| home</span><br><span class="line">  tags: /tags/||tags</span><br></pre></td></tr></table></figure></li><li>canvas_nest 套件<br>在空白處會有移動的線條動畫<ul><li>安裝<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/next</span><br><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</span><br></pre></td></tr></table></figure></li><li>設定<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Canvas-nest</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span><br><span class="line">canvas_nest:</span><br><span class="line">  enable: true</span><br><span class="line">  onmobile: true # display on mobile or not</span><br><span class="line">  color: &quot;0,0,255&quot; # RGB values, use &apos;,&apos; to separate</span><br><span class="line">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class="line">  zIndex: -1 # z-index property of the background</span><br><span class="line">  count: 99 # the number of lines</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="套件"><a href="#套件" class="headerlink" title="套件"></a>套件</h4><ul><li>hexo-generator-search</li><li>文章連結唯一化<br>Hexo 的文章連結預設是採用發佈時間或標題來使用，如果變更會導至連結改變，不利分享或 SEO，可安裝 hexo-abbrlink 解決<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cd qcycp.github.io</span><br><span class="line">$ npm install hexo-abbrlink --save</span><br><span class="line">$ vim _config.yml</span><br><span class="line">permalink: posts/:abbrlink/</span><br><span class="line"></span><br><span class="line"># abbrlink config</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  #support crc16(default) and crc32</span><br><span class="line">  rep: hex    #support dec(default) and hex</span><br></pre></td></tr></table></figure></li><li>安裝上傳本地圖片的外掛<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd qcycp.github.io</span><br><span class="line">$ npm install https://github.com/CodeFalling/hexo-asset-image –save</span><br></pre></td></tr></table></figure>執行hexo new article_name<br>在 source/_posts 資料夾內除了生成 article_name.md 檔案還會生成一個 article_name 的資料夾，把圖片複製到資料夾中，使用下方任一方式新增圖片<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img image.jpg 我是圖片 %&#125;</span><br><span class="line">![我是圖片](image.jpg)</span><br></pre></td></tr></table></figure></li></ul><h4 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h4><ul><li>新建文章<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new article_name</span><br><span class="line">$ cd source/_post</span><br><span class="line">$ edit article_name.md</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure></li><li>local server<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></li><li>刪除文章<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd source/_post</span><br><span class="line">$ rm target_file</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure></li></ul><h4 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h4><p><a href="https://yaoandy107.github.io/hexo-tutorial/" target="_blank" rel="noopener">https://yaoandy107.github.io/hexo-tutorial/</a><br><a href="https://epsi-rns.gitlab.io/ssg/2019/05/30/hexo-summary/" target="_blank" rel="noopener">https://epsi-rns.gitlab.io/ssg/2019/05/30/hexo-summary/</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>md5sum</title>
      <link href="/posts/99132266/"/>
      <url>/posts/99132266/</url>
      
        <content type="html"><![CDATA[<ul><li>針對檔案製作 md5 checksum，可以用該 checksum 檢察該檔案是否是原先的檔案內容，避免在傳輸或上傳、下載的過程中，檔案有破損或被修改過<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ date &gt; file</span><br><span class="line">$ md5sum file &gt; file.md5sum</span><br><span class="line">$ md5sum -c file.md5sum</span><br><span class="line">file: OK</span><br></pre></td></tr></table></figure></li><li>檔案內容被修改過<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ date &gt; file</span><br><span class="line">$ md5sum -c file.md5sum</span><br><span class="line">file: FAILED</span><br><span class="line">md5sum: WARNING: 1 computed checksum did NOT match</span><br></pre></td></tr></table></figure></li><li>每個檔案都可以產生一組唯一的checksum<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat file.md5sum</span><br><span class="line">09b91cdeb925bff08fda813dcb7f187a  file</span><br></pre></td></tr></table></figure></li><li>對於要檢查的檔案，檔名不能做任何修改，且要跟file.md5sum的位置一致<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mv file file_2</span><br><span class="line">$ md5sum -c file.md5sum</span><br><span class="line">md5sum: file: No such file or directory</span><br><span class="line">date.1: FAILED open or read</span><br><span class="line">md5sum: WARNING: 1 listed file could not be read</span><br></pre></td></tr></table></figure></li><li>可以針對多個檔案製作 md5sum<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ date &gt; file_1</span><br><span class="line">$ date &gt; file_2</span><br><span class="line">$ md5sum file_1 file_2 &gt; file.md5sum</span><br><span class="line">$ md5sum -c file.md5sum</span><br><span class="line">file_1: OK</span><br><span class="line">file_2: OK</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> mk5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> md5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Notes</title>
      <link href="/posts/374b29bd/"/>
      <url>/posts/374b29bd/</url>
      
        <content type="html"><![CDATA[<ul><li><p>How to keep docker container running<br>add following command at end of Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CMD tail -f /dev/null</span><br></pre></td></tr></table></figure></li><li><p>There is an experimental build flag –squash to summarize everything into one layer.<br>For example, <code>docker build --squash -t &lt;tag&gt; .</code></p><ul><li>How to enable experimental features in the daemon?<br>edit /etc/docker/daemon.json configuration file:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;experimental&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Check experimental status<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker version -f &apos;&#123;&#123;.Server.Experimental&#125;&#125;&apos;</span><br><span class="line">true</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="Container-data"><a href="#Container-data" class="headerlink" title="Container data"></a>Container data</h3><ul><li>docker的資料會在HOST的/var/lib/docker目錄下</li><li>每個container的資料會在/var/lib/docker/containers裡</li><li>每個container的log會存在/var/lib/docker/containers/hash/hash-json.log<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker inspect --format=<span class="string">'&#123;&#123;.LogPath&#125;&#125;'</span> 847d0eb77dfe</span><br><span class="line">/var/lib/docker/containers/847d0eb77dfe7169a68bd7e6c7cf37f0b237689714a91c3debecb162e7c6eccf/847d0eb77dfe7169a68bd7e6c7cf37f0b237689714a91c3debecb162e7c6eccf-json.log</span><br></pre></td></tr></table></figure></li></ul><h3 id="Image-size-and-Dockerfile"><a href="#Image-size-and-Dockerfile" class="headerlink" title="Image size and Dockerfile"></a>Image size and Dockerfile</h3><p><a href="https://blog.replicated.com/refactoring-a-dockerfile-for-image-size/" target="_blank" rel="noopener">Refactoring a Dockerfile for image size</a></p><ol><li>每一個RUN指令都會產生一個Layer</li><li>多個指令分成多個Layer來執行，比起多個指令在同一個Layer執行，所佔的空間要大</li><li>install package跟remove package如果在不同Layer執行，image size並不會變小，必須要在同一個Layer內執行，remove package才能縮減image size</li></ol><h3 id="Commands"><a href="#Commands" class="headerlink" title="Commands"></a>Commands</h3><p><a href="https://docs.docker.com/engine/reference/commandline/docker/" target="_blank" rel="noopener">https://docs.docker.com/engine/reference/commandline/docker/</a></p><ul><li>display docker version and info<br><code>docker --version</code><br><code>docker version</code><br><code>docker info</code></li><li>search docker image on docker-hub<br><code>docker search dlib</code></li><li>list docker images<br><code>docker images</code></li><li>list docker containers<br><code>docker ps -a</code></li><li>build and run<br><code>docker build --no-cache -t myimage .</code><br><code>docker run -d -p 1337:80 myimage</code><br><code>docker run -d --restart=always --name mycontainer -e PYTHONUNBUFFERED=0 -p 1337:80 myimage</code><br><code>docker run -d --restart=always --name mycontainer -e REMOTE_HOST_IP=172.18.71.12:8857 -p 1337:80 myimage</code><br>可以使用update更新指令中的參數<br><code>docker update --restart=always myimage</code></li><li>docker-compose<br><code>docker-compose up</code><br><code>docker-compose up -d</code><br><code>docker-compose up -d service_name</code><br><code>docker-compose down</code><br><code>docker-compose images</code><br><code>docker-compose restart -d service_name</code><br><code>docker-compose -f tmp_docker-compose_ci.yml up -d</code></li><li>save docker image<br><code>docker save myimage &gt; myimage.tar</code><br><code>docker save -o myimage.tar myimage</code><br><code>docker save myimage | gzip &gt; myimage.tgz</code><br><code>docker export myimage | gzip &gt; myimage.tgz</code></li><li>load docker image<br><code>docker load -i myimage.tar</code><br><code>gunzip -c myimage.tgz | docker load</code></li><li>container operations<br><code>docker stop container_id</code><br><code>docker rm container_id</code><br><code>docker rm -f container_id</code><br><code>docker restart container_id</code></li><li>image operations<br><code>docker tag source_image_name:tag target_image_name:tag</code><br><code>docker rmi target_image_name:tag</code><br><code>docker rmi image_id</code></li><li>show logs<br><code>docker logs -f container_id</code></li><li>bash operations<br><code>docker exec -it container_id bash</code><br><code>docker exec -i mysql /usr/bin/mysql -u root -p1234 &lt;&lt;&lt; &#39;use dbname;show tables;&#39;</code><br><code>docker exec -i mysql /usr/bin/mysql -u root -p1234 -e &#39;use dbname;show tables;&#39;</code><br><code>docker exec -it mycontainer ls</code><br><code>docker exec -it mycontainer sh -c &#39;ls&#39;</code></li><li>copy file from/to container<br><code>docker cp nginx.conf mycontainer:/etc/nginx/conf.d/</code><br><code>docker cp mycontainer:/app/file /home/user/</code></li><li>docker container stats<br><code>docker stats --no-stream</code><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker stats --no-stream</span><br><span class="line">CONTAINER ID        NAME                       CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS</span><br><span class="line">b753136fd716        mycontainer                37.76%              144.7MiB / 1.953GiB   7.24%               107MB / 2.05MB      7.64MB / 0B         31</span><br></pre></td></tr></table></figure></li><li>get a shell on the host<br><code>$ docker run --privileged --pid=host -it alpine:3.8 nsenter -t 1 -m -u -n -i sh</code></li><li>Links<br><a href="https://platform9.com/blog/container-namespaces-deep-dive-container-networking/" target="_blank" rel="noopener">Container Namespaces</a></li><li>清理系統<ul><li>刪除沒有 tag 的 image<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker image prune</span><br><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] y</span><br><span class="line">Total reclaimed space: 0B</span><br></pre></td></tr></table></figure></li><li>刪除沒有 running container 參考到的 image<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ docker image prune --all</span><br><span class="line">WARNING! This will remove all images without at least one container associated to them.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] y</span><br><span class="line">Deleted Images:</span><br><span class="line">untagged: 10.36.94.120:50000/node:12.2.0-alpine</span><br><span class="line">untagged: 10.36.94.120:50000/node@sha256:44833e4939cae1d429eaf303db96df2a7676114822e50c77ddcb888fc40d2e55</span><br><span class="line">deleted: sha256:f391dabf9dce53bfc184823f18b7703db8dfead7f25e5b376865e690433bec78</span><br><span class="line">deleted: sha256:336cfdd902c9e424a9ddf5d12f844ea7657bb93fff1ac480f2f58d03a0d61712</span><br><span class="line">deleted: sha256:8e16b58e2279476d2b32eac06400116114fb9facbd8205409d2285e1bdcb7312</span><br><span class="line"></span><br><span class="line">Total reclaimed space: 3.704GB</span><br></pre></td></tr></table></figure></li><li>刪除 image 及 container<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ docker system prune</span><br><span class="line">WARNING! This will remove:</span><br><span class="line">        - all stopped containers</span><br><span class="line">        - all networks not used by at least one container</span><br><span class="line">        - all dangling images</span><br><span class="line">        - all dangling build cache</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] y</span><br><span class="line">Total reclaimed space: 0B</span><br><span class="line"></span><br><span class="line">$ docker system prune --all</span><br><span class="line">WARNING! This will remove:</span><br><span class="line">        - all stopped containers</span><br><span class="line">        - all networks not used by at least one container</span><br><span class="line">        - all images without at least one container associated to them</span><br><span class="line">        - all build cache</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] y</span><br><span class="line">Total reclaimed space: 0B</span><br></pre></td></tr></table></figure></li></ul></li><li>Get information of docker system<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker system df</span><br><span class="line">TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE</span><br><span class="line">Images              5                   5                   2.023GB             0B (0%)</span><br><span class="line">Containers          5                   5                   3.54MB              0B (0%)</span><br><span class="line">Local Volumes       3                   1                   1.66GB              30.44MB (1%)</span><br><span class="line">Build Cache         0                   0                   0B                  0B</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="https://peihsinsu.gitbooks.io/docker-note-book/content/dockerfile-env-vs-arg.html" target="_blank" rel="noopener">https://peihsinsu.gitbooks.io/docker-note-book/content/dockerfile-env-vs-arg.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ Notes</title>
      <link href="/posts/b4afeaae/"/>
      <url>/posts/b4afeaae/</url>
      
        <content type="html"><![CDATA[<ul><li>Compiling C++11 with g++<br>g++ -std=c++11 -o app app.cpp</li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zip/unzip</title>
      <link href="/posts/a072fa7/"/>
      <url>/posts/a072fa7/</url>
      
        <content type="html"><![CDATA[<ul><li>zipfile<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"></span><br><span class="line">OUTPUT_FLODER = <span class="string">'output'</span></span><br><span class="line">INPUT_ZIP_FILE = <span class="string">'input.zip'</span></span><br><span class="line">OUTPUT_ZIP_FILE = <span class="string">'output.zip'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unzip</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(INPUT_ZIP_FILE):</span><br><span class="line">        os.makedirs(OUTPUT_FLODER, exist_ok=<span class="literal">True</span>)</span><br><span class="line">        zf = zipfile.ZipFile(INPUT_ZIP_FILE)</span><br><span class="line">        zf.extractall(OUTPUT_FLODER)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zip</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#zf = zipfile.ZipFile(OUTPUT_ZIP_FILE, mode='w')#just zip and no compression</span></span><br><span class="line">    zf = zipfile.ZipFile(OUTPUT_ZIP_FILE, mode=<span class="string">'w'</span>, compression=zipfile.ZIP_DEFLATED)</span><br><span class="line">    os.chdir(<span class="string">'output'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> root, dir, files <span class="keyword">in</span> os.walk(<span class="string">"."</span>):</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            fullpath = os.path.join(root, file)</span><br><span class="line">            zf.write(fullpath, arcname=file)</span><br><span class="line">    zf.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unzip()</span><br><span class="line">    zip()</span><br></pre></td></tr></table></figure></li><li>tarfile<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> tarfile</span><br><span class="line"></span><br><span class="line">tar = tarfile.open(<span class="string">'/app/logs.tar'</span>, <span class="string">'w'</span>)</span><br><span class="line"><span class="keyword">for</span> root, dir, files <span class="keyword">in</span> os.walk(<span class="string">'/app/logs/'</span>):</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        fullpath = os.path.join(root, file)</span><br><span class="line">        tar.add(fullpath, arcname=file)</span><br><span class="line">tar.close()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Happytime - rtsp stream server</title>
      <link href="/posts/6826a2b4/"/>
      <url>/posts/6826a2b4/</url>
      
        <content type="html"><![CDATA[<h5 id="Download-link"><a href="#Download-link" class="headerlink" title="Download link"></a>Download link</h5><p><a href="http://www.happytimesoft.com/download.html" target="_blank" rel="noopener">http://www.happytimesoft.com/download.html</a></p><h5 id="on-linux"><a href="#on-linux" class="headerlink" title="on linux"></a>on linux</h5><ul><li>RTSP Server for linux<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ tar xzf happytime-rtsp-server.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> happytime-rtsp-server/</span><br><span class="line">$ ./start.sh</span><br><span class="line">$ ./stop.sh</span><br></pre></td></tr></table></figure></li><li>config.xml<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">serverip</span>&gt;</span>192.168.56.6<span class="tag">&lt;/<span class="name">serverip</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">serverport</span>&gt;</span>8554<span class="tag">&lt;/<span class="name">serverport</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">output</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span><span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">video</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">codec</span>&gt;</span>H264<span class="tag">&lt;/<span class="name">codec</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">width</span>&gt;</span>1280<span class="tag">&lt;/<span class="name">width</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">height</span>&gt;</span>720<span class="tag">&lt;/<span class="name">height</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">framerate</span>&gt;</span>15<span class="tag">&lt;/<span class="name">framerate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bitrate</span>&gt;</span><span class="tag">&lt;/<span class="name">bitrate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Happytime </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rtsp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Install Gstreamer Manually</title>
      <link href="/posts/fcb954dd/"/>
      <url>/posts/fcb954dd/</url>
      
        <content type="html"><![CDATA[<ol><li>安裝meson<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install python3-setuptools</span><br><span class="line">$ wget https://files.pythonhosted.org/packages/ce/c5/e319419915d885933bdbfc2cee67eec8cf519b5b0ca9151573c62255dde9/meson-0.53.1.tar.gz</span><br><span class="line">$ tar xzf meson-0.53.1.tar.gz</span><br><span class="line">$ cd meson-0.53.1</span><br><span class="line">$ python3 setup.py build</span><br><span class="line">$ sudo python3 setup.py install</span><br></pre></td></tr></table></figure></li><li>安裝ninja<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install ninja-build</span><br></pre></td></tr></table></figure></li><li>安裝gstreamer，可用git checkout tag切換版本<br><code>master: 1.17.0.1</code></li></ol><ul><li>prerequired<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install libglib2.0-dev flex bison</span><br></pre></td></tr></table></figure></li><li>必要<br>git clone <a href="https://github.com/GStreamer/gstreamer.git" target="_blank" rel="noopener">https://github.com/GStreamer/gstreamer.git</a><br>git clone <a href="https://github.com/GStreamer/gst-plugins-base.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-plugins-base.git</a><br>git clone <a href="https://github.com/GStreamer/gst-plugins-good.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-plugins-good.git</a><br>git clone <a href="https://github.com/GStreamer/gst-plugins-bad.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-plugins-bad.git</a><br>git clone <a href="https://github.com/GStreamer/gst-plugins-ugly.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-plugins-ugly.git</a></li><li>非必要，安裝libav必須先裝FFMpeg<br>git clone <a href="https://github.com/GStreamer/gst-libav.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-libav.git</a><br>git clone <a href="https://github.com/GStreamer/gstreamer-vaapi.git" target="_blank" rel="noopener">https://github.com/GStreamer/gstreamer-vaapi.git</a><br>git clone <a href="https://github.com/GStreamer/gst-omx.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-omx.git</a></li><li>steps<ul><li>build.sh<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rm -rf build &amp;&amp;</span><br><span class="line">mkdir build &amp;&amp;</span><br><span class="line"><span class="built_in">cd</span>    build &amp;&amp;</span><br><span class="line"></span><br><span class="line">meson  --prefix=/usr       \</span><br><span class="line">       -Dbuildtype=release \</span><br><span class="line">       -Dgst_debug=<span class="literal">false</span>   \</span><br><span class="line">       -Dgtk_doc=disabled  &amp;&amp;</span><br><span class="line">ninja</span><br></pre></td></tr></table></figure></li><li>install<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd build</span><br><span class="line">sudo ninja install</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> gstreamer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gstreamer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCV sample in C++</title>
      <link href="/posts/648a241a/"/>
      <url>/posts/648a241a/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/opencv.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">VideoCapture <span class="title">cap</span><span class="params">(<span class="string">"rtsp://184.72.239.149/vod/mp4:BigBuckBunny_115k.mov"</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!cap.isOpened()) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Can not open video stream"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Mat frame;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">        cap &gt;&gt; frame;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (frame.empty())</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        imshow(<span class="string">"image"</span>, frame);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> key = (<span class="keyword">char</span>)waitKey(<span class="number">30</span>);</span><br><span class="line">        <span class="keyword">if</span> (key == <span class="number">27</span> || key == <span class="string">'q'</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Exit requested"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cap.release();</span><br><span class="line"></span><br><span class="line">    destroyAllWindows();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Check-the-opencv-version-in-ubuntu"><a href="#Check-the-opencv-version-in-ubuntu" class="headerlink" title="Check the opencv version in ubuntu"></a>Check the opencv version in ubuntu</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pkg-config --modversion opencv</span><br><span class="line">3.2.0</span><br></pre></td></tr></table></figure><h3 id="Compile"><a href="#Compile" class="headerlink" title="Compile"></a>Compile</h3><h5 id="with-system-opencv"><a href="#with-system-opencv" class="headerlink" title="with system opencv"></a>with system opencv</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ g++ main.cpp -o output `pkg-config --cflags --libs opencv`</span><br></pre></td></tr></table></figure><h5 id="with-specific-opencv-library"><a href="#with-specific-opencv-library" class="headerlink" title="with specific opencv library"></a>with specific opencv library</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LD_LIBRARY_PATH=/usr/local/lib g++ main.cpp -o output -I/usr/local/include/opencv4 -lopencv_videoio -lopencv_imgcodecs -lopencv_core</span><br></pre></td></tr></table></figure><h5 id="note"><a href="#note" class="headerlink" title="note"></a>note</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ pkg-config --cflags opencv</span><br><span class="line">-I/usr/include/opencv</span><br><span class="line">$ pkg-config --libs opencv</span><br><span class="line">-lopencv_shape -lopencv_stitching -lopencv_superres -lopencv_videostab -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_datasets -lopencv_dpm -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hdf -lopencv_line_descriptor -lopencv_optflow -lopencv_video -lopencv_plot -lopencv_reg -lopencv_saliency -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_rgbd -lopencv_viz -lopencv_surface_matching -lopencv_text -lopencv_ximgproc -lopencv_calib3d -lopencv_features2d -lopencv_flann -lopencv_xobjdetect -lopencv_objdetect -lopencv_ml -lopencv_xphoto -lopencv_highgui -lopencv_videoio -lopencv_imgcodecs -lopencv_photo -lopencv_imgproc -lopencv_core</span><br></pre></td></tr></table></figure><h3 id="Execute"><a href="#Execute" class="headerlink" title="Execute"></a>Execute</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./output</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenCV </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Compile OpenCV on Windows</title>
      <link href="/posts/f3c7f3/"/>
      <url>/posts/f3c7f3/</url>
      
        <content type="html"><![CDATA[<h4 id="更新Visual-Studio套件"><a href="#更新Visual-Studio套件" class="headerlink" title="更新Visual Studio套件"></a>更新Visual Studio套件</h4><ol><li>打開Visual Studio 2019</li><li>工具-&gt;取得工具與功能-&gt;使用C++的桌面開發，主要是要更新CMAKE工具</li></ol><h4 id="安裝cmake"><a href="#安裝cmake" class="headerlink" title="安裝cmake"></a>安裝cmake</h4><p><a href="https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2-win64-x64.msi" target="_blank" rel="noopener">https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2-win64-x64.msi</a><br>下載Windows win64-x64 Installer: cmake-3.16.2-win64-x64.msi</p><h4 id="執行script"><a href="#執行script" class="headerlink" title="執行script"></a>執行script</h4><p>CMAKE_CONFIG_GENERATOR設定方式<br>根據你安裝的Visual Studio來設定，如果不確定版本，可以參考Visual Studio Installer顯示的資訊<br><img src="/posts/f3c7f3/Visual_Studio_Installer.png" alt><br>Visual Studio 15 2017 Win64<br><img src="/posts/f3c7f3/Visual_Studio_15_2017_WIn64.jpg" alt><br>Visual Studio 16 2019<br><img src="/posts/f3c7f3/Visual_Studio_16_2019.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash -e</span><br><span class="line">myRepo=$(pwd)</span><br><span class="line">CMAKE_CONFIG_GENERATOR=&quot;Visual Studio 16 2019&quot;</span><br><span class="line">if [  ! -d &quot;$myRepo/opencv&quot;  ]; then</span><br><span class="line">    echo &quot;cloning opencv&quot;</span><br><span class="line">    git clone https://github.com/opencv/opencv.git</span><br><span class="line">    mkdir -p Build/opencv</span><br><span class="line">    mkdir -p Install/opencv</span><br><span class="line">else</span><br><span class="line">    cd opencv</span><br><span class="line">    git pull --rebase</span><br><span class="line">    cd ..</span><br><span class="line">fi</span><br><span class="line">if [  ! -d &quot;$myRepo/opencv_contrib&quot;  ]; then</span><br><span class="line">    echo &quot;cloning opencv_contrib&quot;</span><br><span class="line">    git clone https://github.com/opencv/opencv_contrib.git</span><br><span class="line">    mkdir -p Build/opencv_contrib</span><br><span class="line">else</span><br><span class="line">    cd opencv_contrib</span><br><span class="line">    git pull --rebase</span><br><span class="line">    cd ..</span><br><span class="line">fi</span><br><span class="line">RepoSource=opencv</span><br><span class="line">pushd Build/$RepoSource</span><br><span class="line">CMAKE_OPTIONS=&apos;-DBUILD_PERF_TESTS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_DOCS:BOOL=OFF -DWITH_CUDA:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DINSTALL_CREATE_DISTRIB=ON -DWITH_MFX=ON&apos;</span><br><span class="line">cmake -G&quot;$CMAKE_CONFIG_GENERATOR&quot; $CMAKE_OPTIONS -DOPENCV_EXTRA_MODULES_PATH=&quot;$myRepo&quot;/opencv_contrib/modules -DCMAKE_INSTALL_PREFIX=&quot;$myRepo&quot;/install/&quot;$RepoSource&quot; &quot;$myRepo/$RepoSource&quot;</span><br><span class="line">echo &quot;************************* $Source_DIR --&gt;debug&quot;</span><br><span class="line">cmake --build .  --config debug</span><br><span class="line">echo &quot;************************* $Source_DIR --&gt;release&quot;</span><br><span class="line">cmake --build .  --config release</span><br><span class="line">cmake --build .  --target install --config release</span><br><span class="line">cmake --build .  --target install --config debug</span><br><span class="line">popd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> OpenCV </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to Use Docker in Docker</title>
      <link href="/posts/787ab444/"/>
      <url>/posts/787ab444/</url>
      
        <content type="html"><![CDATA[<ol><li><p>in Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu:16.04</span><br><span class="line"></span><br><span class="line">RUN apt-get update &amp;&amp; \</span><br><span class="line">    apt-get install --no-install-recommends -y redis-server</span><br></pre></td></tr></table></figure></li><li><p>in supervisord.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[program:redis-server]</span><br><span class="line">command=redis-server</span><br><span class="line">autorestart=true</span><br><span class="line"></span><br><span class="line">stdout_logfile_maxbytes = 0</span><br><span class="line">stdout_logfile = /dev/stdout</span><br><span class="line">stderr_logfile_maxbytes = 0</span><br><span class="line">stderr_logfile = /dev/stderr</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL Backup and Restore</title>
      <link href="/posts/50121f15/"/>
      <url>/posts/50121f15/</url>
      
        <content type="html"><![CDATA[<h3 id="backup-script"><a href="#backup-script" class="headerlink" title="backup script"></a>backup script</h3><p><code>docker exec -it mysql_container /usr/bin/mysqldump -u username --password=password db_name &gt; backup.sql</code></p><p><code>mysqldump db_name table_name &gt; backup.sql</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># shell script to backup MySQL database from mysql docker container</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># backup dest directory</span></span><br><span class="line">DEST=<span class="string">"/home/user/backup"</span></span><br><span class="line"></span><br><span class="line">DOCKER_CONTAINER=<span class="string">"mysql"</span></span><br><span class="line">TIME=<span class="string">"<span class="variable">$(date +"%Y%m%d%H%M%S")</span>"</span></span><br><span class="line"></span><br><span class="line">USER=<span class="string">"username"</span></span><br><span class="line">PWD=<span class="string">"password"</span></span><br><span class="line">DATABASE=<span class="string">"db_name"</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it <span class="variable">$DOCKER_CONTAINER</span> /usr/bin/mysqldump -u <span class="variable">$USER</span> --password=<span class="variable">$PWD</span> <span class="variable">$DATABASE</span> &gt; <span class="string">"<span class="variable">$DEST</span>/<span class="variable">$&#123;DATABASE&#125;</span>_<span class="variable">$TIME</span>.sql"</span></span><br></pre></td></tr></table></figure><h3 id="restore-script"><a href="#restore-script" class="headerlink" title="restore script"></a>restore script</h3><p><code>cat backup.sql | sudo docker exec -i mysql_container /usr/bin/mysql -u username --password=password db_name</code></p><p><code>mysql -u username -p db_name &lt; /path/to/backup.sql</code></p><p><code>$sh restore.sh backup.sql</code></p><ul><li>在restore時，若有錯誤時，可以加上–force強制執行<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@44197bac7b4c:/<span class="comment"># mysql -u username -p db_name --force &lt; backup.sql</span></span><br><span class="line">Enter password:</span><br><span class="line">ERROR 1064 (42000) at line 1: You have an error <span class="keyword">in</span> your SQL syntax; check the manual that corresponds to your MySQL server version <span class="keyword">for</span> the right syntax to use near <span class="string">'mysqldump: [Warning] Using a password on the command line interface can be insec'</span> at line 1</span><br><span class="line">ERROR 1231 (42000) at line 945: Variable <span class="string">'character_set_client'</span> can<span class="string">'t be set to the value of '</span>NULL<span class="string">'</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># shell script to restore MySQL database to mysql docker container</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"restore <span class="variable">$1</span>..."</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"command: restore.sh backup.sql"</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [ -f <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$1</span> not found."</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">DOCKER_CONTAINER=<span class="string">"mysql"</span></span><br><span class="line"></span><br><span class="line">USER=<span class="string">"username"</span></span><br><span class="line">PWD=<span class="string">"password"</span></span><br><span class="line">DATABASE=<span class="string">"db_name"</span></span><br><span class="line"></span><br><span class="line">cat <span class="variable">$1</span> | docker <span class="built_in">exec</span> -i <span class="variable">$DOCKER_CONTAINER</span> /usr/bin/mysql -u <span class="variable">$USER</span> --password=<span class="variable">$PWD</span> <span class="variable">$DATABASE</span></span><br></pre></td></tr></table></figure><h3 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo crontab -e</span><br><span class="line"><span class="comment"># 每天下午17:00都執行backup_mysql.sh這個script，並把log存到mysql_dumps.log</span></span><br><span class="line">00 17 * * * /home/user/data/backup_mysql.sh &gt; /home/user/data/mysql_dumps.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dict Sorting</title>
      <link href="/posts/3932c779/"/>
      <url>/posts/3932c779/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    d = &#123;<span class="number">2</span>: <span class="number">3</span>, <span class="number">1</span>: <span class="number">89</span>, <span class="number">4</span>: <span class="number">5</span>, <span class="number">3</span>: <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#sort by key</span></span><br><span class="line">    od = OrderedDict(sorted(d.items(), key=<span class="keyword">lambda</span> t: t[<span class="number">0</span>])) <span class="comment"># od = OrderedDict([(1, 89), (2, 3), (3, 0), (4, 5)])</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#sort by value</span></span><br><span class="line">    od = OrderedDict(sorted(d.items(), key=<span class="keyword">lambda</span> t: t[<span class="number">1</span>])) <span class="comment"># od = OrderedDict([(3, 0), (2, 3), (4, 5), (1, 89)])</span></span><br><span class="line"></span><br><span class="line">    list = sorted(d.items()) <span class="comment"># list = [(1, 89), (2, 3), (3, 0), (4, 5)]</span></span><br><span class="line">                             <span class="comment"># items in list are tuple</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>qcow to vdi</title>
      <link href="/posts/9452fe6b/"/>
      <url>/posts/9452fe6b/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install qemu-utils</span><br><span class="line">$ qemu-img convert -O vdi src.qcow2 dst.vdi</span><br><span class="line">$ qemu-img convert -O qcow2 src.vdi dst.qcow2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cmder</title>
      <link href="/posts/38a33950/"/>
      <url>/posts/38a33950/</url>
      
        <content type="html"><![CDATA[<ul><li>修改提示符<br>Edit <code>cmder/vendor/clink.lua</code>，將λ改成$即可</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">42     <span class="built_in">local</span> cmder_prompt = <span class="string">"\x1b[1;32;40m&#123;cwd&#125; &#123;git&#125;&#123;hg&#125;&#123;svn&#125; \n\x1b[1;39;40m&#123;lamb&#125; \x1b[0m"</span></span><br><span class="line">43     <span class="built_in">local</span> lambda = <span class="string">"λ"</span></span><br></pre></td></tr></table></figure><ul><li><p>設定預設路徑<br>Settings =&gt; Startup =&gt; Tasks =&gt; {cmd::Cmder}<br><code>cmd /k &quot;&quot;%ConEmuDir%\..\init.bat&quot; &quot; -new_console:d:D:\GoogleDrive</code><br><img src="/posts/38a33950/cmder.png" alt></p></li><li><p>使用 cmder 操作 SSH<br>ssh <a href="mailto:user@192.168.56.101" target="_blank" rel="noopener">user@192.168.56.101</a><br>scp <a href="mailto:user@192.168.56.101" target="_blank" rel="noopener">user@192.168.56.101</a>:/home/user/file .</p></li><li><p>設定快速連接 SSH</p></li></ul><ol><li>新增 Task<br><img src="/posts/38a33950/image01.png" alt></li><li>設定ssh類別<br>a. <code>ssh::root@192.168.56.101</code><br>b. <code>/icon &quot;%CMDER_ROOT%\icons\cmder.ico&quot;</code><br>c. <code>cmd /c &quot;%ConEmuDir%\..\git-for-windows\usr\bin\ssh root@192.168.56.101 -new_console:d:%USERPROFILE% &quot;-new_console:t:192.168.56.101&quot;</code></li><li>設定 host 位址</li><li>設定 連線資訊<br><img src="/posts/38a33950/image02.png" alt></li><li>連線<br><img src="/posts/38a33950/image03.png" alt></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> cmder </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitLab 建置CI/CD流程</title>
      <link href="/posts/d96b0415/"/>
      <url>/posts/d96b0415/</url>
      
        <content type="html"><![CDATA[<h4 id="建立gitlab-runner"><a href="#建立gitlab-runner" class="headerlink" title="建立gitlab-runner"></a>建立gitlab-runner</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">gitlab-runner:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitlab/gitlab-runner:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitlab-runner</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/timezone:/etc/timezone:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/docker-software/gitlab-runner/config:/etc/gitlab-runner</span></span><br></pre></td></tr></table></figure><h4 id="註冊runner"><a href="#註冊runner" class="headerlink" title="註冊runner"></a>註冊runner</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it gitlab-runner gitlab-runner register</span><br><span class="line">Runtime platform                                    arch=amd64 os=linux pid=165 revision=577f813d version=12.5.0</span><br><span class="line">Running <span class="keyword">in</span> system-mode.                            </span><br><span class="line">                                                   </span><br><span class="line">Please enter the gitlab-ci coordinator URL (e.g. https://gitlab.com/):</span><br><span class="line">http://192.168.56.5/</span><br><span class="line">Please enter the gitlab-ci token <span class="keyword">for</span> this runner:</span><br><span class="line">zS9KDv5_puTCKS32UbyM</span><br><span class="line">Please enter the gitlab-ci description <span class="keyword">for</span> this runner:</span><br><span class="line">[c420481843b4]: <span class="built_in">test</span>-runner</span><br><span class="line">Please enter the gitlab-ci tags <span class="keyword">for</span> this runner (comma separated):</span><br><span class="line">docker</span><br><span class="line">Registering runner... succeeded                     runner=zS9KDv5_</span><br><span class="line">Please enter the executor: shell, ssh, virtualbox, docker-ssh+machine, kubernetes, custom, docker-ssh, parallels, docker, docker+machine:</span><br><span class="line">docker</span><br><span class="line">Please enter the default Docker image (e.g. ruby:2.6): <span class="comment">#當.gitlab-ci.yml沒有指定image時，預設要用哪個docker image</span></span><br><span class="line">docker:19.03.5</span><br><span class="line">Runner registered successfully. Feel free to start it, but <span class="keyword">if</span> it<span class="string">'s running already the config should be automatically reloaded!</span></span><br></pre></td></tr></table></figure><ol><li>Please enter the gitlab-ci coordinator URL<br>輸入gitlab網站的URL</li><li>Please enter the gitlab-ci token for this runner<br>在gitlab CI/CD settings中，Specific/Shared Runners的identification</li><li>Please enter the gitlab-ci description for this runner<br>指定runner的名稱</li><li>Please enter the gitlab-ci tags for this runner<br>指定此runner的tag，在.gitlab-ci.yml中，必須指定對應的tag，才能使用此runner</li></ol><h4 id="docker-image-release-page"><a href="#docker-image-release-page" class="headerlink" title="docker image release page"></a>docker image release page</h4><p><a href="https://github.com/docker/docker-ce/releases" target="_blank" rel="noopener">https://github.com/docker/docker-ce/releases</a></p><h4 id="完成之後，config-toml內容如下"><a href="#完成之後，config-toml內容如下" class="headerlink" title="完成之後，config.toml內容如下"></a>完成之後，config.toml內容如下</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ cat /opt/docker-software/gitlab-runner/config/config.toml</span><br><span class="line">concurrent = 1</span><br><span class="line">check_interval = 0</span><br><span class="line"></span><br><span class="line">[session_server]</span><br><span class="line">  session_timeout = 1800</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = <span class="string">"test-runner"</span></span><br><span class="line">  url = <span class="string">"http://192.168.56.5/"</span></span><br><span class="line">  token = <span class="string">"zS9KDv5_puTCKS32UbyM"</span></span><br><span class="line">  executor = <span class="string">"docker"</span></span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.docker]</span><br><span class="line">    tls_verify = <span class="literal">false</span></span><br><span class="line">    image = <span class="string">"docker:19.03.5"</span></span><br><span class="line">    privileged = <span class="literal">false</span></span><br><span class="line">    disable_entrypoint_overwrite = <span class="literal">false</span></span><br><span class="line">    oom_kill_disable = <span class="literal">false</span></span><br><span class="line">    disable_cache = <span class="literal">false</span></span><br><span class="line">    volumes = [<span class="string">"/cache"</span>]</span><br><span class="line">    shm_size = 0</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br></pre></td></tr></table></figure><h4 id="remove-Runner"><a href="#remove-Runner" class="headerlink" title="remove Runner"></a>remove Runner</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it gitlab-runner gitlab-runner unregister --all-runners</span><br><span class="line">$ docker <span class="built_in">exec</span> -it gitlab-runner gitlab-runner unregister -n <span class="built_in">test</span>-runner</span><br></pre></td></tr></table></figure><h4 id="Trouble-Shooting"><a href="#Trouble-Shooting" class="headerlink" title="Trouble Shooting"></a>Trouble Shooting</h4><ol><li><p>Cannot connect to the Docker daemon at tcp://docker:2375. Is the docker daemon running?<br><code>method 1</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim .gitlab-ci.yml</span><br><span class="line">variables:</span><br><span class="line">  DOCKER_TLS_CERTDIR: &quot;&quot;</span><br></pre></td></tr></table></figure><p><code>method 2</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim config.toml</span><br><span class="line">[[runners]]</span><br><span class="line">  environment = [&quot;DOCKER_TLS_CERTDIR=&quot;]</span><br></pre></td></tr></table></figure></li><li><p>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?<br>執行docker:dind，gitlab-runner config.toml中的privileged要設定為true，否則會有error</p></li><li><p>docker image download failed</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Step 1/13 : FROM 10.36.94.120:50000/kaluta:1.0.0</span><br><span class="line">Get https://10.36.94.120:50000/v2/: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure><p>在gitlab-runner config.toml中的volume要加入/etc/docker/daemon.json的設定<br>volumes = [“/cache”, “/etc/docker/daemon.json:/etc/docker/daemon.json”]</p></li><li><p>/bin/sh: eval: line 87: docker-compose: not found</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vim .gitlab-ci.yml</span><br><span class="line">build:</span><br><span class="line">  stage: build</span><br><span class="line">  before_script:</span><br><span class="line">    - apk add --update libffi-dev openssl-dev py-pip python python-dev build-base</span><br><span class="line">    - pip install docker-compose</span><br></pre></td></tr></table></figure></li></ol><h4 id="final-config-toml"><a href="#final-config-toml" class="headerlink" title="final config.toml"></a>final config.toml</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ cat /opt/docker-software/gitlab-runner/config/config.toml</span><br><span class="line">concurrent = 1</span><br><span class="line">check_interval = 0</span><br><span class="line"></span><br><span class="line">[session_server]</span><br><span class="line">  session_timeout = 1800</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = <span class="string">"test-runner"</span></span><br><span class="line">  url = <span class="string">"http://192.168.56.5/"</span></span><br><span class="line">  token = <span class="string">"zS9KDv5_puTCKS32UbyM"</span></span><br><span class="line">  executor = <span class="string">"docker"</span></span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.docker]</span><br><span class="line">    tls_verify = <span class="literal">false</span></span><br><span class="line">    image = <span class="string">"docker:19.03.5"</span></span><br><span class="line">    privileged = <span class="literal">true</span></span><br><span class="line">    disable_entrypoint_overwrite = <span class="literal">false</span></span><br><span class="line">    oom_kill_disable = <span class="literal">false</span></span><br><span class="line">    disable_cache = <span class="literal">false</span></span><br><span class="line">    volumes = [<span class="string">"/cache"</span>, <span class="string">"/etc/docker/daemon.json:/etc/docker/daemon.json"</span>]</span><br><span class="line">    shm_size = 0</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br></pre></td></tr></table></figure><h4 id="建立Base-image"><a href="#建立Base-image" class="headerlink" title="建立Base image"></a>建立Base image</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM docker:19.03.5</span><br><span class="line"></span><br><span class="line">ADD daemon.json /etc/docker/daemon.json</span><br><span class="line">RUN apk add --update libffi-dev openssl-dev py-pip python python-dev build-base rsync git xz sshpass openssh-client &amp;&amp; \</span><br><span class="line">    pip install docker-compose</span><br></pre></td></tr></table></figure><ol><li>在.gitlab-ci.yml中可以直接使用這個base image <code>image: 10.36.94.120:50000/docker:19.03.5</code>，這樣可以省略安裝package的步驟</li><li>在config.toml中可以不用設定volumes: “/etc/docker/daemon.json:/etc/docker/daemon.json”</li></ol><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><ol><li>GitLab 的 build 都是在 Docker 上執行的，因此一開始會需要定義 image 名稱，而它將會成為下面執行 build 的環境</li><li>artifacts 會把裡面編譯或程式的產出物存放起來，提供介面給其他需要的人使用</li><li>dependencies 設定意思是指，test job 要取用 build job 的 artifacts，每個 job 都是獨立的 container ，互不相關，因此要靠這些設定來傳遞 artifacts</li><li>image 和 service 雖然有全域定義，但也能 job 各自定義</li><li>services:<ul><li>docker:dind<br>用 docker run 啟動 docker:dind 並把上面定義的 image 起的容器連結至 docker:dind</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> GitLab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitLab </tag>
            
            <tag> CICD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose.yml for GitLab</title>
      <link href="/posts/cb549ab5/"/>
      <url>/posts/cb549ab5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span> </span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">gitlab:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitlab/gitlab-ce:latest</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.5</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitlab</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/timezone:/etc/timezone:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/docker-software/gitlab/config:/etc/gitlab</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/docker-software/gitlab/logs:/var/log/gitlab</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/docker-software/gitlab/data:/var/opt/gitlab</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">443</span><span class="string">:443</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">22</span><span class="string">:22</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> GitLab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> GitLab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitBook文件轉換成pdf</title>
      <link href="/posts/8931cf79/"/>
      <url>/posts/8931cf79/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install npm</span><br><span class="line">sudo npm install -g gitbook-cli</span><br><span class="line">sudo ln -s /usr/bin/nodejs /usr/bin/node</span><br><span class="line">sudo apt-get install calibre</span><br><span class="line">sudo npm install gitbook-pdf -g</span><br><span class="line">gitbook pdf .</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> GitBook </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitBook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyinstaller</title>
      <link href="/posts/d585e6aa/"/>
      <url>/posts/d585e6aa/</url>
      
        <content type="html"><![CDATA[<h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install pyinstaller</span><br></pre></td></tr></table></figure><h1 id="生成exe檔"><a href="#生成exe檔" class="headerlink" title="生成exe檔"></a>生成exe檔</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pyinstaller &lt;config&gt; main.py</span><br></pre></td></tr></table></figure><h1 id="指定spec文件"><a href="#指定spec文件" class="headerlink" title="指定spec文件"></a>指定spec文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pyinstaller main.spec main.py</span><br></pre></td></tr></table></figure><h1 id="config"><a href="#config" class="headerlink" title="config"></a>config</h1><p><code>--noconsole</code>: 執行exe檔時，不顯示console視窗<br><code>--onefile</code>: 打包成單一個exe檔案<br><code>--icon</code>: 指定exe檔案的icon</p><h1 id="spec文件"><a href="#spec文件" class="headerlink" title="spec文件"></a>spec文件</h1><ol><li>控制pyinstall打包，以及程式run time執行時的配置</li><li>在執行pyinstall會根據指令的config自動建立，也可以透過以下指令單獨生成spec檔案<br>pyi-makespec <config> main.py</config></li><li>當專案中需要使用到額外的資源檔案時，必須手動編輯spec文件</li></ol><h1 id="steps-for-generate-exe-file"><a href="#steps-for-generate-exe-file" class="headerlink" title="steps for generate exe file:"></a>steps for generate exe file:</h1><ol><li><code>pyi-makespec --onefile --noconsole --icon D:\\FaceDetection\\data\fd.ico main.py</code></li><li>edit main.spec，添加static file to datas<br><code>a = Analysis(..., datas=[(&#39;D:\\FaceDetection\\data&#39;, &#39;data&#39;)], ...)</code><br>Note: datas中的資料為一tuple值，第一個欄位為檔案在系統中的路徑，第二個欄位為在打包環境中的路徑</li><li><code>pyinstaller main.spec main.py</code></li></ol><h1 id="sample-for-spec文件"><a href="#sample-for-spec文件" class="headerlink" title="sample for spec文件"></a>sample for spec文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- mode: python ; coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">block_cipher = None</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = Analysis([<span class="string">'main.py'</span>],</span><br><span class="line">             pathex=[<span class="string">'D:\\FaceDetection'</span>],</span><br><span class="line">             binaries=[],</span><br><span class="line">             datas=[(<span class="string">'D:\\FaceDetection\\data'</span>, <span class="string">'data'</span>)],</span><br><span class="line">             hiddenimports=[],</span><br><span class="line">             hookspath=[],</span><br><span class="line">             runtime_hooks=[],</span><br><span class="line">             excludes=[],</span><br><span class="line">             win_no_prefer_redirects=False,</span><br><span class="line">             win_private_assemblies=False,</span><br><span class="line">             cipher=block_cipher,</span><br><span class="line">             noarchive=False)</span><br><span class="line">pyz = PYZ(a.pure, a.zipped_data,</span><br><span class="line">             cipher=block_cipher)</span><br><span class="line">exe = EXE(pyz,</span><br><span class="line">          a.scripts,</span><br><span class="line">          a.binaries,</span><br><span class="line">          a.zipfiles,</span><br><span class="line">          a.datas,</span><br><span class="line">          [],</span><br><span class="line">          name=<span class="string">'main'</span>,</span><br><span class="line">          debug=False,</span><br><span class="line">          bootloader_ignore_signals=False,</span><br><span class="line">          strip=False,</span><br><span class="line">          upx=True,</span><br><span class="line">          upx_exclude=[],</span><br><span class="line">          runtime_tmpdir=None,</span><br><span class="line">          console=False , icon=<span class="string">'D:\\FaceDetection\\data\\fd.ico'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deploy a Docker registry server</title>
      <link href="/posts/410ebdbd/"/>
      <url>/posts/410ebdbd/</url>
      
        <content type="html"><![CDATA[<h1 id="pull-registry-image"><a href="#pull-registry-image" class="headerlink" title="pull registry image"></a>pull registry image</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  registry:</span><br><span class="line">    restart: always</span><br><span class="line">    image: registry:2</span><br><span class="line">    container_name: registry</span><br><span class="line">    ports:</span><br><span class="line">      - 5000:5000</span><br><span class="line">    volumes:</span><br><span class="line">      - /etc/timezone:/etc/timezone:ro</span><br><span class="line">      - /etc/localtime:/etc/localtime:ro</span><br><span class="line">      - /opt/docker-software/registry:/var/lib/registry</span><br><span class="line">    environment:</span><br><span class="line">      - REGISTRY_STORAGE_DELETE_ENABLED=<span class="string">"true"</span></span><br></pre></td></tr></table></figure><h1 id="push-pull-images"><a href="#push-pull-images" class="headerlink" title="push/pull images"></a>push/pull images</h1><p>image push前必須先tag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker tag myimage host:5000/myimage:1.0.0</span><br><span class="line">$ docker push host:5000/myimage:1.0.0</span><br><span class="line">$ docker image remove host:5000/myimage:1.0.0 <span class="comment"># remove the locally-cached host:5000/myimage:1.0.0</span></span><br><span class="line">$ docker pull host:5000/myimage:1.0.0</span><br></pre></td></tr></table></figure><h1 id="trouble-shooting"><a href="#trouble-shooting" class="headerlink" title="trouble shooting"></a>trouble shooting</h1><p>error message when push images to registry server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The push refers to repository [host:5000/myimage]</span><br><span class="line">Get https://host:5000/v2/: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure><ul><li>Insecure Registries<br>If this registry is insecure and doesn’t hide behing SSL certificates then you will need to configure your Docker client to allow pushing to this insecure registry.<br>Edit or you may even need to create the following file on your Linux server:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/docker/daemon.json</span><br></pre></td></tr></table></figure>And save the following content:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"insecure-registries"</span>: [<span class="string">"host:5000"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>You will need to restart your Docker service before these changes will take effect.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service docker restart</span><br></pre></td></tr></table></figure></li></ul><h1 id="get-image-list-from-docker-registry"><a href="#get-image-list-from-docker-registry" class="headerlink" title="get image list from docker registry"></a>get image list from docker registry</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET http://host:5000/v2/_catalog | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"repositories"</span>: [</span><br><span class="line">    <span class="string">"myimage"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X GET http://host:5000/v2/&lt;myimage&gt;/tags/list | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"myimage"</span>,</span><br><span class="line">  <span class="string">"tags"</span>: [</span><br><span class="line">    <span class="string">"1.0.0"</span>,</span><br><span class="line">    <span class="string">"1.1.0"</span>,</span><br><span class="line">    <span class="string">"1.2.0"</span>,</span><br><span class="line">    <span class="string">"1.3.0"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="delete-images-in-registry-server"><a href="#delete-images-in-registry-server" class="headerlink" title="delete images in registry server"></a>delete images in registry server</h1><ol><li>delete using registry REST API</li></ol><ul><li>REGISTRY_STORAGE_DELETE_ENABLED必須設定為true，DELETE API才支援</li><li>DELETE API僅會刪除link資料，影響API查詢的結果，但實際上的layer data還是存在，必須再執行garbage-collect才能刪除</li><li>一定要設定header的Accept為application/vnd.docker.distribution.manifest.v2+json，收到的Content才會是對的<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ curl -I -H <span class="string">"Accept: application/vnd.docker.distribution.manifest.v2+json"</span> http://host:5000/v2/&lt;myimage&gt;/manifests/&lt;tag&gt;</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Content-Length: 1362</span><br><span class="line">Content-Type: application/vnd.docker.distribution.manifest.v2+json</span><br><span class="line">Docker-Content-Digest: sha256:7185dc9a13a5178f5d33654ebe5cf5982e51c9bfff0b1e227e3735dffffe7226</span><br><span class="line">Docker-Distribution-Api-Version: registry/2.0</span><br><span class="line">Etag: <span class="string">"sha256:7185dc9a13a5178f5d33654ebe5cf5982e51c9bfff0b1e227e3735dffffe7226"</span></span><br><span class="line">X-Content-Type-Options: nosniff</span><br><span class="line">Date: Tue, 26 Nov 2019 13:47:34 GMT</span><br><span class="line"></span><br><span class="line">$ curl -v -X DELETE http://host:5000/v2/&lt;myimage&gt;/manifests/sha256:7185dc9a13a5178f5d33654ebe5cf5982e51c9bfff0b1e227e3735dffffe7226</span><br><span class="line">$ docker <span class="built_in">exec</span> -it registry registry garbage-collect /etc/docker/registry/config.yml</span><br><span class="line">$ docker restart registry</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>delete in the file system<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it registry sh</span><br><span class="line">/ <span class="comment"># export NAME="&lt;myimage&gt;"</span></span><br><span class="line">/ <span class="comment"># export VERSION="&lt;tag&gt;"</span></span><br><span class="line">/ <span class="comment"># cd /var/lib/registry/docker/registry/v2</span></span><br><span class="line">/var/lib/registry/docker/registry/v2 <span class="comment"># find . | grep `ls ./repositories/$NAME/_manifests/tags/$VERSION/index/sha256`| xargs rm -rf $1</span></span><br><span class="line">/var/lib/registry/docker/registry/v2 <span class="comment"># rm -rf ./repositories/$NAME/_manifests/tags/$VERSION</span></span><br><span class="line">/var/lib/registry/docker/registry/v2 <span class="comment"># registry garbage-collect /etc/docker/registry/config.yml</span></span><br><span class="line">/ <span class="comment"># exit</span></span><br><span class="line">$ docker restart registry</span><br></pre></td></tr></table></figure></li></ol><h1 id="Cleaning-up-the-Registry"><a href="#Cleaning-up-the-Registry" class="headerlink" title="Cleaning up the Registry"></a>Cleaning up the Registry</h1><p>When you delete an image from the registry, this won’t actually remove the blob layers as you might expect. For this reason you have to run this command on your docker registry host to perform garbage collection:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it registry registry garbage-collect /etc/docker/registry/config.yml</span><br></pre></td></tr></table></figure><p>And if you wanted to make a cron job that runs every 30 mins:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0,30 * * * * docker <span class="built_in">exec</span> -it registry registry garbage-collect /etc/docker/registry/config.yml &gt;&gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h1 id="GUI-tool-via-docker-image"><a href="#GUI-tool-via-docker-image" class="headerlink" title="GUI tool via docker image"></a>GUI tool via docker image</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 8080:8080 --name registry-web -e REGISTRY_URL=http://host:5000/v2 hyper/docker-registry-web</span><br></pre></td></tr></table></figure><ul><li>by docker-compose.yml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  registry-web:</span><br><span class="line">    restart: always</span><br><span class="line">    image: hyper/docker-registry-web</span><br><span class="line">    container_name: registry-web</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8080</span><br><span class="line">    volumes:</span><br><span class="line">      - /etc/timezone:/etc/timezone:ro</span><br><span class="line">      - /etc/localtime:/etc/localtime:ro</span><br><span class="line">    environment:</span><br><span class="line">      - REGISTRY_URL=http://host:5000/v2</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>設置ubuntu環境</title>
      <link href="/posts/b4ce8caa/"/>
      <url>/posts/b4ce8caa/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Ubuntu 16.04.1 Server (64-bit)<br><a href="http://old-releases.ubuntu.com/releases/16.04.1/ubuntu-16.04.1-server-amd64.iso" target="_blank" rel="noopener">http://old-releases.ubuntu.com/releases/16.04.1/ubuntu-16.04.1-server-amd64.iso</a></p></li><li><p>Ubuntu 16.04.6 Server (64-bit)<br><a href="http://releases.ubuntu.com/16.04/ubuntu-16.04.6-server-amd64.iso" target="_blank" rel="noopener">http://releases.ubuntu.com/16.04/ubuntu-16.04.6-server-amd64.iso</a></p></li></ul><h1 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h1><ol><li>如果VM的網路卡沒有「僅限主機」介面卡可以用，必須先手動建立<br><code>VirtualBox - 全域工具 - 主機網路管理員</code><br>建立新的network interface<br>可以手動設定ip, f.g. ip: 192.168.199.1, mask: 255.255.255.0</li><li>配置網路<br>a. 介面卡1: NAT<br>主要是建立VM的對外網路<br>b. 介面卡2: 「僅限主機」介面卡<br>主要是建立VM跟Windows之間的，可以進行溝通的網路</li></ol><h1 id="Environment-Setup"><a href="#Environment-Setup" class="headerlink" title="Environment Setup"></a>Environment Setup</h1><ol><li>General settings</li><li>Python</li><li>Docker</li></ol><h3 id="1-General-Settings"><a href="#1-General-Settings" class="headerlink" title="1. General Settings"></a>1. General Settings</h3><ul><li><p>Check the network interface of enp0s8</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ ifconfig -a</span><br></pre></td></tr></table></figure><p><img src="/posts/b4ce8caa/network01.jpg" alt></p></li><li><p>If there is no ip address, set dhcp for enp0s8</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo vim /etc/network/interfaces</span><br></pre></td></tr></table></figure></li><li><p>Add following commands at the bottom</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto enp0s8</span><br><span class="line">iface enp0s8 inet dhcp</span><br></pre></td></tr></table></figure></li><li><p>Or, you can set static ip address</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto enp0s8</span><br><span class="line">iface enp0s8 inet static</span><br><span class="line">address 192.168.56.3</span><br></pre></td></tr></table></figure></li><li><p>Restart networking and check enp0s8 again</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo service networking restart</span><br><span class="line">user@ubuntu:~$ ifconfig -a</span><br></pre></td></tr></table></figure><p><img src="/posts/b4ce8caa/network02.jpg" alt></p></li><li><p>Install ssh and then you can connect to vm via terminal tools</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo apt-get update</span><br><span class="line">user@ubuntu:~$ sudo apt-get install ssh</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-Python"><a href="#2-Python" class="headerlink" title="2. Python"></a>2. Python</h3><ul><li><p>Install python3.6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line">user@ubuntu:~$ sudo apt-get update</span><br><span class="line">user@ubuntu:~$ sudo apt-get install python3.6</span><br></pre></td></tr></table></figure></li><li><p>Create update-alternatives list for python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.5 1</span><br><span class="line">update-alternatives: using /usr/bin/python3.5 to provide /usr/bin/python (python) <span class="keyword">in</span> auto mode</span><br><span class="line">user@ubuntu:~$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2</span><br><span class="line">update-alternatives: using /usr/bin/python3.6 to provide /usr/bin/python (python) <span class="keyword">in</span> auto mode</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ update-alternatives --list python</span><br><span class="line">/usr/bin/python3.5</span><br><span class="line">/usr/bin/python3.6</span><br></pre></td></tr></table></figure></li><li><p>Set default command of python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo update-alternatives --config python</span><br><span class="line">There are 2 choices <span class="keyword">for</span> the alternative python (providing /usr/bin/python).</span><br><span class="line"></span><br><span class="line">  Selection    Path                Priority   Status</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /usr/bin/python3.6   2         auto mode</span><br><span class="line">  1            /usr/bin/python3.5   1         manual mode</span><br><span class="line">  2            /usr/bin/python3.6   2         manual mode</span><br><span class="line"></span><br><span class="line">Press &lt;enter&gt; to keep the current choice[*], or <span class="built_in">type</span> selection number: 2</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ python -V</span><br><span class="line">Python 3.6.9</span><br></pre></td></tr></table></figure></li><li><p>Install pip for python3.6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ curl https://bootstrap.pypa.io/get-pip.py | sudo python3.6</span><br></pre></td></tr></table></figure></li><li><p>Install virtualenv or virtualenvwrapper<br>There are two types of environment control for python.<br><code>virtualenv</code>: isolated for each project<br><code>virtualenvwrapper</code>: you can share environment settings between different projects</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ pip install virtualenv --user</span><br><span class="line">user@ubuntu:~$ pip install virtualenvwrapper --user</span><br></pre></td></tr></table></figure></li><li><p>Install related packages</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo apt-get install make</span><br><span class="line">user@ubuntu:~$ sudo apt-get install gcc</span><br><span class="line">user@ubuntu:~$ sudo apt-get install libssl-dev</span><br><span class="line">user@ubuntu:~$ sudo apt-get install python3.6-dev</span><br><span class="line">user@ubuntu:~$ sudo apt-get install libmysqlclient-dev</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-Docker"><a href="#3-Docker" class="headerlink" title="3. Docker"></a>3. Docker</h3><ul><li><p>Install docker<br>You can install docker online or via deb files</p></li><li><p>Online install</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ curl -sSL https://get.docker.com/ | sh</span><br><span class="line"><span class="comment"># Executing docker install script, commit: f45d7c11389849ff46a6b4d94e0dd1ffebca32c1</span></span><br><span class="line">+ sudo -E sh -c apt-get update -qq &gt;/dev/null</span><br><span class="line">+ sudo -E sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl &gt;/dev/null</span><br><span class="line">+ sudo -E sh -c curl -fsSL <span class="string">"https://download.docker.com/linux/ubuntu/gpg"</span> | apt-key add -qq - &gt;/dev/null</span><br><span class="line">+ sudo -E sh -c <span class="built_in">echo</span> <span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"</span> &gt; /etc/apt/sources.list.d/docker.list</span><br><span class="line">+ sudo -E sh -c apt-get update -qq &gt;/dev/null</span><br><span class="line">+ [ -n  ]</span><br><span class="line">+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce &gt;/dev/null</span><br><span class="line">+ sudo -E sh -c docker version</span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           19.03.5</span><br><span class="line"> API version:       1.40</span><br><span class="line"> Go version:        go1.12.12</span><br><span class="line"> Git commit:        633a0ea838</span><br><span class="line"> Built:             Wed Nov 13 07:50:12 2019</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Experimental:      <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          19.03.5</span><br><span class="line">  API version:      1.40 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.12.12</span><br><span class="line">  Git commit:       633a0ea838</span><br><span class="line">  Built:            Wed Nov 13 07:48:43 2019</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.2.10</span><br><span class="line">  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.0.0-rc8+dev</span><br><span class="line">  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.18.0</span><br><span class="line">  GitCommit:        fec3683</span><br><span class="line">If you would like to use Docker as a non-root user, you should now consider</span><br><span class="line">adding your user to the <span class="string">"docker"</span> group with something like:</span><br><span class="line"></span><br><span class="line">  sudo usermod -aG docker user</span><br><span class="line"></span><br><span class="line">Remember that you will have to <span class="built_in">log</span> out and back <span class="keyword">in</span> <span class="keyword">for</span> this to take effect!</span><br><span class="line"></span><br><span class="line">WARNING: Adding a user to the <span class="string">"docker"</span> group will grant the ability to run</span><br><span class="line">         containers <span class="built_in">which</span> can be used to obtain root privileges on the</span><br><span class="line">         docker host.</span><br><span class="line">         Refer to https://docs.docker.com/engine/security/security/<span class="comment">#docker-daemon-attack-surface</span></span><br><span class="line">         <span class="keyword">for</span> more information.</span><br></pre></td></tr></table></figure></li><li><p>deb file<br><a href="https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/" target="_blank" rel="noopener">https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ wget --no-check-certificate https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/containerd.io_1.2.6-3_amd64.deb</span><br><span class="line">user@ubuntu:~$ wget --no-check-certificate https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker-ce-cli_19.03.4~3-0~ubuntu-xenial_amd64.deb</span><br><span class="line">user@ubuntu:~$ wget --no-check-certificate https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker-ce_19.03.4~3-0~ubuntu-xenial_amd64.deb</span><br><span class="line">user@ubuntu:~$ sudo dpkg -i containerd.io_1.2.6-3_amd64.deb</span><br><span class="line">user@ubuntu:~$ sudo dpkg -i docker-ce-cli_19.03.4~3-0~ubuntu-xenial_amd64.deb</span><br><span class="line">user@ubuntu:~$ sudo dpkg -i docker-ce_19.03.4~3-0~ubuntu-xenial_amd64.deb</span><br><span class="line">user@ubuntu:~$ docker --version</span><br><span class="line">Docker version 19.03.4, build 9013bf583a</span><br></pre></td></tr></table></figure></li><li><p>Install docker-compose</p><h4 id="release-page"><a href="#release-page" class="headerlink" title="release page"></a>release page</h4><p><a href="https://github.com/docker/compose/releases" target="_blank" rel="noopener">https://github.com/docker/compose/releases</a></p></li></ul><h4 id="Install-docker-compose-1-22-0-on-ubuntu"><a href="#Install-docker-compose-1-22-0-on-ubuntu" class="headerlink" title="Install docker-compose (1.22.0) on ubuntu"></a>Install docker-compose (1.22.0) on ubuntu</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">$ curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">$ chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">$ docker-compose --version</span><br><span class="line">docker-compose version 1.22.0, build f46880fe</span><br></pre></td></tr></table></figure><ul><li>Remove docker<ul><li>查看系統中有安裝多少跟docker有關的package<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> dpkg -l | grep -i docker</span></span><br></pre></td></tr></table></figure></li><li>remove all packages about docker<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get purge -y docker-ce</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get autoremove -y --purge docker-ce</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get autoclean</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo rm -rf /var/lib/docker</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown to HTML</title>
      <link href="/posts/6ca74c1e/"/>
      <url>/posts/6ca74c1e/</url>
      
        <content type="html"><![CDATA[<ol><li>在Sublime Text 3上，安裝MarkdownEditing</li></ol><ul><li>Preferences-&gt;Package Control<br><img src="/posts/6ca74c1e/image01.jpg" alt></li><li>輸入Install Package<br><img src="/posts/6ca74c1e/image02.jpg" alt></li><li>接著輸入MarkdownEditing，即可安裝完成<br><img src="/posts/6ca74c1e/image03.jpg" alt><br><img src="/posts/6ca74c1e/image04.jpg" alt></li></ul><ol start="2"><li>轉換<br>在欲轉換的文件中，按下fn+F7，即可生成相對應的HTML檔案<br><img src="/posts/6ca74c1e/image05.jpg" alt></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Sublime Text 3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>curl指令</title>
      <link href="/posts/7de9a293/"/>
      <url>/posts/7de9a293/</url>
      
        <content type="html"><![CDATA[<h1 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h1><ul><li><code>curl -X GET http://localhost:80/api/get</code></li><li><code>curl -X GET &quot;http://localhost:80/api/get?param1=abc&amp;param2=123&quot;</code></li></ul><h1 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h1><ul><li>form<ul><li><code>curl -X POST -d &quot;username=admin&amp;password=123456&quot; http://localhost:80/auth/login</code></li></ul></li><li>json<ul><li><code>curl -H &quot;Content-Type:application/json&quot; -X POST -d &#39;{&quot;username&quot;: &quot;admin&quot;, &quot;password&quot;: &quot;123456&quot;}&#39; http://localhost:80/auth/login</code></li></ul></li><li><code>curl -X POST -F &quot;image=@/home/user/test.jpg&quot; http://localhost:80/upload/image</code></li><li><code>curl -X POST -F &quot;image=@/home/user/test.jpg&quot; -F &quot;token=123456&quot; http://localhost:80/upload/image</code></li><li><code>curl -X POST -H &#39;Content-Type: application/json&#39; -d &#39;{&quot;username&quot;: &quot;test&quot;, &quot;password&quot;:&quot;123456&quot;, &quot;list_data&quot;:[1, 2]}&#39; http://localhost:80/api/post</code></li><li><code>curl -X POST --data-urlencode &#39;photo=&#39;&quot;$(base64 image.jpg)&quot;&#39;&#39; -d &quot;name=Nick&quot; http://localhost:80/upload/data</code></li><li><code>curl -X POST -H &quot;Content-Type: application/json&quot; -d @/home/user/data.json http://localhost:80/api/file/payload</code></li></ul><h1 id="PUT"><a href="#PUT" class="headerlink" title="PUT"></a>PUT</h1><ul><li><code>curl -X PUT -d &quot;data=test&quot; http://localhost:80/api/put</code></li></ul><h1 id="Delete"><a href="#Delete" class="headerlink" title="Delete"></a>Delete</h1><ul><li><code>curl -X DELETE http://localhost:80/api/delete</code></li></ul><h1 id="Download-file"><a href="#Download-file" class="headerlink" title="Download file"></a>Download file</h1><ul><li><code>curl -X GET &quot;http://localhost:80/api/download/data&quot; --output file.ext</code></li></ul><h1 id="Show-headers"><a href="#Show-headers" class="headerlink" title="Show headers"></a>Show headers</h1><ul><li><code>curl -i -X POST -d &#39;username=admin&amp;password=123456&#39; http://localhost:80/auth/login</code><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.10.3 (Ubuntu)</span><br><span class="line">Date: Mon, 03 Jun 2019 02:43:54 GMT</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 1062</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Set-Cookie: session=3c8d8462-8590-435e-9227-485f96e4bec5; HttpOnly; Path=/</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"code"</span>: 0,</span><br><span class="line">  <span class="string">"data"</span>: <span class="string">"..."</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>Get further information from curl<ul><li>simple mode<br><code>$ curl -w &#39;Total: %{time_total}s\n&#39; -o /dev/null -s http://ip:port/api/</code></li><li>Create a new file, curl-format.txt, and paste in:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   time_namelookup:  %&#123;time_namelookup&#125;s\n</span><br><span class="line">      time_connect:  %&#123;time_connect&#125;s\n</span><br><span class="line">   time_appconnect:  %&#123;time_appconnect&#125;s\n</span><br><span class="line">  time_pretransfer:  %&#123;time_pretransfer&#125;s\n</span><br><span class="line">     time_redirect:  %&#123;time_redirect&#125;s\n</span><br><span class="line">time_starttransfer:  %&#123;time_starttransfer&#125;s\n</span><br><span class="line">                   ----------\n</span><br><span class="line">        time_total:  %&#123;time_total&#125;s\n</span><br></pre></td></tr></table></figure></li><li>Make a request<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -w &quot;@curl-format.txt&quot; -o /dev/null -s &quot;http://ip:port/api/&quot;</span><br><span class="line">-w &quot;@curl-format.txt&quot; tells cURL to use our format file</span><br><span class="line">-o /dev/null redirects the output of the request to /dev/null</span><br><span class="line">-s tells cURL not to show a progress meter</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> curl </category>
          
      </categories>
      
      
        <tags>
            
            <tag> curl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsonify v.s. json.dumps</title>
      <link href="/posts/39e057a1/"/>
      <url>/posts/39e057a1/</url>
      
        <content type="html"><![CDATA[<p>主要的差異在於response的Content-Type不同</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, jsonify</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">  </span><br><span class="line"><span class="meta">@app.route('/test', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"code"</span>: <span class="number">0</span>, <span class="string">"data"</span>: <span class="string">"test"</span>&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:~$ curl -i -X GET http://localhost:5000/<span class="built_in">test</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.4.6 (Ubuntu)</span><br><span class="line">Date: Mon, 11 Nov 2019 09:14:21 GMT</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 180</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Access-Control-Allow-Origin: *</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">"code"</span>:0,<span class="string">"data"</span>:<span class="string">"test"</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">  </span><br><span class="line"><span class="meta">@app.route('/test', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> json.dumps(&#123;<span class="string">"code"</span>: <span class="number">0</span>, <span class="string">"data"</span>: <span class="string">"test"</span>&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:~$ curl -i -X GET http://localhost:5000/<span class="built_in">test</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.4.6 (Ubuntu)</span><br><span class="line">Date: Mon, 11 Nov 2019 09:17:14 GMT</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Content-Length: 198</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Access-Control-Allow-Origin: *</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">"code"</span>:0,<span class="string">"data"</span>:<span class="string">"test"</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim常用指令</title>
      <link href="/posts/d436f53/"/>
      <url>/posts/d436f53/</url>
      
        <content type="html"><![CDATA[<h1 id="config配置"><a href="#config配置" class="headerlink" title="config配置"></a>config配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">:set nu &quot; 顯示行數</span><br><span class="line">:set nonu &quot; 不顯示行數</span><br><span class="line"></span><br><span class="line">:set wrap &quot; 自動斷行</span><br><span class="line">:set nowrap &quot; 不自動斷行</span><br><span class="line"></span><br><span class="line">:set hlsearch &quot; highlight搜尋字串</span><br><span class="line"></span><br><span class="line">:set ic &quot; 搜尋字串不分大小寫</span><br><span class="line">:set noic &quot; 搜尋字串區分大小寫</span><br></pre></td></tr></table></figure><h1 id="用-user-打開了-root-權限的檔案，編輯之後無法儲存"><a href="#用-user-打開了-root-權限的檔案，編輯之後無法儲存" class="headerlink" title="用 user 打開了 root 權限的檔案，編輯之後無法儲存"></a>用 user 打開了 root 權限的檔案，編輯之後無法儲存</h1><p>用以下指令，即可儲存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:w !sudo tee %</span><br></pre></td></tr></table></figure><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><ul><li>切換到編輯模式<br><code>i</code></li><li>往下插入一列，並切換到編輯模式<br><code>o</code></li><li>undo<br><code>u</code></li><li>redo<br><code>ctrl+r</code></li><li>跳轉到相配對的括號<br><code>%</code></li><li>跳到第一列<br><code>gg</code></li><li>跳到最後一列<br><code>G (shift+g)</code></li><li>跳到指令列<br><code>列號 + G (shift+g)</code></li><li>跳轉到局部變量的宣告處<br><code>gD</code></li><li>搜尋字串<br><code>/search_string</code><ul><li>向上搜尋<br><code>N (shift+n)</code></li><li>向下搜尋<br><code>n</code></li></ul></li><li>批次取代字串<ul><li>將所有 “search_from” 的字串替換成 “replace_to”<br><code>:%s/search_from/replace_to/g</code></li><li>忽略大小寫差異<br><code>:%s/search_from/replace_to/gi</code></li><li>只取代指定行數範圍的字串<br><code>:50,100s/search_from/replace_to/g</code></li></ul></li><li>將游標停留在欲搜尋的字串上，向下搜尋該字串<br><code>*</code></li><li>游標不動、往上移動內容<br><code>ctrl+e</code></li><li>游標不動、往下移動內容<br><code>ctrl+y</code></li><li>選取、複製、貼上<ul><li>複製一整列<br><code>ff</code></li><li>剪下一整列<br><code>dd</code></li><li>貼上<br><code>p</code></li><li>整列選取<br><code>V (shift+v)</code></li><li>區塊選取<br><code>v</code></li><li>方形區塊選取<br><code>ctrl+v</code></li><li>複製選取<br><code>y</code></li><li>刪除選取<br><code>d</code></li><li>多列刪除<ul><li>先 <code>V</code> 切換到整行選取模式</li><li>上下選擇</li><li>選取完後，按下 <code>d</code> 即可刪除所選</li></ul></li><li>區塊刪除<ul><li>先 <code>v</code> 或 <code>ctrl+v</code> 切換到想要的選取模式</li><li>上下選擇</li><li>選取完後，按下 <code>d</code> 即可刪除所選</li></ul></li><li>插入多行一樣的文字，例如要將整個function區塊，往右縮排(即插入4個空白)<ul><li><code>ctrl+v</code> 切換到方形區塊選取模式</li><li>往下選取整個function的第一行</li><li><code>shift+i</code>，此時游標會跳到所選區塊的第一列</li><li>輸入欲插入的文字 (4個空白)</li><li>輸入完畢後，<code>Esc</code> 結束編輯模式</li><li>跳出後，其餘的地方均會自動補上跟第一列相同的操作(4個空白)</li></ul></li></ul></li><li>開啟檔案瀏覽器<br><code>:Ex</code></li><li>新增水平分割視窗<br><code>:new</code></li><li>新增垂直分割視窗<br><code>:vnew</code></li><li>切換視窗<br><code>ctrl+w -&gt; 方向鍵</code></li><li>儲存退出<br><code>:wq</code></li><li>退出不儲存<br><code>:q!</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批次更改檔案副檔名</title>
      <link href="/posts/4b76f376/"/>
      <url>/posts/4b76f376/</url>
      
        <content type="html"><![CDATA[<p>範例: 把所有.JPG的副檔名，全部改成.jpg<br><code>for f in *.JPG; do mv -- &quot;$f&quot; &quot;${f%.JPG}.jpg&quot;; done</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 文章加密</title>
      <link href="/posts/7504220/"/>
      <url>/posts/7504220/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md" target="_blank" rel="noopener">hexo-blog-encrypt</a> project on GitHub</p><h1 id="安裝套件"><a href="#安裝套件" class="headerlink" title="安裝套件"></a>安裝套件</h1><p><code>npm install hexo-blog-encrypt --save</code></p><h1 id="在文章的title裡加上key-word-password"><a href="#在文章的title裡加上key-word-password" class="headerlink" title="在文章的title裡加上key word: password"></a>在文章的title裡加上key word: password</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2019-11-11 11:11:11</span><br><span class="line">password: 123456</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="文章列表"><a href="#文章列表" class="headerlink" title="文章列表"></a>文章列表</h1><p><img src="/posts/7504220/image01.jpg" alt></p><h1 id="解鎖"><a href="#解鎖" class="headerlink" title="解鎖"></a>解鎖</h1><p><img src="/posts/7504220/image02.jpg" alt><br><img src="/posts/7504220/image03.jpg" alt></p><h1 id="直接隱藏文章"><a href="#直接隱藏文章" class="headerlink" title="直接隱藏文章"></a>直接隱藏文章</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2019-11-11 11:11:11</span><br><span class="line">published: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Setup Python on ubuntu 16.04</title>
      <link href="/posts/35cf5995/"/>
      <url>/posts/35cf5995/</url>
      
        <content type="html"><![CDATA[<h1 id="安裝python3-6"><a href="#安裝python3-6" class="headerlink" title="安裝python3.6"></a>安裝python3.6</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line">user@ubuntu:~$ sudo apt-get update</span><br><span class="line">user@ubuntu:~$ sudo apt-get install python3.6</span><br></pre></td></tr></table></figure><h1 id="建立update-alternatives-list-for-python"><a href="#建立update-alternatives-list-for-python" class="headerlink" title="建立update-alternatives list for python"></a>建立update-alternatives list for python</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1</span><br><span class="line">update-alternatives: using /usr/bin/python2.7 to provide /usr/bin/python (python) <span class="keyword">in</span> auto mode</span><br><span class="line">user@ubuntu:~$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.5 2</span><br><span class="line">update-alternatives: using /usr/bin/python3.5 to provide /usr/bin/python (python) <span class="keyword">in</span> auto mode</span><br><span class="line">user@ubuntu:~$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 3</span><br><span class="line">update-alternatives: using /usr/bin/python3.6 to provide /usr/bin/python (python) <span class="keyword">in</span> auto mode</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ update-alternatives --list python</span><br><span class="line">/usr/bin/python2.7</span><br><span class="line">/usr/bin/python3.5</span><br><span class="line">/usr/bin/python3.6</span><br></pre></td></tr></table></figure><h1 id="設定python預設選項"><a href="#設定python預設選項" class="headerlink" title="設定python預設選項"></a>設定python預設選項</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo update-alternatives --config python</span><br><span class="line">There are 3 choices <span class="keyword">for</span> the alternative python (providing /usr/bin/python).</span><br><span class="line"></span><br><span class="line">  Selection    Path                Priority   Status</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /usr/bin/python3.6   3         auto mode</span><br><span class="line">  1            /usr/bin/python2.7   1         manual mode</span><br><span class="line">  2            /usr/bin/python3.5   2         manual mode</span><br><span class="line">  3            /usr/bin/python3.6   3         manual mode</span><br><span class="line"></span><br><span class="line">Press &lt;enter&gt; to keep the current choice[*], or <span class="built_in">type</span> selection number: 3</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ python -V</span><br><span class="line">Python 3.6.6</span><br></pre></td></tr></table></figure><h1 id="安裝-pip-for-python3-6"><a href="#安裝-pip-for-python3-6" class="headerlink" title="安裝 pip for python3.6"></a>安裝 pip for python3.6</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo apt-get install curl</span><br><span class="line">user@ubuntu:~$ curl https://bootstrap.pypa.io/get-pip.py | sudo python3.6</span><br></pre></td></tr></table></figure><h1 id="安裝-virtualenv-or-virtualenvwrapper"><a href="#安裝-virtualenv-or-virtualenvwrapper" class="headerlink" title="安裝 virtualenv or virtualenvwrapper"></a>安裝 virtualenv or virtualenvwrapper</h1><p><code>pip install virtualenv --user</code><br><code>pip install virtualenvwrapper --user</code></p><h1 id="安裝相關的套件"><a href="#安裝相關的套件" class="headerlink" title="安裝相關的套件"></a>安裝相關的套件</h1><p><code>sudo apt-get install python3.6-dev</code><br><code>sudo apt-get install libmysqlclient-dev</code></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>image與base64轉換</title>
      <link href="/posts/87b07643/"/>
      <url>/posts/87b07643/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_to_base64</span><span class="params">(image_path)</span>:</span></span><br><span class="line">    img = Image.open(image_path)</span><br><span class="line">    output_buffer = BytesIO()</span><br><span class="line">    <span class="keyword">if</span> img.format == <span class="string">'PNG'</span>:</span><br><span class="line">        img.save(output_buffer, format=<span class="string">'PNG'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        img.save(output_buffer, format=<span class="string">'JPEG'</span>)</span><br><span class="line">    byte_data = output_buffer.getvalue()</span><br><span class="line">    base64_str = base64.b64encode(byte_data)</span><br><span class="line">    <span class="keyword">return</span> base64_str</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base64_to_image</span><span class="params">(base64_str, image_path=None)</span>:</span></span><br><span class="line">    base64_data = re.sub(<span class="string">'^data:image/.+;base64,'</span>, <span class="string">''</span>, base64_str)</span><br><span class="line">    byte_data = base64.b64decode(base64_data)</span><br><span class="line">    image_data = BytesIO(byte_data)</span><br><span class="line">    img = Image.open(image_data)</span><br><span class="line">    <span class="keyword">if</span> image_path:</span><br><span class="line">        img.save(image_path)</span><br><span class="line">    <span class="keyword">return</span> img</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RadioGroup</title>
      <link href="/posts/cc7d2dc0/"/>
      <url>/posts/cc7d2dc0/</url>
      
        <content type="html"><![CDATA[<ul><li><p>靜態宣告</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioGroup</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/rgroup"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/warwick"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"warwick"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/kyle"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"kyle"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/twitch"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"twitch"</span> /&gt;</span>            </span><br><span class="line">    <span class="tag">&lt;/<span class="name">RadioGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> RadioButton warwick;</span><br><span class="line"><span class="keyword">private</span> RadioButton kyle;</span><br><span class="line"><span class="keyword">private</span> RadioButton twitch;</span><br><span class="line"><span class="keyword">private</span> RadioGroup rgroup;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    </span><br><span class="line">    warwick = (RadioButton) findViewById(R.id.warwick);</span><br><span class="line">    kyle = (RadioButton) findViewById(R.id.kyle);</span><br><span class="line">    twitch = (RadioButton) findViewById(R.id.twitch);</span><br><span class="line">    rgroup = (RadioGroup) findViewById(R.id.rgroup);</span><br><span class="line">    rgroup.setOnCheckedChangeListener(listener);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> RadioGroup.OnCheckedChangeListener listener = <span class="keyword">new</span> RadioGroup.OnCheckedChangeListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(RadioGroup group, <span class="keyword">int</span> checkedId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">int</span> p = group.indexOfChild((RadioButton) findViewById(checkedId));</span><br><span class="line">        <span class="keyword">int</span> count = group.getChildCount();</span><br><span class="line">        <span class="keyword">switch</span> (checkedId) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.warwick:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.kyle:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.twitch:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>動態宣告</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> checkedRadioButtonId = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Button confirmBtn = findViewById(R.id.confirmBtn);</span><br><span class="line">    <span class="keyword">final</span> RadioGroup rgroup = findViewById(R.id.rgroup);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> String[] servers = mApp.getSharedPreference().getServerList().split(<span class="string">","</span>);</span><br><span class="line">    <span class="keyword">final</span> String[] serverValues = mApp.getSharedPreference().getServerListValue().split(<span class="string">","</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> RadioButton[] rb = <span class="keyword">new</span> RadioButton[servers.length];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; servers.length; i++) &#123;</span><br><span class="line">        rb[i]  = <span class="keyword">new</span> RadioButton(<span class="keyword">this</span>);</span><br><span class="line">        String text = serverValues[i] + <span class="string">"("</span> + servers[i] + <span class="string">")"</span>;</span><br><span class="line">        rb[i].setText(text);</span><br><span class="line">        rb[i].setTextSize(<span class="number">22</span>);</span><br><span class="line">        rb[i].setId(i);</span><br><span class="line"></span><br><span class="line">        RadioGroup.LayoutParams params = <span class="keyword">new</span> RadioGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class="line">        params.setMargins(<span class="number">50</span>, <span class="number">50</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        rb[i].setLayoutParams(params);</span><br><span class="line">        rgroup.addView(rb[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rgroup.setOnCheckedChangeListener(<span class="keyword">new</span> RadioGroup.OnCheckedChangeListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(RadioGroup group, <span class="keyword">int</span> checkedId)</span> </span>&#123;</span><br><span class="line">            checkedRadioButtonId = rgroup.getCheckedRadioButtonId();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RadioButton OnClickListener</title>
      <link href="/posts/caba951c/"/>
      <url>/posts/caba951c/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> RadioGroup radioGroup = layout.findViewById(R.id.radio_group);</span><br><span class="line"><span class="keyword">final</span> RadioButton channel1 = radioGroup.findViewById(R.id.channel1);</span><br><span class="line">channel1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>adb commands</title>
      <link href="/posts/2da5a158/"/>
      <url>/posts/2da5a158/</url>
      
        <content type="html"><![CDATA[<p><a href="https://developer.android.com/studio/command-line/adb" target="_blank" rel="noopener">https://developer.android.com/studio/command-line/adb</a></p><h5 id="adb"><a href="#adb" class="headerlink" title="adb"></a>adb</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">adb kill-server                         // 關掉 adb 伺服器</span><br><span class="line">adb start-server                        // 啟動 adb 伺服器</span><br><span class="line"></span><br><span class="line">adb reboot                              // 重開機</span><br><span class="line">adb reboot bootloader                   // 重開機後，進入bootloader mode</span><br><span class="line">adb root                                // 以root權限登入</span><br><span class="line">adb remount                             // 將系統(/system)重新掛載成 R/W 模式</span><br><span class="line">adb devices                             // 查看目前連線的裝置</span><br><span class="line">adb shell                               // shell登入</span><br><span class="line">adb -s devicename shell                 // 指定要連結的device</span><br><span class="line"></span><br><span class="line">adb push local_source /path/to/phone    // 將檔案複製到android裝置</span><br><span class="line">adb pull /path/from/phone local_source  // 將檔案從android裝置上複製回本機端</span><br><span class="line">adb install test.apk</span><br><span class="line">adb install -r test.apk                 // 保留資料，重新安裝test.apk</span><br><span class="line">adb uninstall package.name.xxx          // 移除程式</span><br><span class="line">adb uninstall -k package.name.xxx       // 移除程式時，保留資料</span><br><span class="line">adb shell getprop                       // 讀取android中build.prop的值</span><br><span class="line">adb shell setprop                       // 修改系统属性</span><br><span class="line">adb shell getevent /dev/input/event0</span><br><span class="line">adb shell setevent /dev/input/event0</span><br><span class="line">adb shell dmesg                         // 印出Linux kernel log</span><br><span class="line">adb shell cat /proc/kmsg                // 持續印出 kernel log</span><br><span class="line">adb shell dumpsys                       // 顯示系統資訊</span><br><span class="line">adb shell dumpsys SurfaceFlinger        /* battery: 列出基本的電池資訊</span><br><span class="line">                                           batteryinfo: 各種功能使用 power 的狀況，同About Phone 裡面的電池使用狀況。</span><br><span class="line">                                           SurfaceFlinger: 系統的 Surface 使用情況</span><br><span class="line">                                           power: 列出 Power Manager 的參數，如 wakelock 時間等</span><br><span class="line">                                           alarm: 列出目前有註冊 alarm 者</span><br><span class="line">                                        */</span><br></pre></td></tr></table></figure><h5 id="am"><a href="#am" class="headerlink" title="am"></a>am</h5><ul><li>am broadcast<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[-a &lt;ACTION&gt;]</span><br><span class="line">[-d &lt;DATA_URI&gt;]</span><br><span class="line">[-t &lt;MIME_TYPE&gt;] </span><br><span class="line">[-c &lt;CATEGORY&gt; [-c &lt;CATEGORY&gt;] ...] </span><br><span class="line">[-e|--es &lt;EXTRA_KEY&gt; &lt;EXTRA_STRING_VALUE&gt; ...] </span><br><span class="line">[--ez &lt;EXTRA_KEY&gt; &lt;EXTRA_BOOLEAN_VALUE&gt; ...] </span><br><span class="line">[-e|--ei &lt;EXTRA_KEY&gt; &lt;EXTRA_INT_VALUE&gt; ...] </span><br><span class="line">[-n &lt;COMPONENT&gt;]</span><br><span class="line">[-f &lt;FLAGS&gt;] [&lt;URI&gt;]</span><br><span class="line"></span><br><span class="line">$ adb shell am broadcast -a android.intent.action.BOOT_COMPLETED</span><br><span class="line">$ adb shell am broadcast -a android.intent.action.BOOT_COMPLETED -n com.example/.MainActivity</span><br><span class="line">$ adb shell am broadcast -a android.intent.action.BOOT_COMPLETED -c android.intent.category.DEFAULT -n com.example/.MainActivity</span><br><span class="line">$ adb shell am broadcast -a intent.action.UPDATE_APK --es filePath &quot;/sdcard/Download/simple.apk&quot; --ez keep true</span><br></pre></td></tr></table></figure></li><li>am start<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># StartActivity</span><br><span class="line">$ adb shell am start -n com.mtreat.faceid/.server.ServerMainActivity</span><br><span class="line"># 啟動瀏覽器，打開目標網址</span><br><span class="line">$ am start -a android.intent.action.VIEW -d http://www.google.com</span><br><span class="line"># launch Settings</span><br><span class="line">$ am start -a android.intent.action.MAIN -n com.android.settings/.Settings</span><br></pre></td></tr></table></figure></li><li>StartService<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell am startservice -n com.foxconn.monitorservice/.service.MonitorServie</span><br><span class="line">$ adb shell am startforegroundservice -n com.foxconn.monitorservice/.service.MonitorServie</span><br><span class="line">$ adb shell am stopservice -n com.foxconn.monitorservice/.service.MonitorServie</span><br></pre></td></tr></table></figure></li></ul><h5 id="pm"><a href="#pm" class="headerlink" title="pm"></a>pm</h5><ul><li>pm list packages<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">prints all packages, optionally only those whose package name contains the text in FILTER. Options:</span><br><span class="line">-f: see their associated file.</span><br><span class="line">-d: filter to only show disbled packages.</span><br><span class="line">-e: filter to only show enabled packages.</span><br><span class="line">-s: filter to only show system packages.</span><br><span class="line">-3: filter to only show third party packages.</span><br><span class="line">-i: see the installer for the packages.</span><br><span class="line">-u: also include uninstalled packages.</span><br><span class="line"></span><br><span class="line">$ adb shell pm list packages com.google</span><br><span class="line">package:com.google.android.youtube</span><br><span class="line">package:com.google.android.ext.services</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> adb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>adb shell keyevent</title>
      <link href="/posts/bd0ecf4c/"/>
      <url>/posts/bd0ecf4c/</url>
      
        <content type="html"><![CDATA[<ul><li>發送keyevent<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell input keyevent 7    # for key &apos;0&apos;</span><br><span class="line">$ adb shell input keyevent 8    # for key &apos;1&apos;</span><br><span class="line">$ adb shell input keyevent 29    # for key &apos;A&apos;</span><br><span class="line">$ adb shell input keyevent 54    # for key &apos;B&apos;</span><br></pre></td></tr></table></figure></li><li>輸入字串<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell input text &quot;ANDROID&quot;</span><br></pre></td></tr></table></figure></li><li>Keycode 列表<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">00 -&gt;  &quot;KEYCODE_UNKNOWN&quot;</span><br><span class="line">01 -&gt;  &quot;KEYCODE_MENU&quot;</span><br><span class="line">02 -&gt;  &quot;KEYCODE_SOFT_RIGHT&quot;</span><br><span class="line">03 -&gt;  &quot;KEYCODE_HOME&quot;</span><br><span class="line">04 -&gt;  &quot;KEYCODE_BACK&quot;</span><br><span class="line">05 -&gt;  &quot;KEYCODE_CALL&quot;</span><br><span class="line">06 -&gt;  &quot;KEYCODE_ENDCALL&quot;</span><br><span class="line">07 -&gt;  &quot;KEYCODE_0&quot;</span><br><span class="line">08 -&gt;  &quot;KEYCODE_1&quot;</span><br><span class="line">09 -&gt;  &quot;KEYCODE_2&quot;</span><br><span class="line">10 -&gt;  &quot;KEYCODE_3&quot;</span><br><span class="line">11 -&gt;  &quot;KEYCODE_4&quot;</span><br><span class="line">12 -?  &quot;KEYCODE_5&quot;</span><br><span class="line">13 -&gt;  &quot;KEYCODE_6&quot;</span><br><span class="line">14 -&gt;  &quot;KEYCODE_7&quot;</span><br><span class="line">15 -&gt;  &quot;KEYCODE_8&quot;</span><br><span class="line">16 -&gt;  &quot;KEYCODE_9&quot;</span><br><span class="line">17 -&gt;  &quot;KEYCODE_STAR&quot;</span><br><span class="line">18 -&gt;  &quot;KEYCODE_POUND&quot;</span><br><span class="line">19 -&gt;  &quot;KEYCODE_DPAD_UP&quot;</span><br><span class="line">20 -&gt;  &quot;KEYCODE_DPAD_DOWN&quot;</span><br><span class="line">21 -&gt;  &quot;KEYCODE_DPAD_LEFT&quot;</span><br><span class="line">22 -&gt;  &quot;KEYCODE_DPAD_RIGHT&quot;</span><br><span class="line">23 -&gt;  &quot;KEYCODE_DPAD_CENTER&quot;</span><br><span class="line">24 -&gt;  &quot;KEYCODE_VOLUME_UP&quot;</span><br><span class="line">25 -&gt;  &quot;KEYCODE_VOLUME_DOWN&quot;</span><br><span class="line">26 -&gt;  &quot;KEYCODE_POWER&quot;</span><br><span class="line">27 -&gt;  &quot;KEYCODE_CAMERA&quot;</span><br><span class="line">28 -&gt;  &quot;KEYCODE_CLEAR&quot;</span><br><span class="line">29 -&gt;  &quot;KEYCODE_A&quot;</span><br><span class="line">30 -&gt;  &quot;KEYCODE_B&quot;</span><br><span class="line">31 -&gt;  &quot;KEYCODE_C&quot;</span><br><span class="line">32 -&gt;  &quot;KEYCODE_D&quot;</span><br><span class="line">33 -&gt;  &quot;KEYCODE_E&quot;</span><br><span class="line">34 -&gt;  &quot;KEYCODE_F&quot;</span><br><span class="line">35 -&gt;  &quot;KEYCODE_G&quot;</span><br><span class="line">36 -&gt;  &quot;KEYCODE_H&quot;</span><br><span class="line">37 -&gt;  &quot;KEYCODE_I&quot;</span><br><span class="line">38 -&gt;  &quot;KEYCODE_J&quot;</span><br><span class="line">39 -&gt;  &quot;KEYCODE_K&quot;</span><br><span class="line">40 -&gt;  &quot;KEYCODE_L&quot;</span><br><span class="line">41 -&gt;  &quot;KEYCODE_M&quot;</span><br><span class="line">42 -&gt;  &quot;KEYCODE_N&quot;</span><br><span class="line">43 -&gt;  &quot;KEYCODE_O&quot;</span><br><span class="line">44 -&gt;  &quot;KEYCODE_P&quot;</span><br><span class="line">45 -&gt;  &quot;KEYCODE_Q&quot;</span><br><span class="line">46 -&gt;  &quot;KEYCODE_R&quot;</span><br><span class="line">47 -&gt;  &quot;KEYCODE_S&quot;</span><br><span class="line">48 -&gt;  &quot;KEYCODE_T&quot;</span><br><span class="line">49 -&gt;  &quot;KEYCODE_U&quot;</span><br><span class="line">50 -&gt;  &quot;KEYCODE_V&quot;</span><br><span class="line">51 -&gt;  &quot;KEYCODE_W&quot;</span><br><span class="line">52 -&gt;  &quot;KEYCODE_X&quot;</span><br><span class="line">53 -&gt;  &quot;KEYCODE_Y&quot;</span><br><span class="line">54 -&gt;  &quot;KEYCODE_Z&quot;</span><br><span class="line">55 -&gt;  &quot;KEYCODE_COMMA&quot;</span><br><span class="line">56 -&gt;  &quot;KEYCODE_PERIOD&quot;</span><br><span class="line">57 -&gt;  &quot;KEYCODE_ALT_LEFT&quot;</span><br><span class="line">58 -&gt;  &quot;KEYCODE_ALT_RIGHT&quot;</span><br><span class="line">59 -&gt;  &quot;KEYCODE_SHIFT_LEFT&quot;</span><br><span class="line">60 -&gt;  &quot;KEYCODE_SHIFT_RIGHT&quot;</span><br><span class="line">61 -&gt;  &quot;KEYCODE_TAB&quot;</span><br><span class="line">62 -&gt;  &quot;KEYCODE_SPACE&quot;</span><br><span class="line">63 -&gt;  &quot;KEYCODE_SYM&quot;</span><br><span class="line">64 -&gt;  &quot;KEYCODE_EXPLORER&quot;</span><br><span class="line">65 -&gt;  &quot;KEYCODE_ENVELOPE&quot;</span><br><span class="line">66 -&gt;  &quot;KEYCODE_ENTER&quot;</span><br><span class="line">67 -&gt;  &quot;KEYCODE_DEL&quot;</span><br><span class="line">68 -&gt;  &quot;KEYCODE_GRAVE&quot;</span><br><span class="line">69 -&gt;  &quot;KEYCODE_MINUS&quot;</span><br><span class="line">70 -&gt;  &quot;KEYCODE_EQUALS&quot;</span><br><span class="line">71 -&gt;  &quot;KEYCODE_LEFT_BRACKET&quot;</span><br><span class="line">72 -&gt;  &quot;KEYCODE_RIGHT_BRACKET&quot;</span><br><span class="line">73 -&gt;  &quot;KEYCODE_BACKSLASH&quot;</span><br><span class="line">74 -&gt;  &quot;KEYCODE_SEMICOLON&quot;</span><br><span class="line">75 -&gt;  &quot;KEYCODE_APOSTROPHE&quot;</span><br><span class="line">76 -&gt;  &quot;KEYCODE_SLASH&quot;</span><br><span class="line">77 -&gt;  &quot;KEYCODE_AT&quot;</span><br><span class="line">78 -&gt;  &quot;KEYCODE_NUM&quot;</span><br><span class="line">79 -&gt;  &quot;KEYCODE_HEADSETHOOK&quot;</span><br><span class="line">80 -&gt;  &quot;KEYCODE_FOCUS&quot;</span><br><span class="line">81 -&gt;  &quot;KEYCODE_PLUS&quot;</span><br><span class="line">82 -&gt;  &quot;KEYCODE_MENU&quot;</span><br><span class="line">83 -&gt;  &quot;KEYCODE_NOTIFICATION&quot;</span><br><span class="line">84 -&gt;  &quot;KEYCODE_SEARCH&quot;</span><br><span class="line">85 -&gt;  &quot;TAG_LAST_KEYCODE&quot;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> adb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Display base64 image on ImageView</title>
      <link href="/posts/81c75dee/"/>
      <url>/posts/81c75dee/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.util.Base64;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"></span><br><span class="line">ImageView img = findViewById(R.id.img);</span><br><span class="line"><span class="keyword">byte</span>[] bytes = Base64.decode(base64_img, Base64.DEFAULT);</span><br><span class="line">img.setImageBitmap(BitmapFactory.decodeByteArray(bytes, <span class="number">0</span>, bytes.length));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>get top activity</title>
      <link href="/posts/4089bb19/"/>
      <url>/posts/4089bb19/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.ActivityManager;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Class <span class="title">getTopActivity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ActivityManager manager = (ActivityManager) getSystemService(ACTIVITY_SERVICE);</span><br><span class="line">    String classname = manager.getRunningTasks(<span class="number">1</span>).get(<span class="number">0</span>).topActivity.getClassName();</span><br><span class="line">    Class cls = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        cls = Class.forName(classname);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cls;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Access</title>
      <link href="/posts/cc7d2dc0/"/>
      <url>/posts/cc7d2dc0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">readFromFile</span><span class="params">(String path, String fileName)</span> </span>&#123;</span><br><span class="line">    StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    String line;</span><br><span class="line">    BufferedReader in = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="keyword">new</span> File(path, fileName)));</span><br><span class="line">        <span class="keyword">while</span> ((line = in.readLine()) != <span class="keyword">null</span>) stringBuilder.append(line);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">        Log.d(TAG, e.toString());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        Log.d(TAG, e.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> deletedAll = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (file != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">            String[] children = file.list();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; children.length; i++) &#123;</span><br><span class="line">                deletedAll = deleteFile(<span class="keyword">new</span> File(file, children[i])) &amp;&amp; deletedAll;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            deletedAll = file.delete();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> deletedAll;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Check Network Status</title>
      <link href="/posts/27f80ae0/"/>
      <url>/posts/27f80ae0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.net.ConnectivityManager;</span><br><span class="line"><span class="keyword">import</span> android.net.NetworkInfo;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isNetworkConnected</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ConnectivityManager connManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);</span><br><span class="line">    <span class="keyword">if</span> (connManager != <span class="keyword">null</span>) &#123;</span><br><span class="line">        NetworkInfo mNetworkInfo = connManager.getActiveNetworkInfo();</span><br><span class="line">        <span class="keyword">if</span> (mNetworkInfo != <span class="keyword">null</span> &amp;&amp; mNetworkInfo.isConnected()) &#123;</span><br><span class="line">            <span class="keyword">return</span> mNetworkInfo.isAvailable();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>連點</title>
      <link href="/posts/d804cf8f/"/>
      <url>/posts/d804cf8f/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//要點幾下array就設多大</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">long</span>[] mHits = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">System.arraycopy(mHits, <span class="number">1</span>, mHits, <span class="number">0</span>, mHits.length - <span class="number">1</span>);</span><br><span class="line">mHits[mHits.length - <span class="number">1</span>] = SystemClock.uptimeMillis();</span><br><span class="line"><span class="keyword">if</span> (mHits[<span class="number">0</span>] &gt; SystemClock.uptimeMillis() - <span class="number">2000</span>) &#123;</span><br><span class="line">    <span class="comment">//do something...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sign apk</title>
      <link href="/posts/765879ed/"/>
      <url>/posts/765879ed/</url>
      
        <content type="html"><![CDATA[<p>If an apk is set as android:sharedUserId=”android.uid.system” in the AndroidManifest.xml, it must be signed with platform key and then it is usable.</p><ol><li>Get signapk.jar in //prebuilts/sdk/tools/lib/</li><li>test-key: in //build/target/product/security/</li><li>release-key: in //vander/nvidia/security/cardhu/<br>The key should have password according to your project</li><li>zipalign can align apk to obtain better efficiency<br><code>zipalign.exe -f 4 input.apk output.apk</code></li><li>Use the following command to sign an apk under command line<br><code>java -jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> apk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webview Notes</title>
      <link href="/posts/a7cde42/"/>
      <url>/posts/a7cde42/</url>
      
        <content type="html"><![CDATA[<ul><li>load static html files<br>Create folder “assets” and put your html file in the folder<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mWebView.loadUrl(<span class="string">"file:///android_asset/index.html"</span>);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
