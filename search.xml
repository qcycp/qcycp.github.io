<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>stocks</title>
      <link href="/posts/56f79805/"/>
      <url>/posts/56f79805/</url>
      
        <content type="html"><![CDATA[<p>掛單交易</p><ol><li>Buy Limit 買入限價</li><li>Sell Limit 賣出限價</li><li>Buy Stop 買入止損</li><li>Sell Stop 賣出止損<br><img src="/posts/56f79805/bu-y.png" alt><br>Limit 的交易單是希望以比現價更有利的價位入單，通常是等價格回檔時才入單<br>Stop 的交易單是希望以比現價更差的價位入單，通常是在等確定突破某個價位時才入單</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CUS</title>
      <link href="/posts/b83343d4/"/>
      <url>/posts/b83343d4/</url>
      
        <content type="html"><![CDATA[<iframe src="posts/b83343d4/CUS.pdf" width="1000" height="800"></iframe>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>gdb_coredump</title>
      <link href="/posts/ed619d22/"/>
      <url>/posts/ed619d22/</url>
      
        <content type="html"><![CDATA[<h1 id="check-system-core-dump-config"><a href="#check-system-core-dump-config" class="headerlink" title="check system core dump config"></a>check system core dump config</h1><p>core file size (blocks, -c) 0 =&gt; </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># ulimit -a</span><br><span class="line">core file size (blocks, -c) 0</span><br><span class="line">data seg size (kbytes, -d) unlimited</span><br><span class="line">scheduling priority (-e) 0</span><br><span class="line">file size (blocks, -f) unlimited</span><br><span class="line">pending signals (-i) 132090</span><br><span class="line">max locked memory (kbytes, -l) 64</span><br><span class="line">max memory size (kbytes, -m) unlimited</span><br><span class="line">open files (-n) 1024</span><br><span class="line">pipe size (512 bytes, -p) 8</span><br><span class="line">POSIX message queues (bytes, -q) 819200</span><br><span class="line">real-time priority (-r) 0</span><br><span class="line">stack size (kbytes, -s) 8192</span><br><span class="line">cpu time (seconds, -t) unlimited</span><br><span class="line">max user processes (-u) unlimited</span><br><span class="line">virtual memory (kbytes, -v) unlimited</span><br><span class="line">file locks (-x) unlimited</span><br></pre></td></tr></table></figure><h1 id="programe"><a href="#programe" class="headerlink" title="programe"></a>programe</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *a;</span><br><span class="line">    *a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="compile"><a href="#compile" class="headerlink" title="compile"></a>compile</h1><p>gcc -g -o test test.c</p><h1 id="execute"><a href="#execute" class="headerlink" title="execute"></a>execute</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@gnb ~]# sudo sh -c &quot;ulimit -c unlimited; ./test&quot;</span><br><span class="line">sh: line 1: 36407 segmemtatation fault (core dumped) ./test</span><br><span class="line"></span><br><span class="line">[root@gnb ~]# ll</span><br><span class="line">Total 34888</span><br><span class="line">-rw------- 1 root root 249856 May 31 20:56 core.36407</span><br><span class="line">-rwxr-xr-x 1 root root 9232 May 31 20:52 test</span><br><span class="line">-rw-r--r-- 1 root root 73 May 31 20:52 test.c</span><br></pre></td></tr></table></figure><h1 id="gdb"><a href="#gdb" class="headerlink" title="gdb"></a>gdb</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@gnb ~]# gdb test core.36407</span><br><span class="line">GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-120.el7</span><br><span class="line">Copyright (C) 2013 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law. Type &quot;show copying&quot;</span><br><span class="line">and &quot;show warranty&quot; for details.</span><br><span class="line">This GDB was configured as &quot;x86_64-redhat-linux-gnu&quot;.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;...</span><br><span class="line">Reading symbols from /root/test...done.</span><br><span class="line">[New LWP 36407]</span><br><span class="line">Core was generated by `./test&apos;.</span><br><span class="line">Program terminated with signal 11, Segmentation fault.</span><br><span class="line">#0 0x00000000004004ce in main () at test.c:6</span><br><span class="line">6 *a = 1;</span><br><span class="line">Missing separate debuginfos, use: debuginfo-install glibc-2.17-324.el7_9.x86_64</span><br><span class="line">(gdb) q</span><br></pre></td></tr></table></figure><h1 id="backtrace"><a href="#backtrace" class="headerlink" title="backtrace"></a>backtrace</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(gdb) bt</span><br><span class="line">#0 0x00000000004004ce in main () at test.c:6</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_note</title>
      <link href="/posts/2a024bae/"/>
      <url>/posts/2a024bae/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.ibm.com/docs/en/siffs/2.0.3?topic=python-installing-packages-offline-mode" target="_blank" rel="noopener">https://www.ibm.com/docs/en/siffs/2.0.3?topic=python-installing-packages-offline-mode</a><br>offline install python</p><ol><li><p>download python source package from<br><a href="https://www.python.org/ftp/python/" target="_blank" rel="noopener">https://www.python.org/ftp/python/</a></p></li><li><p>./configure<br>make<br>make altinstall</p></li><li><p>cd /usr/local/bin<br>ln -s python3.6 python3</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>gpio</title>
      <link href="/posts/ba76d4d1/"/>
      <url>/posts/ba76d4d1/</url>
      
        <content type="html"><![CDATA[<p>GPIO（General-purpose input/output），通用型之輸入輸出的簡稱，其接腳可以供使用者由程式控制自由使用，PIN腳依現實考量可作為通用輸入（GPI）或通用輸出（GPO）或通用輸入與輸出（GPIO）</p><p>既然一個引腳可以用於輸入、輸出或其他特殊功能，那麼一定有暫存器用來選擇這些功能。對於輸入，一定可以透過讀取某個暫存器來確定引腳電位的高低；對於輸出，一定可以透過寫入某個暫存器來讓這個引腳輸出高電位或者低電位</p><p><a href="https://zh.wikipedia.org/wiki/GPIO" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/GPIO</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mount USB in linux</title>
      <link href="/posts/965b1254/"/>
      <url>/posts/965b1254/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@gnb ~]# lsblk</span><br><span class="line">NAME            MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0 447.1G  0 disk</span><br><span class="line">├─sda1            8:1    0   200M  0 part /boot/efi</span><br><span class="line">├─sda2            8:2    0     1G  0 part /boot</span><br><span class="line">└─sda3            8:3    0   446G  0 part</span><br><span class="line">  ├─centos-root 253:0    0    50G  0 lvm  /</span><br><span class="line">  ├─centos-swap 253:1    0     4G  0 lvm  [SWAP]</span><br><span class="line">  └─centos-home 253:2    0   392G  0 lvm  /home</span><br></pre></td></tr></table></figure><ul><li>插入 USB<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@gnb ~]# lsblk</span><br><span class="line">NAME            MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0 447.1G  0 disk</span><br><span class="line">├─sda1            8:1    0   200M  0 part /boot/efi</span><br><span class="line">├─sda2            8:2    0     1G  0 part /boot</span><br><span class="line">└─sda3            8:3    0   446G  0 part</span><br><span class="line">  ├─centos-root 253:0    0    50G  0 lvm  /</span><br><span class="line">  ├─centos-swap 253:1    0     4G  0 lvm  [SWAP]</span><br><span class="line">  └─centos-home 253:2    0   392G  0 lvm  /home</span><br><span class="line">sdb               8:16   1  58.9G  0 disk</span><br><span class="line">└─sdb1            8:17   1  58.9G  0 part</span><br></pre></td></tr></table></figure></li><li>mount<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@gnb ~]# mkdir /mnt/usb</span><br><span class="line">[root@gnb ~]# mount /dev/sdb1 /mnt/usb</span><br><span class="line">[root@gnb ~]# lsblk</span><br><span class="line">NAME            MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0 447.1G  0 disk</span><br><span class="line">├─sda1            8:1    0   200M  0 part /boot/efi</span><br><span class="line">├─sda2            8:2    0     1G  0 part /boot</span><br><span class="line">└─sda3            8:3    0   446G  0 part</span><br><span class="line">  ├─centos-root 253:0    0    50G  0 lvm  /</span><br><span class="line">  ├─centos-swap 253:1    0     4G  0 lvm  [SWAP]</span><br><span class="line">  └─centos-home 253:2    0   392G  0 lvm  /home</span><br><span class="line">sdb               8:16   1  58.9G  0 disk</span><br><span class="line">└─sdb1            8:17   1  58.9G  0 part /mnt/usb</span><br></pre></td></tr></table></figure></li><li>umount<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@gnb ~]# umount /dev/sdb1</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>eCPRI</title>
      <link href="/posts/f56010a1/"/>
      <url>/posts/f56010a1/</url>
      
        <content type="html"><![CDATA[<p>compression mode uplane package: 7680 bytes</p><p>mac: dst(6) + src(6) = 12<br>type: 0xaefe(2)<br>vlan tag(4)<br>eCPRI header(4): eCPRI revision+message type+payload size<br>eCPRI payload = 7680 - (12+2+4+4) = 7658</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>dhcp</title>
      <link href="/posts/cd116c88/"/>
      <url>/posts/cd116c88/</url>
      
        <content type="html"><![CDATA[<ul><li><p>dhcp lease</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/lib/dhcpd/dhcpd.leases</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@opennesswkn-1 ~]# cat /etc/dhcp/dhcpd-Vish.conf</span><br><span class="line">                                default-lease-time 86400;</span><br><span class="line">                                max-lease-time 86400;</span><br><span class="line"></span><br><span class="line">                                option domain-name-servers 192.167.27.85; #required foxconn will be removing this in the next release</span><br><span class="line"></span><br><span class="line">                                authoritative;</span><br><span class="line"></span><br><span class="line">                                option space ORU;</span><br><span class="line">                                option ORU.controller code 129 = ip-address; # Non legacy ORU controller IP address</span><br><span class="line"></span><br><span class="line">                                allow booting;</span><br><span class="line"></span><br><span class="line">                                #</span><br><span class="line">                                # Front Haul</span><br><span class="line">                                #</span><br><span class="line">                                subnet 192.167.27.0 netmask 255.255.255.0 &#123;</span><br><span class="line">                                        option ORU.controller 192.167.27.85; #  Call Home IP (DU&apos;s Front Haul IP)</span><br><span class="line">                                        vendor-option-space ORU; # Option 43 enabler</span><br><span class="line">                                        range 192.167.27.54 192.167.27.57;</span><br><span class="line">                                &#125;</span><br><span class="line">[root@opennesswkn-1 ~]#</span><br></pre></td></tr></table></figure></li><li><p>dhcp server to arrange IP</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br></pre></td><td class="code"><pre><span class="line">[root@opennesswkn-1 ~]# dhcpd -d -cf /etc/dhcp/dhcpd-Vish.conf</span><br><span class="line">Internet Systems Consortium DHCP Server 4.2.5</span><br><span class="line">Copyright 2004-2013 Internet Systems Consortium.</span><br><span class="line">All rights reserved.</span><br><span class="line">For info, please visit https://www.isc.org/software/dhcp/</span><br><span class="line">Not searching LDAP since ldap-server, ldap-port and ldap-base-dn were not specified in the config file</span><br><span class="line">Wrote 2 leases to leases file.</span><br><span class="line">Multiple interfaces match the same subnet: ens1f2 enp138s10f2</span><br><span class="line">Multiple interfaces match the same shared network: ens1f2 enp138s10f2</span><br><span class="line">Listening on LPF/enp138s10f2/a6:68:f5:d3:e1:81/192.167.27.0/24</span><br><span class="line">Sending on   LPF/enp138s10f2/a6:68:f5:d3:e1:81/192.167.27.0/24</span><br><span class="line"></span><br><span class="line">No subnet declaration for calibcb7350d3eb (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on calibcb7350d3eb.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface calibcb7350d3eb is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali88eca308ca5 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali88eca308ca5.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali88eca308ca5 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali6fd9c0fd9c9 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali6fd9c0fd9c9.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali6fd9c0fd9c9 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali9673670ae99 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali9673670ae99.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali9673670ae99 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for calicf8e4629704 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on calicf8e4629704.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface calicf8e4629704 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali3c0ac091bde (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali3c0ac091bde.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali3c0ac091bde is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for calibc45a57cfa0 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on calibc45a57cfa0.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface calibc45a57cfa0 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali04c1250942c (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali04c1250942c.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali04c1250942c is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for caliacc584123c6 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on caliacc584123c6.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface caliacc584123c6 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for calib9f5718fa33 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on calib9f5718fa33.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface calib9f5718fa33 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali155810a4709 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali155810a4709.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali155810a4709 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for calibb57932f6db (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on calibb57932f6db.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface calibb57932f6db is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali5ef0b023397 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali5ef0b023397.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali5ef0b023397 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali113b3f5507d (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali113b3f5507d.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali113b3f5507d is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for caliac4a548932e (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on caliac4a548932e.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface caliac4a548932e is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for calie483a3255ac (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on calie483a3255ac.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface calie483a3255ac is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali8dc75f726a6 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali8dc75f726a6.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali8dc75f726a6 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali0874a0f15c3 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali0874a0f15c3.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali0874a0f15c3 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali8a35c38bedb (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali8a35c38bedb.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali8a35c38bedb is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali0637dc5e2f2 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali0637dc5e2f2.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali0637dc5e2f2 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali585b3d1d144 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali585b3d1d144.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali585b3d1d144 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali848157fe3f7 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali848157fe3f7.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali848157fe3f7 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali9a93bd66006 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali9a93bd66006.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali9a93bd66006 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali5c7419b5f53 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali5c7419b5f53.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali5c7419b5f53 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for cali91b8e8f88f1 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on cali91b8e8f88f1.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface cali91b8e8f88f1 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for calie1a9668ce36 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on calie1a9668ce36.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface calie1a9668ce36 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for docker0 (172.17.0.1).</span><br><span class="line">** Ignoring requests on docker0.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface docker0 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for virbr0 (192.168.122.1).</span><br><span class="line">** Ignoring requests on virbr0.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface virbr0 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for eno2 (192.168.3.49).</span><br><span class="line">** Ignoring requests on eno2.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface eno2 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for eno1 (10.12.87.85).</span><br><span class="line">** Ignoring requests on eno1.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface eno1 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for ens1f3 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on ens1f3.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface ens1f3 is attached. **</span><br><span class="line"></span><br><span class="line">Listening on LPF/ens1f2/3c:ec:ef:30:3d:36/192.167.27.0/24</span><br><span class="line">Sending on   LPF/ens1f2/3c:ec:ef:30:3d:36/192.167.27.0/24</span><br><span class="line"></span><br><span class="line">No subnet declaration for eth1 (169.254.3.1).</span><br><span class="line">** Ignoring requests on eth1.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface eth1 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for ens1f1 (no IPv4 addresses).</span><br><span class="line">** Ignoring requests on ens1f1.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface ens1f1 is attached. **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">No subnet declaration for ens1f0 (192.167.28.85).</span><br><span class="line">** Ignoring requests on ens1f0.  If this is not what</span><br><span class="line">   you want, please write a subnet declaration</span><br><span class="line">   in your dhcpd.conf file for the network segment</span><br><span class="line">   to which interface ens1f0 is attached. **</span><br><span class="line"></span><br><span class="line">Sending on   Socket/fallback/fallback-net</span><br><span class="line">DHCPDISCOVER from 6c:ad:ad:00:00:ef via enp138s10f2</span><br><span class="line">DHCPOFFER on 192.167.27.56 to 6c:ad:ad:00:00:ef (oru.faca.com) via enp138s10f2</span><br><span class="line">DHCPREQUEST for 192.167.27.56 (192.167.27.54) from 6c:ad:ad:00:00:ef (oru.faca.com) via enp138s10f2</span><br><span class="line">DHCPACK on 192.167.27.56 to 6c:ad:ad:00:00:ef (oru.faca.com) via enp138s10f2</span><br><span class="line">DHCPREQUEST for 192.167.27.56 (192.167.27.54) from 6c:ad:ad:00:00:ef (oru.faca.com) via ens1f2</span><br><span class="line">DHCPACK on 192.167.27.56 to 6c:ad:ad:00:00:ef (oru.faca.com) via ens1f2</span><br></pre></td></tr></table></figure></li><li><p>connmanctl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@arria10:~/test# connmanctl services</span><br><span class="line">*A  Wired                ethernet_6cadad0000ef_cable</span><br><span class="line">root@arria10:~/test# connmanctl services ethernet_6cadad0000ef_cable</span><br><span class="line">/net/connman/service/ethernet_6cadad0000ef_cable</span><br><span class="line">  Type = ethernet</span><br><span class="line">  Security = [  ]</span><br><span class="line">  State = idle</span><br><span class="line">  Favorite = True</span><br><span class="line">  Immutable = False</span><br><span class="line">  AutoConnect = True</span><br><span class="line">  Name = Wired</span><br><span class="line">  Ethernet = [ Method=auto, Interface=qse-eth, Address=6C:AD:AD:00:00:EF, MTU=4000 ]</span><br><span class="line">  IPv4 = [  ]</span><br><span class="line">  IPv4.Configuration = [ Method=off ]</span><br><span class="line">  IPv6 = [  ]</span><br><span class="line">  IPv6.Configuration = [ Method=off ]</span><br><span class="line">  Nameservers = [  ]</span><br><span class="line">  Nameservers.Configuration = [  ]</span><br><span class="line">  Timeservers = [  ]</span><br><span class="line">  Timeservers.Configuration = [  ]</span><br><span class="line">  Domains = [  ]</span><br><span class="line">  Domains.Configuration = [  ]</span><br><span class="line">  Proxy = [  ]</span><br><span class="line">  Proxy.Configuration = [  ]</span><br><span class="line">  Provider = [  ]</span><br></pre></td></tr></table></figure></li><li><p>查RU有沒有發出DHCP request<br>tcpdump -i eth0 udp port 67 and port 68 -vvv</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ptp4l_note</title>
      <link href="/posts/637cddd5/"/>
      <url>/posts/637cddd5/</url>
      
        <content type="html"><![CDATA[<h1 id="ptp4l-i-eno2-m-f-ptp4l-multicast-server-conf-l-7"><a href="#ptp4l-i-eno2-m-f-ptp4l-multicast-server-conf-l-7" class="headerlink" title="ptp4l -i eno2 -m -f ptp4l-multicast-server.conf -l 7"></a>ptp4l -i eno2 -m -f ptp4l-multicast-server.conf -l 7</h1><p>…<br>ptp4l[…]: driver rejected most general HWTSTAMP filter<br>ptp4l[…]: ioctl SIOCSHWTSTAMP failed: Numerical result out of range</p><p>=&gt; The nic card don’t have one-step hardware.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>minicom</title>
      <link href="/posts/a32dc298/"/>
      <url>/posts/a32dc298/</url>
      
        <content type="html"><![CDATA[<ul><li><p>列出 tty 設備<br>$ dmesg | grep tty</p></li><li><p>執行<br>$ sudo minicom /dev/ttyUSB0<br><img src="/posts/a32dc298/image03.png" alt></p></li><li><p>menu<br>=&gt; crtl + A then Z<br><img src="/posts/a32dc298/image04.png" alt></p></li><li><p>config<br>=&gt; O<br><img src="/posts/a32dc298/image01.png" alt><br><img src="/posts/a32dc298/image02.png" alt></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>supervisor_on_python3</title>
      <link href="/posts/14029df0/"/>
      <url>/posts/14029df0/</url>
      
        <content type="html"><![CDATA[<ul><li>Installed failed<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Downloading https://files.pythonhosted.org/packages/a6/41/65ad5bd66230b173eb4d0b8810230f3a9c59ef52ae066e540b6b99895db7/supervisor-3.1.3.tar.gz (391kB)</span><br><span class="line">  100% |████████████████████████████████| 399kB 6.5MB/s</span><br><span class="line">  Complete output from command python setup.py egg_info:</span><br><span class="line">  Supervisor requires Python 2.4 or later but does not work on any version of Python 3.  You are using version 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:06:47) [MSC v.1914 32 bit (Intel)].  Please install using a supported version.</span><br><span class="line"></span><br><span class="line">  ----------------------------------------</span><br></pre></td></tr></table></figure></li><li>supervisor link<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ pip install git+https://github.com/Supervisor/supervisor</span><br><span class="line">Collecting git+https://github.com/Supervisor/supervisor</span><br><span class="line">  Cloning https://github.com/Supervisor/supervisor to c:\users\831392\appdata\local\temp\pip-req-build-3qfkndwu</span><br><span class="line">Collecting meld3&gt;=1.0.0 (from supervisor==4.0.0.dev0)</span><br><span class="line">  Using cached https://files.pythonhosted.org/packages/b6/ae/e6d731e4b9661642c1b20591d8054855bb5b8281cbfa18f561c2edd783f7/meld3-1.0.2-py2.py3-none-any.whl</span><br><span class="line">Building wheels for collected packages: supervisor</span><br><span class="line">  Running setup.py bdist_wheel for supervisor ... done</span><br><span class="line">  Stored in directory: C:\Users\831392\AppData\Local\Temp\pip-ephem-wheel-cache-ei6ela8q\wheels\28\ee\fa\5e2a0ec95fba620ba05a13a46824ac019dc2fc76dffe6eed2c</span><br><span class="line">Successfully built supervisor</span><br><span class="line">Installing collected packages: meld3, supervisor</span><br><span class="line">Successfully installed meld3-1.0.2 supervisor-4.0.0.dev0</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>flask_shell</title>
      <link href="/posts/8623ed20/"/>
      <url>/posts/8623ed20/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ flask shell</span><br><span class="line">Python 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:06:47) [MSC v.1914 32 bit (Intel)] on win32</span><br><span class="line">App: app [production]</span><br><span class="line">Instance: C:\tmp\work\20180828_kangaroo\backend\kangaroo\instance</span><br><span class="line">&gt;&gt;&gt; from app.models.User import User</span><br><span class="line">&gt;&gt;&gt; admin = User(username=&apos;aptg_hq@perobot.com.tw&apos;)</span><br><span class="line">&gt;&gt;&gt; admin.password = &apos;123456&apos;</span><br><span class="line">&gt;&gt;&gt; from app.foundation import db</span><br><span class="line">&gt;&gt;&gt; db.session.add(admin)</span><br><span class="line">&gt;&gt;&gt; db.session.commit()</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>android_setup_opencv</title>
      <link href="/posts/29bb5527/"/>
      <url>/posts/29bb5527/</url>
      
        <content type="html"><![CDATA[<ol><li>download opencv sdk for Android<br><a href="https://opencv.org/releases/" target="_blank" rel="noopener">https://opencv.org/releases/</a></li></ol><p><a href="https://blog.csdn.net/userhu2012/article/details/89522851" target="_blank" rel="noopener">https://blog.csdn.net/userhu2012/article/details/89522851</a></p><p><img src="/posts/29bb5527/image_01.png" alt></p><p><img src="/posts/29bb5527/image_02.png" alt></p><p>File -&gt; New -&gt; Import Module…<br><img src="/posts/29bb5527/image_03.png" alt></p><p><img src="/posts/29bb5527/image_04.png" alt></p><p>File -&gt; Project Structure… -&gt; app -&gt; Dependencies -&gt; choose :openCVLibrary411</p><p>modify openCVLibrary411 build.gradle</p><ol><li>apply plugin: ‘com.android.application’ to apply plugin: ‘com.android.library’</li><li>remove defaultConfig: applicationId “org.opencv”</li><li>add minSdkVersion and targetSdkVersion in defaultConfig</li></ol><p>copy opencv-4.1.1-android-sdk\OpenCV-android-sdk\sdk\native\libs to FacePad\app\src\main\jniLibs</p><p>add config in app:build.gradle</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sourceSets &#123;</span><br><span class="line">    main &#123;</span><br><span class="line">        jniLibs.srcDirs = [&apos;src/main/jniLibs&apos;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>android_looper_handler_thread</title>
      <link href="/posts/21332ed/"/>
      <url>/posts/21332ed/</url>
      
        <content type="html"><![CDATA[<h1 id="Looper-Handler-Thread"><a href="#Looper-Handler-Thread" class="headerlink" title="Looper/Handler/Thread"></a>Looper/Handler/Thread</h1><ol><li>Android的系統中，透過Looper、Handler來implement消息循環機制</li><li>每一條thread都可以有自己的一個Looper，也只能有一個</li><li>By default, thread是不沒有配置Looper的</li><li>Looper.prepare(): 創建一個Looper給thread</li><li>Looper.loop(): 進入message loop</li><li>create Handler時可以指定一個Looper，若沒有特別指定，預設會是當前thread的Looper</li><li>Looper負責message queue跟message loop的管理</li><li>Handler主要是<br>  a. 送message到Looper的message queue去 // 透過mHandler.sendMessage(msg)<br>  b. 處理Looper中，排程到的message // 透過handler中override的handleMessage function</li><li>Looper.myLooper(): 用來取得當前thread的Looper</li><li>Looper.getMainLooper(): 用來取得當前process的main thread的Looper</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 創建一條thread，並配置Looper</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LooperThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">     <span class="keyword">public</span> Handler mHandler;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          Looper.prepare();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          mHandler = <span class="keyword">new</span> Handler() &#123;</span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">                    ...</span><br><span class="line">               &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          Looper.loop();</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>build_apk_by_command</title>
      <link href="/posts/6d1dbee1/"/>
      <url>/posts/6d1dbee1/</url>
      
        <content type="html"><![CDATA[<p>D:\work\perobot\FaceRecognizeApk&gt; gradlew build</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>android_anr</title>
      <link href="/posts/7bb0d15b/"/>
      <url>/posts/7bb0d15b/</url>
      
        <content type="html"><![CDATA[<p>ui线程阻塞5秒，广播阻塞10秒，service阻塞20秒都会产生anr异常</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android_base64_image_on_ImageView</title>
      <link href="/posts/9cde5900/"/>
      <url>/posts/9cde5900/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.util.Base64;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"></span><br><span class="line">ImageView img = findViewById(R.id.img);</span><br><span class="line"><span class="keyword">byte</span>[] bytes = Base64.decode(base64_img, Base64.DEFAULT);</span><br><span class="line">img.setImageBitmap(BitmapFactory.decodeByteArray(bytes, <span class="number">0</span>, bytes.length));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>andriod_AppManager</title>
      <link href="/posts/508d484e/"/>
      <url>/posts/508d484e/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/imtianx/AndroidLearningNotes/blob/master/android-tools/AppManager.java" target="_blank" rel="noopener">AndroidLearningNotes/AppManager.java at master · imtianx/AndroidLearningNotes · GitHub</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.foxconn.rtspplayer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Stack&lt;Activity&gt; activityStack;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> AppManager instance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">AppManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> AppManager <span class="title">getAppManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> AppManager();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addActivity</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (activityStack == <span class="keyword">null</span>) &#123;</span><br><span class="line">            activityStack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        activityStack.add(activity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Activity <span class="title">currentActivity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> activityStack.lastElement();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">finishActivity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Activity activity = activityStack.lastElement();</span><br><span class="line">        finishActivity(activity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">finishActivity</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (activity != <span class="keyword">null</span> &amp;&amp; !activity.isFinishing()) &#123;</span><br><span class="line">            activityStack.remove(activity);</span><br><span class="line">            activity.finish();</span><br><span class="line">            activity = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">finishActivity</span><span class="params">(Class&lt;?&gt; cls)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Activity activity : activityStack) &#123;</span><br><span class="line">            <span class="keyword">if</span> (activity.getClass().equals(cls)) &#123;</span><br><span class="line">                finishActivity(activity);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">finishAllActivity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, size = activityStack.size(); i &lt; size; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != activityStack.get(i)) &#123;</span><br><span class="line">                finishActivity(activityStack.get(i));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        activityStack.clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Activity <span class="title">getActivity</span><span class="params">(Class&lt;?&gt; cls)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (activityStack != <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">for</span> (Activity activity : activityStack) &#123;</span><br><span class="line">                <span class="keyword">if</span> (activity.getClass().equals(cls)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> activity;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Stack&lt;Activity&gt; <span class="title">getActivitys</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> activityStack;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AppExit</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            finishAllActivity();</span><br><span class="line">            android.os.Process.killProcess(android.os.Process.myPid());</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ignored) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getActivityCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = activityStack.size();</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeActivity</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (activityStack == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (activityStack.contains(activity)) &#123;</span><br><span class="line">            activityStack.remove(activity);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (activity != <span class="keyword">null</span> &amp;&amp; !activity.isFinishing()) &#123;</span><br><span class="line">            activity.finish();</span><br><span class="line">            activity = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android_ACTION_TIME_TICK</title>
      <link href="/posts/b35ea58e/"/>
      <url>/posts/b35ea58e/</url>
      
        <content type="html"><![CDATA[<h1 id="ACTION-TIME-TICK"><a href="#ACTION-TIME-TICK" class="headerlink" title="ACTION_TIME_TICK"></a>ACTION_TIME_TICK</h1><p>這個廣播動作是以每分鐘一次的形式發送。但你不能通過在manifest.xml裡静態註冊，只能在代碼里通過registerReceiver()方法動態註冊</p><p><a href="https://www.jianshu.com/p/ca780d0a09c7" target="_blank" rel="noopener">Intent.ACTION_TIME_TICK - 简书</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.ActivityManager;</span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.IntentFilter;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"hh_MainActivity"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        IntentFilter filter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">        filter.addAction(Intent.ACTION_TIME_TICK);</span><br><span class="line">        registerReceiver(receiver, filter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> BroadcastReceiver receiver = <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">            String action = intent.getAction();</span><br><span class="line">            <span class="keyword">if</span> (action.equals(Intent.ACTION_TIME_TICK)) &#123;</span><br><span class="line">                Log.d(TAG, <span class="string">"Receive Intent.ACTION_TIME_TICK intent"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isServiceRunning</span><span class="params">(Class&lt;?&gt; serviceClass)</span> </span>&#123;</span><br><span class="line">        ActivityManager activityManager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);</span><br><span class="line">        List&lt;ActivityManager.RunningServiceInfo&gt; serviceList = activityManager</span><br><span class="line">                .getRunningServices(Integer.MAX_VALUE);</span><br><span class="line">        <span class="keyword">if</span> (serviceList == <span class="keyword">null</span> || serviceList.size() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (ActivityManager.RunningServiceInfo info : serviceList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (info.service.getClassName().equals(serviceClass.getName()))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>android_webview_destroy</title>
      <link href="/posts/b7885a43/"/>
      <url>/posts/b7885a43/</url>
      
        <content type="html"><![CDATA[<p>WebView造成記憶體泄露</p><p>關於WebView的記憶體泄露，因為WebView在加載網頁後會長期占用記憶體而不能被釋放，因此我們在Activity銷毀後要調用它的destory()方法來銷毀它以釋放記憶體。<br>最終的解決方案是：在銷毀WebView之前需要先將WebView從父容器中移除，然後在銷毀WebView。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    <span class="comment">// 先從父控件中移除WebView</span></span><br><span class="line">    mWebViewContainer.removeView(mWebView);</span><br><span class="line">    mWebView.stopLoading();</span><br><span class="line">    mWebView.getSettings().setJavaEnabled(<span class="keyword">false</span>);</span><br><span class="line">    mWebView.clearHistory();</span><br><span class="line">    mWebView.removeAllViews();</span><br><span class="line">    mWebView.destroy();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vimrc_fia</title>
      <link href="/posts/89b3b055/"/>
      <url>/posts/89b3b055/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br></pre></td><td class="code"><pre><span class="line">&quot; Fisa-vim-config</span><br><span class="line">&quot; http://fisadev.github.io/fisa-vim-config/</span><br><span class="line">&quot; version: 8.3.1</span><br><span class="line"></span><br><span class="line">&quot; ============================================================================</span><br><span class="line">&quot; Vim-plug initialization</span><br><span class="line">&quot; Avoid modify this section, unless you are very sure of what you are doing</span><br><span class="line"></span><br><span class="line">let vim_plug_just_installed = 0</span><br><span class="line">let vim_plug_path = expand(&apos;~/.vim/autoload/plug.vim&apos;)</span><br><span class="line">if !filereadable(vim_plug_path)</span><br><span class="line">    echo &quot;Installing Vim-plug...&quot;</span><br><span class="line">    echo &quot;&quot;</span><br><span class="line">    silent !mkdir -p ~/.vim/autoload</span><br><span class="line">    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br><span class="line">    let vim_plug_just_installed = 1</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; manually load vim-plug the first time</span><br><span class="line">if vim_plug_just_installed</span><br><span class="line">    :execute &apos;source &apos;.fnameescape(vim_plug_path)</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; Obscure hacks done, you can now modify the rest of the .vimrc as you wish :)</span><br><span class="line"></span><br><span class="line">&quot; ============================================================================</span><br><span class="line">&quot; Active plugins</span><br><span class="line">&quot; You can disable or add new ones here:</span><br><span class="line"></span><br><span class="line">&quot; this needs to be here, so vim-plug knows we are declaring the plugins we</span><br><span class="line">&quot; want to use</span><br><span class="line">call plug#begin(&apos;~/.vim/plugged&apos;)</span><br><span class="line"></span><br><span class="line">&quot; Plugins from github repos:</span><br><span class="line"></span><br><span class="line">&quot; Override configs by directory </span><br><span class="line">Plug &apos;arielrossanigo/dir-configs-override.vim&apos;</span><br><span class="line">&quot; Better file browser</span><br><span class="line">Plug &apos;scrooloose/nerdtree&apos;</span><br><span class="line">&quot; Code commenter</span><br><span class="line">Plug &apos;scrooloose/nerdcommenter&apos;</span><br><span class="line">&quot; Class/module browser</span><br><span class="line">Plug &apos;majutsushi/tagbar&apos;</span><br><span class="line">&quot; Code and files fuzzy finder</span><br><span class="line">Plug &apos;ctrlpvim/ctrlp.vim&apos;</span><br><span class="line">&quot; Extension to ctrlp, for fuzzy command finder</span><br><span class="line">Plug &apos;fisadev/vim-ctrlp-cmdpalette&apos;</span><br><span class="line">&quot; Zen coding</span><br><span class="line">Plug &apos;mattn/emmet-vim&apos;</span><br><span class="line">&quot; Git integration</span><br><span class="line">Plug &apos;motemen/git-vim&apos;</span><br><span class="line">&quot; Tab list panel</span><br><span class="line">Plug &apos;kien/tabman.vim&apos;</span><br><span class="line">&quot; Airline</span><br><span class="line">Plug &apos;vim-airline/vim-airline&apos;</span><br><span class="line">Plug &apos;vim-airline/vim-airline-themes&apos;</span><br><span class="line">&quot; Terminal Vim with 256 colors colorscheme</span><br><span class="line">Plug &apos;fisadev/fisa-vim-colorscheme&apos;</span><br><span class="line">&quot; Consoles as buffers</span><br><span class="line">Plug &apos;rosenfeld/conque-term&apos;</span><br><span class="line">&quot; Pending tasks list</span><br><span class="line">Plug &apos;fisadev/FixedTaskList.vim&apos;</span><br><span class="line">&quot; Surround</span><br><span class="line">Plug &apos;tpope/vim-surround&apos;</span><br><span class="line">&quot; Autoclose</span><br><span class="line">Plug &apos;Townk/vim-autoclose&apos;</span><br><span class="line">&quot; Indent text object</span><br><span class="line">Plug &apos;michaeljsmith/vim-indent-object&apos;</span><br><span class="line">&quot; Indentation based movements</span><br><span class="line">Plug &apos;jeetsukumaran/vim-indentwise&apos;</span><br><span class="line">&quot; Python autocompletion, go to definition.</span><br><span class="line">Plug &apos;davidhalter/jedi-vim&apos;</span><br><span class="line">&quot; Better autocompletion</span><br><span class="line">Plug &apos;Shougo/neocomplcache.vim&apos;</span><br><span class="line">&quot; Snippets manager (SnipMate), dependencies, and snippets repo</span><br><span class="line">Plug &apos;MarcWeber/vim-addon-mw-utils&apos;</span><br><span class="line">Plug &apos;tomtom/tlib_vim&apos;</span><br><span class="line">Plug &apos;honza/vim-snippets&apos;</span><br><span class="line">Plug &apos;garbas/vim-snipmate&apos;</span><br><span class="line">&quot; Git/mercurial/others diff icons on the side of the file lines</span><br><span class="line">Plug &apos;mhinz/vim-signify&apos;</span><br><span class="line">&quot; Automatically sort python imports</span><br><span class="line">Plug &apos;fisadev/vim-isort&apos;</span><br><span class="line">&quot; Drag visual blocks arround</span><br><span class="line">Plug &apos;fisadev/dragvisuals.vim&apos;</span><br><span class="line">&quot; Window chooser</span><br><span class="line">Plug &apos;t9md/vim-choosewin&apos;</span><br><span class="line">&quot; Python and other languages code checker</span><br><span class="line">Plug &apos;scrooloose/syntastic&apos;</span><br><span class="line">&quot; Paint css colors with the real color</span><br><span class="line">Plug &apos;lilydjwg/colorizer&apos;</span><br><span class="line">&quot; Ack code search (requires ack installed in the system)</span><br><span class="line">Plug &apos;mileszs/ack.vim&apos;</span><br><span class="line">if has(&apos;python&apos;)</span><br><span class="line">    &quot; YAPF formatter for Python</span><br><span class="line">    Plug &apos;pignacio/vim-yapf-format&apos;</span><br><span class="line">endif</span><br><span class="line">&quot; Relative numbering of lines (0 is the current line)</span><br><span class="line">&quot; (disabled by default because is very intrusive and can&apos;t be easily toggled</span><br><span class="line">&quot; on/off. When the plugin is present, will always activate the relative </span><br><span class="line">&quot; numbering every time you go to normal mode. Author refuses to add a setting </span><br><span class="line">&quot; to avoid that)</span><br><span class="line">&quot; Plug &apos;myusuf3/numbers.vim&apos;</span><br><span class="line"></span><br><span class="line">&quot; Plugins from vim-scripts repos:</span><br><span class="line"></span><br><span class="line">&quot; Search results counter</span><br><span class="line">Plug &apos;vim-scripts/IndexedSearch&apos;</span><br><span class="line">&quot; XML/HTML tags navigation</span><br><span class="line">Plug &apos;vim-scripts/matchit.zip&apos;</span><br><span class="line">&quot; Gvim colorscheme</span><br><span class="line">Plug &apos;vim-scripts/Wombat&apos;</span><br><span class="line">&quot; Yank history navigation</span><br><span class="line">Plug &apos;vim-scripts/YankRing.vim&apos;</span><br><span class="line"></span><br><span class="line">&quot; Tell vim-plug we finished declaring plugins, so it can load them</span><br><span class="line">call plug#end()</span><br><span class="line"></span><br><span class="line">&quot; ============================================================================</span><br><span class="line">&quot; Install plugins the first time vim runs</span><br><span class="line"></span><br><span class="line">if vim_plug_just_installed</span><br><span class="line">    echo &quot;Installing Bundles, please ignore key map error messages&quot;</span><br><span class="line">    :PlugInstall</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; ============================================================================</span><br><span class="line">&quot; Vim settings and mappings</span><br><span class="line">&quot; You can edit them as you wish</span><br><span class="line"></span><br><span class="line">set ic</span><br><span class="line"></span><br><span class="line">&quot; no vi-compatible</span><br><span class="line">set nocompatible</span><br><span class="line"></span><br><span class="line">&quot; allow plugins by file type (required for plugins!)</span><br><span class="line">filetype plugin on</span><br><span class="line">filetype indent on</span><br><span class="line"></span><br><span class="line">&quot; tabs and spaces handling</span><br><span class="line">set expandtab</span><br><span class="line">set tabstop=4</span><br><span class="line">set softtabstop=4</span><br><span class="line">set shiftwidth=4</span><br><span class="line"></span><br><span class="line">&quot; tab length exceptions on some file types</span><br><span class="line">autocmd FileType html setlocal shiftwidth=4 tabstop=4 softtabstop=4</span><br><span class="line">autocmd FileType htmldjango setlocal shiftwidth=4 tabstop=4 softtabstop=4</span><br><span class="line">autocmd FileType javascript setlocal shiftwidth=4 tabstop=4 softtabstop=4</span><br><span class="line"></span><br><span class="line">&quot; always show status bar</span><br><span class="line">set ls=2</span><br><span class="line"></span><br><span class="line">&quot; incremental search</span><br><span class="line">set incsearch</span><br><span class="line">&quot; highlighted search results</span><br><span class="line">set hlsearch</span><br><span class="line"></span><br><span class="line">&quot; syntax highlight on</span><br><span class="line">syntax on</span><br><span class="line"></span><br><span class="line">&quot; show line numbers</span><br><span class="line">set nu</span><br><span class="line"></span><br><span class="line">&quot; tab navigation mappings</span><br><span class="line">map tn :tabn&lt;CR&gt;</span><br><span class="line">map tp :tabp&lt;CR&gt;</span><br><span class="line">map tm :tabm </span><br><span class="line">map tt :tabnew </span><br><span class="line">map ts :tab split&lt;CR&gt;</span><br><span class="line">map &lt;C-S-Right&gt; :tabn&lt;CR&gt;</span><br><span class="line">imap &lt;C-S-Right&gt; &lt;ESC&gt;:tabn&lt;CR&gt;</span><br><span class="line">map &lt;C-S-Left&gt; :tabp&lt;CR&gt;</span><br><span class="line">imap &lt;C-S-Left&gt; &lt;ESC&gt;:tabp&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; navigate windows with meta+arrows</span><br><span class="line">map &lt;M-Right&gt; &lt;c-w&gt;l</span><br><span class="line">map &lt;M-Left&gt; &lt;c-w&gt;h</span><br><span class="line">map &lt;M-Up&gt; &lt;c-w&gt;k</span><br><span class="line">map &lt;M-Down&gt; &lt;c-w&gt;j</span><br><span class="line">imap &lt;M-Right&gt; &lt;ESC&gt;&lt;c-w&gt;l</span><br><span class="line">imap &lt;M-Left&gt; &lt;ESC&gt;&lt;c-w&gt;h</span><br><span class="line">imap &lt;M-Up&gt; &lt;ESC&gt;&lt;c-w&gt;k</span><br><span class="line">imap &lt;M-Down&gt; &lt;ESC&gt;&lt;c-w&gt;j</span><br><span class="line"></span><br><span class="line">&quot; old autocomplete keyboard shortcut</span><br><span class="line">imap &lt;C-J&gt; &lt;C-X&gt;&lt;C-O&gt;</span><br><span class="line"></span><br><span class="line">&quot; Comment this line to enable autocompletion preview window</span><br><span class="line">&quot; (displays documentation related to the selected completion option)</span><br><span class="line">&quot; Disabled by default because preview makes the window flicker</span><br><span class="line">set completeopt-=preview</span><br><span class="line"></span><br><span class="line">&quot; save as sudo</span><br><span class="line">ca w!! w !sudo tee &quot;%&quot;</span><br><span class="line"></span><br><span class="line">&quot; simple recursive grep</span><br><span class="line">nmap ,r :Ack </span><br><span class="line">nmap ,wr :Ack &lt;cword&gt;&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; use 256 colors when possible</span><br><span class="line">if (&amp;term =~? &apos;mlterm\|xterm\|xterm-256\|screen-256&apos;) || has(&apos;nvim&apos;)</span><br><span class="line">    let &amp;t_Co = 256</span><br><span class="line">    colorscheme fisa</span><br><span class="line">else</span><br><span class="line">    colorscheme delek</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; colors for gvim</span><br><span class="line">if has(&apos;gui_running&apos;)</span><br><span class="line">    colorscheme wombat</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; when scrolling, keep cursor 3 lines away from screen border</span><br><span class="line">set scrolloff=3</span><br><span class="line"></span><br><span class="line">&quot; autocompletion of files and commands behaves like shell</span><br><span class="line">&quot; (complete only the common part, list the options that match)</span><br><span class="line">set wildmode=list:longest</span><br><span class="line"></span><br><span class="line">&quot; better backup, swap and undos storage</span><br><span class="line">set directory=~/.vim/dirs/tmp     &quot; directory to place swap files in</span><br><span class="line">set backup                        &quot; make backup files</span><br><span class="line">set backupdir=~/.vim/dirs/backups &quot; where to put backup files</span><br><span class="line">set undofile                      &quot; persistent undos - undo after you re-open the file</span><br><span class="line">set undodir=~/.vim/dirs/undos</span><br><span class="line">set viminfo+=n~/.vim/dirs/viminfo</span><br><span class="line">&quot; store yankring history file there too</span><br><span class="line">let g:yankring_history_dir = &apos;~/.vim/dirs/&apos;</span><br><span class="line"></span><br><span class="line">&quot; create needed directories if they don&apos;t exist</span><br><span class="line">if !isdirectory(&amp;backupdir)</span><br><span class="line">    call mkdir(&amp;backupdir, &quot;p&quot;)</span><br><span class="line">endif</span><br><span class="line">if !isdirectory(&amp;directory)</span><br><span class="line">    call mkdir(&amp;directory, &quot;p&quot;)</span><br><span class="line">endif</span><br><span class="line">if !isdirectory(&amp;undodir)</span><br><span class="line">    call mkdir(&amp;undodir, &quot;p&quot;)</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot; ============================================================================</span><br><span class="line">&quot; Plugins settings and mappings</span><br><span class="line">&quot; Edit them as you wish.</span><br><span class="line"></span><br><span class="line">&quot; Tagbar ----------------------------- </span><br><span class="line"></span><br><span class="line">&quot; toggle tagbar display</span><br><span class="line">map &lt;F4&gt; :TagbarToggle&lt;CR&gt;</span><br><span class="line">&quot; autofocus on tagbar open</span><br><span class="line">let g:tagbar_autofocus = 1</span><br><span class="line"></span><br><span class="line">&quot; NERDTree ----------------------------- </span><br><span class="line"></span><br><span class="line">&quot; toggle nerdtree display</span><br><span class="line">map &lt;F3&gt; :NERDTreeToggle&lt;CR&gt;</span><br><span class="line">&quot; open nerdtree with the current file selected</span><br><span class="line">nmap ,t :NERDTreeFind&lt;CR&gt;</span><br><span class="line">&quot; don;t show these file types</span><br><span class="line">let NERDTreeIgnore = [&apos;\.pyc$&apos;, &apos;\.pyo$&apos;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot; Tasklist ------------------------------</span><br><span class="line"></span><br><span class="line">&quot; show pending tasks list</span><br><span class="line">map &lt;F2&gt; :TaskList&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; CtrlP ------------------------------</span><br><span class="line"></span><br><span class="line">&quot; file finder mapping</span><br><span class="line">let g:ctrlp_map = &apos;,e&apos;</span><br><span class="line">&quot; tags (symbols) in current file finder mapping</span><br><span class="line">nmap ,g :CtrlPBufTag&lt;CR&gt;</span><br><span class="line">&quot; tags (symbols) in all files finder mapping</span><br><span class="line">nmap ,G :CtrlPBufTagAll&lt;CR&gt;</span><br><span class="line">&quot; general code finder in all files mapping</span><br><span class="line">nmap ,f :CtrlPLine&lt;CR&gt;</span><br><span class="line">&quot; recent files finder mapping</span><br><span class="line">nmap ,m :CtrlPMRUFiles&lt;CR&gt;</span><br><span class="line">&quot; commands finder mapping</span><br><span class="line">nmap ,c :CtrlPCmdPalette&lt;CR&gt;</span><br><span class="line">&quot; to be able to call CtrlP with default search text</span><br><span class="line">function! CtrlPWithSearchText(search_text, ctrlp_command_end)</span><br><span class="line">    execute &apos;:CtrlP&apos; . a:ctrlp_command_end</span><br><span class="line">    call feedkeys(a:search_text)</span><br><span class="line">endfunction</span><br><span class="line">&quot; same as previous mappings, but calling with current word as default text</span><br><span class="line">nmap ,wg :call CtrlPWithSearchText(expand(&apos;&lt;cword&gt;&apos;), &apos;BufTag&apos;)&lt;CR&gt;</span><br><span class="line">nmap ,wG :call CtrlPWithSearchText(expand(&apos;&lt;cword&gt;&apos;), &apos;BufTagAll&apos;)&lt;CR&gt;</span><br><span class="line">nmap ,wf :call CtrlPWithSearchText(expand(&apos;&lt;cword&gt;&apos;), &apos;Line&apos;)&lt;CR&gt;</span><br><span class="line">nmap ,we :call CtrlPWithSearchText(expand(&apos;&lt;cword&gt;&apos;), &apos;&apos;)&lt;CR&gt;</span><br><span class="line">nmap ,pe :call CtrlPWithSearchText(expand(&apos;&lt;cfile&gt;&apos;), &apos;&apos;)&lt;CR&gt;</span><br><span class="line">nmap ,wm :call CtrlPWithSearchText(expand(&apos;&lt;cword&gt;&apos;), &apos;MRUFiles&apos;)&lt;CR&gt;</span><br><span class="line">nmap ,wc :call CtrlPWithSearchText(expand(&apos;&lt;cword&gt;&apos;), &apos;CmdPalette&apos;)&lt;CR&gt;</span><br><span class="line">&quot; don&apos;t change working directory</span><br><span class="line">let g:ctrlp_working_path_mode = 0</span><br><span class="line">&quot; ignore these files and folders on file finder</span><br><span class="line">let g:ctrlp_custom_ignore = &#123;</span><br><span class="line">  \ &apos;dir&apos;:  &apos;\v[\/](\.git|\.hg|\.svn|node_modules)$&apos;,</span><br><span class="line">  \ &apos;file&apos;: &apos;\.pyc$\|\.pyo$&apos;,</span><br><span class="line">  \ &#125;</span><br><span class="line"></span><br><span class="line">&quot; Syntastic ------------------------------</span><br><span class="line"></span><br><span class="line">&quot; show list of errors and warnings on the current file</span><br><span class="line">nmap &lt;leader&gt;e :Errors&lt;CR&gt;</span><br><span class="line">&quot; check also when just opened the file</span><br><span class="line">let g:syntastic_check_on_open = 1</span><br><span class="line">&quot; don&apos;t put icons on the sign column (it hides the vcs status icons of signify)</span><br><span class="line">let g:syntastic_enable_signs = 0</span><br><span class="line">&quot; custom icons (enable them if you use a patched font, and enable the previous </span><br><span class="line">&quot; setting)</span><br><span class="line">&quot;let g:syntastic_error_symbol = &apos;✗&apos;</span><br><span class="line">&quot;let g:syntastic_warning_symbol = &apos;⚠&apos;</span><br><span class="line">&quot;let g:syntastic_style_error_symbol = &apos;✗&apos;</span><br><span class="line">&quot;let g:syntastic_style_warning_symbol = &apos;⚠&apos;</span><br><span class="line"></span><br><span class="line">&quot; Jedi-vim ------------------------------</span><br><span class="line"></span><br><span class="line">&quot; All these mappings work only for python code:</span><br><span class="line">&quot; Go to definition</span><br><span class="line">let g:jedi#goto_command = &apos;,d&apos;</span><br><span class="line">&quot; Find ocurrences</span><br><span class="line">let g:jedi#usages_command = &apos;,o&apos;</span><br><span class="line">&quot; Find assignments</span><br><span class="line">let g:jedi#goto_assignments_command = &apos;,a&apos;</span><br><span class="line">&quot; Go to definition in new tab</span><br><span class="line">nmap ,D :tab split&lt;CR&gt;:call jedi#goto()&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; NeoComplCache ------------------------------</span><br><span class="line"></span><br><span class="line">&quot; most of them not documented because I&apos;m not sure how they work</span><br><span class="line">&quot; (docs aren&apos;t good, had to do a lot of trial and error to make </span><br><span class="line">&quot; it play nice)</span><br><span class="line">let g:neocomplcache_enable_at_startup = 1</span><br><span class="line">let g:neocomplcache_enable_ignore_case = 1</span><br><span class="line">let g:neocomplcache_enable_smart_case = 1</span><br><span class="line">let g:neocomplcache_enable_auto_select = 1</span><br><span class="line">let g:neocomplcache_enable_fuzzy_completion = 1</span><br><span class="line">let g:neocomplcache_enable_camel_case_completion = 1</span><br><span class="line">let g:neocomplcache_enable_underbar_completion = 1</span><br><span class="line">let g:neocomplcache_fuzzy_completion_start_length = 1</span><br><span class="line">let g:neocomplcache_auto_completion_start_length = 1</span><br><span class="line">let g:neocomplcache_manual_completion_start_length = 1</span><br><span class="line">let g:neocomplcache_min_keyword_length = 1</span><br><span class="line">let g:neocomplcache_min_syntax_length = 1</span><br><span class="line">&quot; complete with workds from any opened file</span><br><span class="line">let g:neocomplcache_same_filetype_lists = &#123;&#125;</span><br><span class="line">let g:neocomplcache_same_filetype_lists._ = &apos;_&apos;</span><br><span class="line"></span><br><span class="line">&quot; TabMan ------------------------------</span><br><span class="line"></span><br><span class="line">&quot; mappings to toggle display, and to focus on it</span><br><span class="line">let g:tabman_toggle = &apos;tl&apos;</span><br><span class="line">let g:tabman_focus  = &apos;tf&apos;</span><br><span class="line"></span><br><span class="line">&quot; Autoclose ------------------------------</span><br><span class="line"></span><br><span class="line">&quot; Fix to let ESC work as espected with Autoclose plugin</span><br><span class="line">let g:AutoClosePumvisible = &#123;&quot;ENTER&quot;: &quot;\&lt;C-Y&gt;&quot;, &quot;ESC&quot;: &quot;\&lt;ESC&gt;&quot;&#125;</span><br><span class="line"></span><br><span class="line">&quot; DragVisuals ------------------------------</span><br><span class="line"></span><br><span class="line">&quot; mappings to move blocks in 4 directions</span><br><span class="line">vmap &lt;expr&gt; &lt;S-M-LEFT&gt; DVB_Drag(&apos;left&apos;)</span><br><span class="line">vmap &lt;expr&gt; &lt;S-M-RIGHT&gt; DVB_Drag(&apos;right&apos;)</span><br><span class="line">vmap &lt;expr&gt; &lt;S-M-DOWN&gt; DVB_Drag(&apos;down&apos;)</span><br><span class="line">vmap &lt;expr&gt; &lt;S-M-UP&gt; DVB_Drag(&apos;up&apos;)</span><br><span class="line">&quot; mapping to duplicate block</span><br><span class="line">vmap &lt;expr&gt; D DVB_Duplicate()</span><br><span class="line"></span><br><span class="line">&quot; Signify ------------------------------</span><br><span class="line"></span><br><span class="line">&quot; this first setting decides in which order try to guess your current vcs</span><br><span class="line">&quot; UPDATE it to reflect your preferences, it will speed up opening files</span><br><span class="line">let g:signify_vcs_list = [ &apos;git&apos;, &apos;hg&apos; ]</span><br><span class="line">&quot; mappings to jump to changed blocks</span><br><span class="line">nmap &lt;leader&gt;sn &lt;plug&gt;(signify-next-hunk)</span><br><span class="line">nmap &lt;leader&gt;sp &lt;plug&gt;(signify-prev-hunk)</span><br><span class="line">&quot; nicer colors</span><br><span class="line">highlight DiffAdd           cterm=bold ctermbg=none ctermfg=119</span><br><span class="line">highlight DiffDelete        cterm=bold ctermbg=none ctermfg=167</span><br><span class="line">highlight DiffChange        cterm=bold ctermbg=none ctermfg=227</span><br><span class="line">highlight SignifySignAdd    cterm=bold ctermbg=237  ctermfg=119</span><br><span class="line">highlight SignifySignDelete cterm=bold ctermbg=237  ctermfg=167</span><br><span class="line">highlight SignifySignChange cterm=bold ctermbg=237  ctermfg=227</span><br><span class="line"></span><br><span class="line">&quot; Window Chooser ------------------------------</span><br><span class="line"></span><br><span class="line">&quot; mapping</span><br><span class="line">nmap  -  &lt;Plug&gt;(choosewin)</span><br><span class="line">&quot; show big letters</span><br><span class="line">let g:choosewin_overlay_enable = 1</span><br><span class="line"></span><br><span class="line">&quot; Airline ------------------------------</span><br><span class="line"></span><br><span class="line">let g:airline_powerline_fonts = 0</span><br><span class="line">let g:airline_theme = &apos;bubblegum&apos;</span><br><span class="line">let g:airline#extensions#whitespace#enabled = 0</span><br><span class="line"></span><br><span class="line">&quot; to use fancy symbols for airline, uncomment the following lines and use a</span><br><span class="line">&quot; patched font (more info on the README.rst)</span><br><span class="line">&quot;if !exists(&apos;g:airline_symbols&apos;)</span><br><span class="line">&quot;   let g:airline_symbols = &#123;&#125;</span><br><span class="line">&quot;endif</span><br><span class="line">&quot;let g:airline_left_sep = &apos;⮀&apos;</span><br><span class="line">&quot;let g:airline_left_alt_sep = &apos;⮁&apos;</span><br><span class="line">&quot;let g:airline_right_sep = &apos;⮂&apos;</span><br><span class="line">&quot;let g:airline_right_alt_sep = &apos;⮃&apos;</span><br><span class="line">&quot;let g:airline_symbols.branch = &apos;⭠&apos;</span><br><span class="line">&quot;let g:airline_symbols.readonly = &apos;⭤&apos;</span><br><span class="line">&quot;let g:airline_symbols.linenr = &apos;⭡&apos;</span><br><span class="line"></span><br><span class="line">&quot;set mouse=a</span><br><span class="line">&quot;set cursorline</span><br><span class="line">&quot;set cursorcolumn</span><br><span class="line">&quot;set number</span><br><span class="line">&quot;set hlsearch</span><br><span class="line">&quot;set incsearch</span><br><span class="line">&quot;set ic</span><br><span class="line">&quot;set nowrap</span><br><span class="line">&quot;hi Comment cterm=bold ctermfg=DarkCyan</span><br><span class="line">&quot;hi CursorLine cterm=none ctermbg=4 ctermfg=none</span><br><span class="line">&quot;hi CursorColumn cterm=none ctermbg=4 ctermfg=none</span><br><span class="line">&quot;set tabstop=4</span><br><span class="line">&quot;set shiftwidth=4</span><br><span class="line">&quot;set softtabstop=4</span><br><span class="line">&quot;set smarttab</span><br><span class="line">&quot;set expandtab</span><br><span class="line">&quot;set laststatus=2</span><br><span class="line">&quot;set statusline=%4*%&lt;\%m%&lt;[%f\%r%h%w]%=%l,%v\ \ \ \ \ \ \ \ %p%%</span><br><span class="line">&quot;nnoremap &lt;F2&gt; :&lt;C-U&gt;setlocal lcs=tab:&gt;-,trail:-,eol:$ list! list? &lt;CR&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vimrc</title>
      <link href="/posts/7f23291e/"/>
      <url>/posts/7f23291e/</url>
      
        <content type="html"><![CDATA[<h1 id="vimrc"><a href="#vimrc" class="headerlink" title=".vimrc"></a>.vimrc</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> number</span><br><span class="line"><span class="built_in">set</span> hlsearch</span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"><span class="built_in">set</span> ic</span><br><span class="line"><span class="built_in">set</span> nowrap</span><br><span class="line">hi Comment      term=bold               ctermfg=DarkCyan</span><br><span class="line"><span class="built_in">set</span> tabstop=4</span><br><span class="line"><span class="built_in">set</span> shiftwidth=4</span><br><span class="line"><span class="built_in">set</span> laststatus=2</span><br><span class="line"><span class="built_in">set</span> statusline=%4*%&lt;\%m%&lt;[%f\%r%h%w]%=%l,%v\ \ \ \ \ \ \ \ %p%%</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&quot; colorscheme torte</span><br><span class="line">set cursorline</span><br><span class="line">set cursorcolumn</span><br><span class="line">&quot; set t_Co=256</span><br><span class="line">set number</span><br><span class="line">set hlsearch</span><br><span class="line">set incsearch</span><br><span class="line">set ic</span><br><span class="line">set nowrap</span><br><span class="line">hi Comment cterm=bold ctermfg=DarkCyan</span><br><span class="line">&quot; hi LineNr cterm=bold ctermfg=Yellow</span><br><span class="line">hi CursorLine cterm=none ctermbg=4 ctermfg=none</span><br><span class="line">hi CursorColumn cterm=none ctermbg=4 ctermfg=none</span><br><span class="line">set tabstop=4</span><br><span class="line">set shiftwidth=4</span><br><span class="line">set softtabstop=4</span><br><span class="line">set smarttab</span><br><span class="line">set expandtab</span><br><span class="line">set laststatus=2</span><br><span class="line">set statusline=%4*%&lt;\%m%&lt;[%f\%r%h%w]%=%l,%v\ \ \ \ \ \ \ \ %p%%</span><br><span class="line">nnoremap &lt;F2&gt; :&lt;C-U&gt;setlocal lcs=tab:&gt;-,trail:-,eol:$ list! list? &lt;CR&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlite</title>
      <link href="/posts/b8bb8682/"/>
      <url>/posts/b8bb8682/</url>
      
        <content type="html"><![CDATA[<p>sql_create_logfiles_table = “”” CREATE TABLE IF NOT EXISTS logfiles (<br>                                id integer PRIMARY KEY NOT NULL,<br>                                filename text,<br>                                timestamp1 DATETIME DEFAULT CURRENT_TIMESTAMP<br>                                timestamp2 DATE DEFAULT (datetime(‘now’,’localtime’))<br>                            ); “””</p><table><thead><tr><th>id</th><th>filename</th><th>timestamp1</th><th>timestamp2</th></tr></thead><tbody><tr><td>1</td><td>imfr.log.2019-05-01_04</td><td>2019-05-01 07:06:01</td><td>2019-05-01 15:06:01</td></tr><tr><td>2</td><td>imfr.log.2019-04-30_17</td><td>2019-05-01 07:06:01</td><td>2019-05-01 15:06:01</td></tr></tbody></table><ul><li>foreign key</li></ul><p>many to one or one to many</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS families (</span><br><span class="line">     id INTEGER PRIMARY KEY,</span><br><span class="line">     name TEXT NOT NULL);</span><br><span class="line">CREATE TABLE IF NOT EXISTS  articles (</span><br><span class="line">     id INTEGER PRIMARY KEY,</span><br><span class="line">     name TEXT NOT NULL,</span><br><span class="line">     family_id INTEGER,</span><br><span class="line">     FOREIGN KEY(family_id) REFERENCES families(id));</span><br></pre></td></tr></table></figure><p>one to one</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS families (</span><br><span class="line">     id INTEGER PRIMARY KEY,</span><br><span class="line">     name TEXT NOT NULL,</span><br><span class="line">     article_id INTEGER,</span><br><span class="line">     FOREIGN KEY(article_id) REFERENCES articles(id));</span><br><span class="line">CREATE TABLE IF NOT EXISTS  articles (</span><br><span class="line">     id INTEGER PRIMARY KEY,</span><br><span class="line">     name TEXT NOT NULL,</span><br><span class="line">     family_id INTEGER,</span><br><span class="line">     FOREIGN KEY(family_id) REFERENCES families(id));</span><br></pre></td></tr></table></figure><p>many to many</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS families (</span><br><span class="line">     id INTEGER PRIMARY KEY,</span><br><span class="line">     name TEXT NOT NULL);</span><br><span class="line">CREATE TABLE IF NOT EXISTS  articles (</span><br><span class="line">     id INTEGER PRIMARY KEY,</span><br><span class="line">     name TEXT NOT NULL);</span><br><span class="line">CREATE TABLE IF NOT EXISTS articles_families (</span><br><span class="line">     article_id INTEGER,</span><br><span class="line">     family_id INTEGER,</span><br><span class="line">     FOREIGN KEY(article_id) REFERENCES articles(id),</span><br><span class="line">     FOREIGN KEY(family_id) REFERENCES families(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PTT</title>
      <link href="/posts/212cfa1f/"/>
      <url>/posts/212cfa1f/</url>
      
        <content type="html"><![CDATA[<p>requirements.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">appdirs==1.4.3</span><br><span class="line">beautifulsoup4==4.8.1</span><br><span class="line">certifi==2019.9.11</span><br><span class="line">cffi==1.13.0</span><br><span class="line">chardet==3.0.4</span><br><span class="line">cryptography==2.8</span><br><span class="line">future==0.18.1</span><br><span class="line">html5lib==1.0.1</span><br><span class="line">idna==2.8</span><br><span class="line">progressbar2==3.47.0</span><br><span class="line">PTTLibrary==0.8.25</span><br><span class="line">pycparser==2.19</span><br><span class="line">python-telegram-bot==12.2.0</span><br><span class="line">python-utils==2.3.0</span><br><span class="line">requests==2.22.0</span><br><span class="line">six==1.12.0</span><br><span class="line">soupsieve==1.9.4</span><br><span class="line">tornado==6.0.3</span><br><span class="line">uao==0.1.1</span><br><span class="line">uritools==2.2.0</span><br><span class="line">urlextract==0.13.0</span><br><span class="line">urllib3==1.25.6</span><br><span class="line">webencodings==0.5.1</span><br><span class="line">websockets==8.0.2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line">import time</span><br><span class="line">import traceback</span><br><span class="line">import telegram</span><br><span class="line">import urllib.request</span><br><span class="line">from PTTLibrary import PTT</span><br><span class="line">from urlextract import URLExtract</span><br><span class="line"></span><br><span class="line">USERNAME = &quot;qcycp&quot;</span><br><span class="line">PASSWORD = &quot;1234&quot;</span><br><span class="line">TOKEN = &quot;926429631:AAFTAVgcWIXut8IgyYEVUGVtdaQ3wZqWClc&quot;</span><br><span class="line"></span><br><span class="line">def handler(Msg):</span><br><span class="line">    with open(&apos;LogHandler.txt&apos;, &apos;a&apos;, encoding=&apos;utf-8&apos;) as F:</span><br><span class="line">        F.write(Msg + &apos;\n&apos;)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    bot = telegram.Bot(token=TOKEN)</span><br><span class="line">    client_list = list()</span><br><span class="line">    client_list.append(&apos;916571214&apos;)</span><br><span class="line">    client_list.append(&apos;972956652&apos;)</span><br><span class="line">    client_list.append(&apos;656239373&apos;)</span><br><span class="line"></span><br><span class="line">    PTTBot = PTT.Library(LogHandler=handler)</span><br><span class="line">    try:</span><br><span class="line">        PTTBot.login(USERNAME, PASSWORD, KickOtherLogin=False)</span><br><span class="line">    except PTT.Exceptions.LoginError:</span><br><span class="line">        PTTBot.log(&apos;登入失敗&apos;)</span><br><span class="line">    except PTT.Exceptions.WrongIDorPassword:</span><br><span class="line">        PTTBot.log(&apos;帳號或密碼錯誤&apos;)</span><br><span class="line">    except PTT.Exceptions.LoginTooOften:</span><br><span class="line">        PTTBot.log(&apos;登入太頻繁&apos;)</span><br><span class="line"></span><br><span class="line">    LastIndex = 61614</span><br><span class="line">    while True:</span><br><span class="line">        try:</span><br><span class="line">            NewestIndex = PTTBot.getNewestIndex(PTT.IndexType.BBS, Board=&apos;Beauty&apos;)</span><br><span class="line">            PTTBot.log(&apos;NewestIndex of Beauty: %s&quot; % NewestIndex)</span><br><span class="line">            if LastIndex + 1 &lt;= NewestIndex:</span><br><span class="line">                NewestIndex = LastIndex + 1</span><br><span class="line">                LastIndex = NewestIndex</span><br><span class="line">            else:</span><br><span class="line">                PTTBot.log(&quot;資料已最新&quot;)</span><br><span class="line">                time.sleep(60)</span><br><span class="line">                continue</span><br><span class="line"></span><br><span class="line">            Post = PTTBot.getPost(&apos;Beauty&apos;, PostIndex=NewestIndex)</span><br><span class="line">            if Post is None:</span><br><span class="line">                PTTBot.log(&apos;Post %s is None&apos; % NewestIndex)</span><br><span class="line">                continue</span><br><span class="line"></span><br><span class="line">            if Post.getDeleteStatus() != PTT.PostDeleteStatus.NotDeleted:</span><br><span class="line">                if Post.getDeleteStatus() == PTT.PostDeleteStatus.ByModerator:</span><br><span class="line">                    PTTBot.log(&apos;文章已刪除&apos;)</span><br><span class="line">                elif Post.getDeleteStatus() == PTT.PostDeleteStatus.ByAuthor:</span><br><span class="line">                    PTTBot.log(&apos;文章已刪除&apos;)</span><br><span class="line">                elif Post.getDeleteStatus() == PTT.PostDeleteStatus.ByUnknow:</span><br><span class="line">                    PTTBot.log(&apos;文章已刪除&apos;)</span><br><span class="line">                continue</span><br><span class="line"></span><br><span class="line">            PTTBot.log(&apos;Date: &apos; + Post.getDate())</span><br><span class="line">            PTTBot.log(&apos;Title: &apos; + Post.getTitle())</span><br><span class="line">            PTTBot.log(&apos;Content: &apos; + Post.getContent())</span><br><span class="line">            folderName = str(NewestIndex) + &apos; &apos; + Post.getTitle().strip()</span><br><span class="line">            if os.path.exists(os.path.join(&apos;download&apos;, folderName)):</span><br><span class="line">                PTTBot.log(&apos;%s 已下載&apos; % NewestIndex)</span><br><span class="line">                time.sleep(60)</span><br><span class="line">                continue</span><br><span class="line">            os.makedirs(os.path.join(&apos;download&apos;, folderName), exist_ok=True)</span><br><span class="line">            extractor = URLExtrator()</span><br><span class="line">            PTTBot.log(&apos;%s %s downloading...&apos; % (NewestIndex, Post.getTitle())</span><br><span class="line">            for chat_id in client_list:</span><br><span class="line">                bot.send_message(chat_id=chat_id, text=Post.getTitle())</span><br><span class="line">            for url in extractor.gen_urls(Post.getContent()):</span><br><span class="line">                if &apos;imgur&apos; not in url:</span><br><span class="line">                    if url.startswith(&apos;http&apos;):</span><br><span class="line">                        for chat_id in client_list:</span><br><span class="line">                            bot.send_message(chat_id=chat_id, text=url)</span><br><span class="line">                    continue</span><br><span class="line">                if not url.startswith(&apos;http&apos;):</span><br><span class="line">                    continue</span><br><span class="line">                try:</span><br><span class="line">                    extension = url.split(&apos;.&apos;)[-1]</span><br><span class="line">                    if extension == &apos;gifv&apos;:</span><br><span class="line">                        continue</span><br><span class="line">                    fileName = url.split(&apos;/&apos;)[-1]</span><br><span class="line">                    if extension not in [&apos;jpg&apos;, &apos;jpeg&apos;, &apos;png&apos;, &apos;bmp&apos;, &apos;gif&apos;]:</span><br><span class="line">                        fileName = fileName + &apos;.jpg&apos;</span><br><span class="line">                    PTTBot.log(&apos;url: %s, filename: %s&apos; % (url, fileName))</span><br><span class="line">                    filepath = os.path.join(&apos;download&apos;, folderName, fileName)</span><br><span class="line">                    urllib.request.urlretrieve(url, filepath)</span><br><span class="line"></span><br><span class="line">                    for chat_id in client_list:</span><br><span class="line">                        if filepath.endswith(&apos;gif&apos;):</span><br><span class="line">                            bot.send_animation(chat_id=chat_id, animation=open(filepath, &apos;rb&apos;))</span><br><span class="line">                        else:</span><br><span class="line">                            bit.send_photo(chat_id=chat_id, photo=open(filepath, &apos;rb&apos;))</span><br><span class="line">                except:</span><br><span class="line">                    PTTBot.log(traceback.format_exc())</span><br><span class="line">            time.sleep(20)</span><br><span class="line">        except KeyboardInterrupt:</span><br><span class="line">            PTTBot.logout()</span><br><span class="line">            break</span><br><span class="line">        except:</span><br><span class="line">            PTTBot.log(traceback.format_exc())</span><br><span class="line">            time.sleep(20)</span><br><span class="line"></span><br><span class="line">            try:</span><br><span class="line">                PTTBot.login(USERNAME, PASSWORD, KickOtherLogin=False)</span><br><span class="line">            except PTT.Exceptions.LoginError:</span><br><span class="line">                PTTBot.log(&apos;登入失敗&apos;)</span><br><span class="line">                time.sleep(20)</span><br><span class="line">            except PTT.Exceptions.WrongIDorPassword:</span><br><span class="line">                PTTBot.log(&apos;帳號或密碼錯誤&apos;)</span><br><span class="line">                time.sleep(20)</span><br><span class="line">            except PTT.Exceptions.LoginTooOften:</span><br><span class="line">                PTTBot.log(&apos;登入太頻繁&apos;)</span><br><span class="line">                time.sleep(20)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nginx_uri</title>
      <link href="/posts/a5c75cef/"/>
      <url>/posts/a5c75cef/</url>
      
        <content type="html"><![CDATA[<p>會將/login rewrite 成/static/login.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root   /usr/share/nginx/html;</span><br><span class="line">location /login &#123;</span><br><span class="line">  rewrite &apos;^/login$&apos; /static/login.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>會將/login導向/usr/share/nginx/html/static/login.html<br>但這樣寫，會直接把login.html下載下來，而不是在browser中開啟</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /login &#123;</span><br><span class="line">    alias /usr/share/nginx/html/static/login.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>會try下列三個路徑<br>$uri =&gt; 嘗試/login =&gt; 失敗<br>$uri/ =&gt; 嘗試/login/ =&gt; 因為index有設定，所以會導到 /login/index.html =&gt; 失敗<br>/static/login.html =&gt; 成功<br>最終會將/login開啟/static/login.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root   /usr/share/nginx/html;</span><br><span class="line">location /login &#123;</span><br><span class="line">  index index.html;</span><br><span class="line">  try_files $uri $uri/ /static/login.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果没有指定root，nginx默認的root =&gt; /etc/nginx/html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location /login &#123;</span><br><span class="line">  root   /usr/share/nginx/html;</span><br><span class="line">  index  index.html;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /login</span><br><span class="line">/usr/share/nginx/html/login is not found (2: No such file or directory)</span><br><span class="line"></span><br><span class="line">GET /login/</span><br><span class="line">/usr/share/nginx/html/login/index.html is not found (2: No such file or directory)</span><br></pre></td></tr></table></figure><p>最後有斜線 =&gt; 指定目錄，然後會開啟index指定的預設檔案<br>最後沒有斜線 =&gt; 指定檔案，所以會直接去開/login這個檔案</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql_log</title>
      <link href="/posts/5a16d85b/"/>
      <url>/posts/5a16d85b/</url>
      
        <content type="html"><![CDATA[<p><a href="https://mydbops.wordpress.com/2019/01/30/configuring-efficient-mysql-logrotate/" target="_blank" rel="noopener">https://mydbops.wordpress.com/2019/01/30/configuring-efficient-mysql-logrotate/</a></p><p>如果要設定log的rotate，可以新增或修改以下檔案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/logrotate.d/mysql-server</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># - I put everything in one block and added sharedscripts, so that mysql gets </span><br><span class="line">#   flush-logs&apos;d only once.</span><br><span class="line">#   Else the binary logs would automatically increase by n times every day.</span><br><span class="line">/var/log/mysql.log /var/log/mysql/mysql.log /var/log/mysql/mysql-slow.log /var/log/mysql/error.log &#123;</span><br><span class="line">daily</span><br><span class="line">rotate 7</span><br><span class="line">missingok</span><br><span class="line">create 640 mysql adm</span><br><span class="line">compress</span><br><span class="line">sharedscripts</span><br><span class="line">postrotate</span><br><span class="line">test -x /usr/bin/mysqladmin || exit 0</span><br><span class="line"># If this fails, check debian.conf! </span><br><span class="line">MYADMIN=&quot;/usr/bin/mysqladmin --defaults-file=/etc/mysql/debian.cnf&quot;</span><br><span class="line">if [ -z &quot;`$MYADMIN ping 2&gt;/dev/null`&quot; ]; then</span><br><span class="line">  # Really no mysqld or rather a missing debian-sys-maint user?</span><br><span class="line">  # If this occurs and is not a error please report a bug.</span><br><span class="line">  #if ps cax | grep -q mysqld; then</span><br><span class="line">  if killall -q -s0 -umysql mysqld; then</span><br><span class="line">     exit 1</span><br><span class="line">  fi </span><br><span class="line">else</span><br><span class="line">  $MYADMIN flush-logs</span><br><span class="line">fi</span><br><span class="line">endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>測試指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logrotate -fv /etc/logrotate.d/mysql-server</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql_expired</title>
      <link href="/posts/33713c7c/"/>
      <url>/posts/33713c7c/</url>
      
        <content type="html"><![CDATA[<p><a href="https://tecadmin.net/expired-key-expkeysig-with-apt/" target="_blank" rel="noopener">https://tecadmin.net/expired-key-expkeysig-with-apt/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FROM mysql:5.7.21</span><br><span class="line">RUN apt-get update</span><br><span class="line"></span><br><span class="line">會產生錯誤</span><br><span class="line">W: GPG error: http://repo.mysql.com/apt/debian stretch InRelease: The following signatures were invalid: EXPKEYSIG 8C718D3B5072E1F5 MySQL Release Engineering &lt;mysql-build@oss.oracle.com&gt;</span><br><span class="line">W: The repository &apos;http://repo.mysql.com/apt/debian stretch InRelease&apos; is not signed.</span><br><span class="line">N: Data from such a repository can&apos;t be authenticated and is therefore potentially dangerous to use.</span><br><span class="line">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@c2be92bcd5bc:/# apt-key list</span><br><span class="line">...</span><br><span class="line">/etc/apt/trusted.gpg.d/mysql.gpg</span><br><span class="line">--------------------------------</span><br><span class="line">pub   dsa1024 2003-02-03 [SCA] [expired: 2019-02-17]</span><br><span class="line">      A4A9 4068 76FC BD3C 4567  70C8 8C71 8D3B 5072 E1F5</span><br><span class="line">uid           [ expired] MySQL Release Engineering &lt;mysql-build@oss.oracle.com&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@c2be92bcd5bc:/# apt-key adv --keyserver keys.gnupg.net --recv-keys 8C718D3B5072E1F5</span><br><span class="line">Executing: /tmp/apt-key-gpghome.yEmakgIkSC/gpg.1.sh --keyserver keys.gnupg.net --recv-keys 8C718D3B5072E1F5</span><br><span class="line">gpg: key 8C718D3B5072E1F5: &quot;MySQL Release Engineering &lt;mysql-build@oss.oracle.com&gt;&quot; 17 new signatures</span><br><span class="line">gpg: Total number processed: 1</span><br><span class="line">gpg:         new signatures: 17</span><br><span class="line">root@c2be92bcd5bc:/# apt-key list</span><br><span class="line">...</span><br><span class="line">/etc/apt/trusted.gpg.d/mysql.gpg</span><br><span class="line">--------------------------------</span><br><span class="line">pub   dsa1024 2003-02-03 [SCA] [expires: 2022-02-16]</span><br><span class="line">      A4A9 4068 76FC BD3C 4567  70C8 8C71 8D3B 5072 E1F5</span><br><span class="line">uid           [ unknown] MySQL Release Engineering &lt;mysql-build@oss.oracle.com&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql ERROR 1130: Host &apos;*****&apos; is not allowed to connect to this MySQL server</span><br><span class="line"></span><br><span class="line">解決方法：</span><br><span class="line"></span><br><span class="line">1. 改表法。可能是你的帳號不允許從遠程登陸，只能在localhost。這個時候只要在localhost的那臺電腦，登入mysql後，更改 &quot;mysql&quot; 數據庫裡的 &quot;user&quot; 表裡的 &quot;host&quot; 項，從&quot;localhost&quot;改成&quot;%&quot;</span><br><span class="line"></span><br><span class="line">mysql -u root -p</span><br><span class="line">mysql&gt;use mysql;</span><br><span class="line">mysql&gt;update user set host = &apos;%&apos; where user = &apos;root&apos;;</span><br><span class="line">mysql&gt;flush privileges;</span><br><span class="line"></span><br><span class="line">2. 授權法。(推薦使用)</span><br><span class="line">例如，你想myuser使用mypassword從任何主機連接到mysql服務器的話。</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;myuser&apos;@&apos;%&apos; IDENTIFIED BY &apos;mypassword&apos; WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如果你想允許用戶myuser從ip為192.168.1.3的主機連接到mysql服務器，並使用mypassword作為密碼</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;myuser&apos;@&apos;192.168.1.3&apos; IDENTIFIED BY &apos;mypassword&apos; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><p>GRANT ALL PRIVILEGES ON <em>.</em> to root@’%’ IDENTIFIED BY ‘root’;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql_note</title>
      <link href="/posts/d8df6de7/"/>
      <url>/posts/d8df6de7/</url>
      
        <content type="html"><![CDATA[<ul><li><p>login<br>mysql -uroot -proot</p></li><li><p>select database<br>use koala_online;</p></li><li><p>delete<br>delete from table_name where condition;</p></li><li><p>query<br>select count(*) from table_name;<br>select * from table_name where condition;<br>select * from subject order by id desc limit 5;<br>select * from subject limit 5;</p></li><li><p>update<br>UPDATE table_name SET address=’192.168.56.4’ WHERE id=1;<br>UPDATE screen SET camera_address=’rtsp1’ WHERE id=1;</p></li><li><p>insert<br>insert into screen values(camera_address, </p></li><li><p>get information<br>show tables;<br>show databases;<br>describe tabke_name;</p></li><li><p>connect remote host<br>mysql -h 192.168.56.3 -P 3306 -uroot -proot</p></li></ul><p>將flask中的db指向docker container<br>SQLALCHEMY_DATABASE_URI = ‘mysql://root:<a href="mailto:1234@0.0.0.0" target="_blank" rel="noopener">1234@0.0.0.0</a>:3306/quokka’</p><p>CREATE TABLE hr ( ID SMALLINT UNSIGNED, Name VARCHAR(40), Photo BLOB );<br>INSERT INTO hr VALUES(1, ‘Nick’, LOAD_FILE(‘/home/user/aptg.jpg’));</p><p>mysqldump –lock-all-tables -u root -p –all-databases &gt; backup.sql</p><p>查詢缺漏的id<br>SELECT id+1 FROM table WHERE id NOT IN (SELECT id-1 FROM table) ORDER BY 1;</p><p>isolation level<br>mysql&gt; show variables like “tx_isolation”;<br>mysql&gt; show variables like ‘%isola%’;<br>+—————+—————–+<br>| Variable_name | Value           |<br>+—————+—————–+<br>| tx_isolation  | REPEATABLE-READ |<br>+—————+—————–+<br>1 row in set (0.00 sec)</p><p>mysql&gt; set session transaction isolation level read committed;<br>Query OK, 0 rows affected (0.00 sec)</p><p>mysql&gt; show variables like ‘%isola%’;<br>+—————+—————-+<br>| Variable_name | Value          |<br>+—————+—————-+<br>| tx_isolation  | READ-COMMITTED |<br>+—————+—————-+<br>1 row in set (0.00 sec)</p><p>isolation<br><a href="https://medium.com/getamis/database-transaction-isolation-a1e448a7736e" target="_blank" rel="noopener">https://medium.com/getamis/database-transaction-isolation-a1e448a7736e</a><br><a href="https://blog.gslin.org/archives/2015/09/18/5989/%E5%BE%9E%E9%A0%AD%E5%AD%B8%E4%B8%80%E6%AC%A1-isolation-level-%E7%9A%84-repeatable-read-%E8%88%87-serializable/" target="_blank" rel="noopener">https://blog.gslin.org/archives/2015/09/18/5989/%E5%BE%9E%E9%A0%AD%E5%AD%B8%E4%B8%80%E6%AC%A1-isolation-level-%E7%9A%84-repeatable-read-%E8%88%87-serializable/</a></p><p><a href="https://dev.mysql.com/doc/refman/5.5/en/create-table-select.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.5/en/create-table-select.html</a><br><a href="https://myapollo.com.tw/2018/11/24/sqlalchemy-filter-vs-filter-by/" target="_blank" rel="noopener">https://myapollo.com.tw/2018/11/24/sqlalchemy-filter-vs-filter-by/</a><br><a href="https://sanyuesha.com/2018/04/23/mysql-lost-connection-error/" target="_blank" rel="noopener">https://sanyuesha.com/2018/04/23/mysql-lost-connection-error/</a><br><a href="https://www.itread01.com/content/1498548010.html" target="_blank" rel="noopener">https://www.itread01.com/content/1498548010.html</a><br><a href="https://www.geeksengine.com/database/data-manipulation/bulk-insert.php" target="_blank" rel="noopener">https://www.geeksengine.com/database/data-manipulation/bulk-insert.php</a><br><a href="https://docs.sqlalchemy.org/en/13/orm/persistence_techniques.html#bulk-operations" target="_blank" rel="noopener">https://docs.sqlalchemy.org/en/13/orm/persistence_techniques.html#bulk-operations</a></p><p><a href="https://www.w3schools.com/python/python_mysql_update.asp" target="_blank" rel="noopener">https://www.w3schools.com/python/python_mysql_update.asp</a><br><a href="https://codeday.me/bug/20181227/470628.html" target="_blank" rel="noopener">https://codeday.me/bug/20181227/470628.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">| 15068 | /static/upload/event/2019-08-14/9aec3fdf66184b5887c1f2b82eb21dad.png            |    NULL |           NULL |    NULL |       NULL |          0 |            0 | 009977                               | /static/upload/photo/2019-08-14/v2_fae7bef863344f01ffe15404750284d3b11eea2c.jpg | 1565762424 |              6 |       3637 |        21 |</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+----------------+--------------+------+-----+---------+----------------+</span><br><span class="line">| Field          | Type         | Null | Key | Default | Extra          |</span><br><span class="line">+----------------+--------------+------+-----+---------+----------------+</span><br><span class="line">| id             | int(11)      | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| photo          | varchar(256) | NO   |     | NULL    |                |</span><br><span class="line">| age            | float        | YES  |     | NULL    |                |</span><br><span class="line">| gender         | float        | YES  |     | NULL    |                |</span><br><span class="line">| quality        | float        | YES  |     | NULL    |                |</span><br><span class="line">| confidence     | float        | YES  |     | NULL    |                |</span><br><span class="line">| event_type     | int(11)      | YES  |     | NULL    |                |</span><br><span class="line">| subject_type   | smallint(6)  | YES  |     | NULL    |                |</span><br><span class="line">| name           | varchar(64)  | YES  |     | NULL    |                |</span><br><span class="line">| subject_photo  | varchar(256) | YES  |     | NULL    |                |</span><br><span class="line">| timestamp      | int(11)      | YES  | MUL | NULL    |                |</span><br><span class="line">| corporation_id | int(11)      | YES  | MUL | NULL    |                |</span><br><span class="line">| subject_id     | int(11)      | YES  | MUL | NULL    |                |</span><br><span class="line">| screen_id      | int(11)      | YES  | MUL | NULL    |                |</span><br><span class="line">+----------------+--------------+------+-----+---------+----------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql --user=root --password=1234 kangaroo &lt;&lt; EOF</span><br><span class="line">INSERT INTO event (photo, age, gender, quality, confidence, event_type, subject_type, name, subject_photo, timestamp, corporation_id, subject_id, screen_id) VALUES(&apos;/static/upload/event/2019-08-14/9aec3fdf66184b5887c1f2b82eb21dad.png&apos;, NULL, NULL, NULL, NULL, 0, 0, &apos;009977&apos;, &apos;/static/upload/photo/2019-08-14/v2_fae7bef863344f01ffe15404750284d3b11eea2c.jpg&apos;, 1565762424, 6, 3637, 21);</span><br></pre></td></tr></table></figure><p>SHOW FULL PROCESSLIST;<br>SELECT * FROM information_schema.INNODB_TRX;</p><h1 id="Flask-SQLAlchemy-Setting"><a href="#Flask-SQLAlchemy-Setting" class="headerlink" title="Flask-SQLAlchemy Setting"></a>Flask-SQLAlchemy Setting</h1><p>SQLALCHEMY_TRACK_MODIFICATIONS = False<br>SQLALCHEMY_RECORD_QUERIES = True<br>SQLALCHEMY_POOL_SIZE = 1024<br>SQLALCHEMY_POOL_TIMEOUT = 90<br>SQLALCHEMY_POOL_RECYCLE = 3<br>SQLALCHEMY_MAX_OVERFLOW = 1024</p><p><a href="https://idoubi.cc/posts/mysql-data-migration/" target="_blank" rel="noopener">https://idoubi.cc/posts/mysql-data-migration/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kafka</title>
      <link href="/posts/5bbc7517/"/>
      <url>/posts/5bbc7517/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.mobabel.net/%E6%80%BB%E7%BB%93kafka%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%92%8C%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98/" target="_blank" rel="noopener">http://www.mobabel.net/%E6%80%BB%E7%BB%93kafka%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%92%8C%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98/</a></p><p><a href="http://www.weicon9.com/2017/02/Using-Websocket-On-Realtime-Application/" target="_blank" rel="noopener">http://www.weicon9.com/2017/02/Using-Websocket-On-Realtime-Application/</a></p><p><a href="https://blog.csdn.net/LW_GHY/article/details/73252904" target="_blank" rel="noopener">https://blog.csdn.net/LW_GHY/article/details/73252904</a></p><p><a href="https://www.infoq.cn/article/kafka-analysis-part-1/" target="_blank" rel="noopener">https://www.infoq.cn/article/kafka-analysis-part-1/</a></p><p><a href="https://medium.com/@hsiehjenhsuan/kafka-%E5%AF%A6%E4%BD%9C%E7%B4%80%E9%8C%84-78399b7abe55" target="_blank" rel="noopener">https://medium.com/@hsiehjenhsuan/kafka-%E5%AF%A6%E4%BD%9C%E7%B4%80%E9%8C%84-78399b7abe55</a></p><p><a href="https://myapollo.com.tw/2018/10/09/python-kafka-part-1/" target="_blank" rel="noopener">https://myapollo.com.tw/2018/10/09/python-kafka-part-1/</a><br><a href="https://myapollo.com.tw/2018/10/13/python-kafka-part-2/" target="_blank" rel="noopener">https://myapollo.com.tw/2018/10/13/python-kafka-part-2/</a><br><a href="https://myapollo.com.tw/2018/10/15/python-kafka-part-3/" target="_blank" rel="noopener">https://myapollo.com.tw/2018/10/15/python-kafka-part-3/</a></p><p><a href="https://blog.csdn.net/fuyuwei2015/article/details/72943207" target="_blank" rel="noopener">https://blog.csdn.net/fuyuwei2015/article/details/72943207</a></p><p><a href="https://artidoro.github.io/files/Front_End_Back_End_Server_Architecture.pdf" target="_blank" rel="noopener">https://artidoro.github.io/files/Front_End_Back_End_Server_Architecture.pdf</a></p><p><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-kafka/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/opensource/os-cn-kafka/index.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">package com.ykkj.weiyi.socket;</span><br><span class="line"></span><br><span class="line">import org.apache.kafka.clients.consumer.ConsumerRecord;</span><br><span class="line">import org.apache.kafka.clients.consumer.ConsumerRecords;</span><br><span class="line">import org.apache.kafka.clients.consumer.KafkaConsumer;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.Properties;</span><br><span class="line">import static com.ykkj.weiyi.socket.CommodityServer.webSocketSet;</span><br><span class="line"></span><br><span class="line">public class ConsumerKafka extends Thread &#123;</span><br><span class="line">    private KafkaConsumer&lt;String, String&gt; consumer;</span><br><span class="line">    private String topic = &quot;test.topic&quot;;</span><br><span class="line">    public ConsumerKafka() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        //加载kafka消费者参数</span><br><span class="line">        Properties props = new Properties();</span><br><span class="line">        props.put(&quot;bootstrap.servers&quot;, &quot;localhost:9092&quot;);</span><br><span class="line">        props.put(&quot;group.id&quot;, &quot;ytna&quot;);</span><br><span class="line">        props.put(&quot;enable.auto.commit&quot;, &quot;true&quot;);</span><br><span class="line">        props.put(&quot;auto.commit.interval.ms&quot;, &quot;1000&quot;);</span><br><span class="line">        props.put(&quot;session.timeout.ms&quot;, &quot;15000&quot;);</span><br><span class="line">        props.put(&quot;key.deserializer&quot;, &quot;org.apache.kafka.common.serialization.StringDeserializer&quot;);</span><br><span class="line">        props.put(&quot;value.deserializer&quot;, &quot;org.apache.kafka.common.serialization.StringDeserializer&quot;);</span><br><span class="line">        //创建消费者对象</span><br><span class="line">        consumer = new KafkaConsumer&lt;String, String&gt;(props);</span><br><span class="line">        consumer.subscribe(Arrays.asList(this.topic));</span><br><span class="line">        //死循环，持续消费kafka</span><br><span class="line">        while (true) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                //消费数据，并设置超时时间</span><br><span class="line">                ConsumerRecords&lt;String, String&gt; records = consumer.poll(100);</span><br><span class="line">                //Consumer message</span><br><span class="line">                for (ConsumerRecord&lt;String, String&gt; record : records) &#123;</span><br><span class="line">                    //Send message to every client</span><br><span class="line">                    for (CommodityServer webSocket : webSocketSet) &#123;</span><br><span class="line">                        webSocket.sendMessage(record.value());</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                System.out.println(e.getMessage());</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void close() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            consumer.close();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //供测试用，若通过tomcat启动需通过其他方法启动线程</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        ConsumerKafka consumerKafka = new ConsumerKafka();</span><br><span class="line">        consumerKafka.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>httperf</title>
      <link href="/posts/252fa26a/"/>
      <url>/posts/252fa26a/</url>
      
        <content type="html"><![CDATA[<p>httperf –server 10.60.6.29 –port 8857 –uri /api/event/list –num-conns 5000 –rate 500 –hog</p><p><a href="https://ihower.tw/blog/archives/1749" target="_blank" rel="noopener">https://ihower.tw/blog/archives/1749</a></p><h4 id="httperf-的用法"><a href="#httperf-的用法" class="headerlink" title="httperf 的用法"></a>httperf 的用法</h4><p>基本用法是指定 Server、Port、URL和總共要發出多少個 requests：</p><p>httperf –server project1.local –port 3000 –uri /events –num-conns 1000</p><p>其中最重要的 output 資訊就是 Reply rate 有平均和標準差的那一行。要注意的是 httperf 是每五秒抓一次樣本(sample)，根據 httperf 的建議是希望至少有 30 個樣本數才能得到準確的標準差，因此當 sample 數太少的時候，要記得把 –num-conns 往上加。</p><p>另一種算壓力測試，也就是去測試“Server 每秒可以承受多少 requests？”。請再加上 –rate 跟 –hog 參數：</p><p>httperf –server project1.local –port 3000 –uri /events –num-conns 5000 –rate 500 –hog</p><p>逐步把 rate 往上調，直到 server 超過極限時，就會開始少 replies (有 requests 被 drop off 了) 並出現 Errors。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>gitbook</title>
      <link href="/posts/1a75c9a5/"/>
      <url>/posts/1a75c9a5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">$ gitbook serve</span><br><span class="line">Live reload server started on port: 35729</span><br><span class="line">Press CTRL+C to quit ...</span><br><span class="line"></span><br><span class="line">info: 9 plugins are installed</span><br><span class="line">info: 7 explicitly listed</span><br><span class="line">info: loading plugin <span class="string">"search-pro"</span>... OK</span><br><span class="line">info: loading plugin <span class="string">"splitter"</span>... OK</span><br><span class="line">info: loading plugin <span class="string">"livereload"</span>... OK</span><br><span class="line">info: loading plugin <span class="string">"highlight"</span>... OK</span><br><span class="line">info: loading plugin <span class="string">"sharing"</span>... OK</span><br><span class="line">info: loading plugin <span class="string">"fontsettings"</span>... OK</span><br><span class="line">info: loading plugin <span class="string">"theme-default"</span>... OK</span><br><span class="line">info: found 6 pages</span><br><span class="line">info: found 7 asset files</span><br><span class="line">info: &gt;&gt; generation finished with success <span class="keyword">in</span> 1.7s !</span><br><span class="line"></span><br><span class="line">Starting server ...</span><br><span class="line">Serving book on http://localhost:4000</span><br><span class="line">Restart after change <span class="keyword">in</span> file config\authorization.md</span><br><span class="line"></span><br><span class="line">Stopping server</span><br><span class="line">events.js:183</span><br><span class="line">      throw er; // Unhandled <span class="string">'error'</span> event</span><br><span class="line">      ^</span><br><span class="line"></span><br><span class="line">Error: Error watching file <span class="keyword">for</span> changes: EPERM</span><br><span class="line">    at FSEvent.FSWatcher._handle.onchange (fs.js:1359:9)</span><br><span class="line"></span><br><span class="line">D:\HH\git\gitbook\IMFR_requirements</span><br><span class="line">$ npm install ws@3.3.2 --save-dev --save-exact</span><br><span class="line">npm WARN saveError ENOENT: no such file or directory, open <span class="string">'D:\HH\git\gitbook\IMFR_requirements\package.json'</span></span><br><span class="line">npm notice created a lockfile as package-lock.json. You should commit this file.</span><br><span class="line">npm WARN enoent ENOENT: no such file or directory, open <span class="string">'D:\HH\git\gitbook\IMFR_requirements\package.json'</span></span><br><span class="line">npm WARN IMFR_requirements No description</span><br><span class="line">npm WARN IMFR_requirements No repository field.</span><br><span class="line">npm WARN IMFR_requirements No README data</span><br><span class="line">npm WARN IMFR_requirements No license field.</span><br><span class="line"></span><br><span class="line">+ ws@3.3.2</span><br><span class="line">added 4 packages from 4 contributors and audited 8 packages <span class="keyword">in</span> 2.071s</span><br><span class="line">found 0 vulnerabilities</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git_command</title>
      <link href="/posts/d755bf4/"/>
      <url>/posts/d755bf4/</url>
      
        <content type="html"><![CDATA[<h1 id="git-command"><a href="#git-command" class="headerlink" title="git command"></a>git command</h1><h4 id="建立新的Repository"><a href="#建立新的Repository" class="headerlink" title="建立新的Repository"></a>建立新的Repository</h4><ul><li>在gitlab上新建project (cyc)</li><li>cd cyc</li><li>git init</li><li>cp -rf all_file_and_folder cyc</li><li>git add .</li><li>git commit -m “master code base”</li><li>git remote add origin <a href="mailto:git@172.17.1.18" target="_blank" rel="noopener">git@172.17.1.18</a>:mtk\cyc.git</li><li>git push -u origin master</li></ul><h4 id="useful-commands"><a href="#useful-commands" class="headerlink" title="useful commands"></a>useful commands</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">00. revert the first commit</span><br><span class="line">    user@ubuntu:~$ git update-ref -d HEAD</span><br><span class="line">    user@ubuntu:~$ git log</span><br><span class="line">    fatal: your current branch &apos;master&apos; does not have any commits yet</span><br><span class="line">01. git branch -a(--all) #show all branches and current branch</span><br><span class="line">    git branch -r(--remotes) #show all remote branches</span><br><span class="line">    git branch -v #查看各分支最後一個進code記錄</span><br><span class="line">02. git diff</span><br><span class="line">    git diff --cached</span><br><span class="line">    git diff --staged</span><br><span class="line">03. git add filename</span><br><span class="line">    git add -f . #強制add檔案，不受.gitignore限制</span><br><span class="line">    git add .   # add to index only files created\modified and not those deleted</span><br><span class="line">    git add -u  # add to index only files deleted\modified and not those created</span><br><span class="line">    git add -A  # do both operation at once, add to index all files</span><br><span class="line">04. git reset #將所有已經執行git add的檔案，全都取消，變成unstage</span><br><span class="line">    git reset (HEAD) filename #將特定檔案變成unstage</span><br><span class="line">    git reset HEAD^ #取消最近一個commit的紀錄，修改過的檔案狀態會保留</span><br><span class="line">04. git rm filename</span><br><span class="line">05. git commit -m &quot;message&quot;</span><br><span class="line">    git commit --amend</span><br><span class="line">    git commit --amend --no-edit #不進編輯畫面修改comment</span><br><span class="line">    #假設，git add fileA; git commit -m &quot;modify fileA&quot;;</span><br><span class="line">    #此時如果又修改了檔案fileB</span><br><span class="line">    #step1: git add fileB;</span><br><span class="line">    #step2: git commit --amend --no-edit</span><br><span class="line">06. git remote add remotename xxx</span><br><span class="line">07. git remote -v</span><br><span class="line">03. git tag #show all tags</span><br><span class="line">    git tag tag_name (commit_id) #新增lightweight tag，若不加commit_id，則tag會建立在最新的commit上</span><br><span class="line">    git tag -a tag_name -m &quot;tag message&quot; (commit_id)</span><br><span class="line">    #加上tag之後，需要執行git push remote_name(origin) tag_name，將tag上傳到remote server</span><br><span class="line">    git push remote_name(origin) --tags #一口氣上傳所有未上傳的tags</span><br><span class="line">    git push remote_name(origin) --tags</span><br><span class="line">    git push origin :refs\tags\tag_name #delete remote tag</span><br><span class="line">    \\delete remote tag</span><br><span class="line">    git push --delete origin tagname</span><br><span class="line">    \\delete the local tag</span><br><span class="line">    git tag --delete tagname</span><br><span class="line">04. git checkout branch_name(or tag_name)</span><br><span class="line">05. git checkout -b new_branch_name #create local new branch based on the current commit status and 立即切換過去</span><br><span class="line">    = git branch new_branch_name + git checkout new_branch_name</span><br><span class="line">    #在建立新branch後，需要接著利用git push origin new_branch_name，將新建的branch上傳到server去</span><br><span class="line">06. git branch -D branch_name #delete local branch</span><br><span class="line">    git push origin --delete branch_name #delete remote branch</span><br><span class="line">    git push origin :branch_name #delete remote branch</span><br><span class="line">07. git branch -m old_name new_name</span><br><span class="line">    git branch -m new_name #modify current branch name to new_branch_name</span><br><span class="line">    #若是要修改remote branch name</span><br><span class="line">    =&gt; a) git checkout old_branch_name</span><br><span class="line">       b) git branch -m new_branch_name</span><br><span class="line">       c) git push origin --delete old_branch_name</span><br><span class="line">       d) git push origin new_branch_name</span><br><span class="line">08. git push (remote_name) (branch_name)</span><br><span class="line">    #如果同時checkout了兩個branch(A, B)在local端，local端修改A，並想用git push -f進code</span><br><span class="line">    #此時，若是server端對B有做過修改，而local端的B是舊的，此時，即使是對A做git push -f，B也一樣會被forced update</span><br><span class="line">09. git cherry-pick commit_id</span><br><span class="line">    #如果都沒有衝突的檔案，會自動建立commit記錄，只需要再執行git push</span><br><span class="line">    #如果有衝突，可以用git status查看=&gt; Unmerged paths: =&gt; both modified:，打開檔案手動編輯，合完之後再用git add加入該檔案</span><br><span class="line">    #如果有刪除檔案，可以用git status查看=&gt; Unmerged paths: =&gt; deleted by them:，手動執行git rm將其刪除</span><br><span class="line">    #如果有衝突，都整理完之後，需要執行git commit，然後再執行git push</span><br><span class="line">10. git config http.postBuffer 524288000</span><br><span class="line">    #增加local buffer，避免git push失敗 (單位: Bytes)</span><br><span class="line"></span><br><span class="line">11. </span><br><span class="line">git tag -a tag_name commit_hash -m &quot;message&quot;</span><br><span class="line">git push origin tag_name</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">git clone                                   \\ 下載整包完整的source code</span><br><span class="line">git show commint_Number                     \\ 查看某commit的內容</span><br><span class="line">git pull                                    \\ download最新的code</span><br><span class="line">git status                                  \\ 查看目前所有檔案的狀態，是否跟server上有所不同</span><br><span class="line">git diff filename                           \\ 查看某檔案跟server中的差異，若不指定檔案則會列出所有不同的結果</span><br><span class="line">git apply patchfile                         \\ 可以使用git diff產生patch檔，或直接用git show導出patch檔，利用apply來上patch</span><br><span class="line">git add 路徑\檔案                             \\ 把某路徑下所有檔案，或是所指的特定檔案，新增到本地資料庫中</span><br><span class="line">git commit -m &quot;comment&quot;                     \\ 上傳剛剛新增的檔案到本地資料庫，並加上註解</span><br><span class="line">git push                                    \\ 上傳本地資料庫的內容到server</span><br><span class="line">git checkout branch\file\folder             \\ 下載server中的某branch\檔案\資料夾，會蓋掉目前存在的檔案內容</span><br><span class="line">git branch -a                               \\ 查詢目前的branch list</span><br><span class="line">git revert commitNumber                     \\ 在本地端恢復某個commit的code，會是一個新的commit，revert完後直接使用push將修改寫回server</span><br><span class="line">git reset --hard commitNumber              \\跳回commitNumber版本，並捨棄所有在commitNumber之後的修改</span><br><span class="line">git commit --amend                          \\ 修改已經commit的comment內容</span><br><span class="line">git checkout -b branchname                  \\ 建立一個新的branch</span><br><span class="line">git log 路徑\檔案名稱                         \\ 查詢指定目錄或檔案相關的log</span><br><span class="line">git log --author=&quot;Nick Cheng&quot;               \\</span><br><span class="line">git log --author=&quot;Nick Cheng&quot; --raw         \\ 列出每一次commit的所有檔案</span><br><span class="line">git config --global user.name &quot;Nick Cheng&quot;</span><br><span class="line">git config --global user.email &quot;nick.cheng@tpv-tech.com&quot;</span><br><span class="line">git config --global color.ui true            \\幫git加上顏色</span><br><span class="line">git config --global alias.st status          \\ 設定git的alias</span><br></pre></td></tr></table></figure><h4 id="上傳三部曲"><a href="#上傳三部曲" class="headerlink" title="上傳三部曲:"></a>上傳三部曲:</h4><ol><li>git add filename</li><li>git commit -m “comment”</li><li>git push</li></ol><p>clone with 帳密<br>git clone <a href="http://nick:Ab123456@10.36.94.101/SI/kangaroo.git" target="_blank" rel="noopener">http://nick:Ab123456@10.36.94.101/SI/kangaroo.git</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap-Flask</title>
      <link href="/posts/5d200d31/"/>
      <url>/posts/5d200d31/</url>
      
        <content type="html"><![CDATA[<p><a href="https://juejin.im/post/5b4b267f6fb9a04fd93e23ea" target="_blank" rel="noopener">https://juejin.im/post/5b4b267f6fb9a04fd93e23ea</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install bootstrap-flask</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from flask_bootstrap import Bootstrap</span><br><span class="line">from flask import Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">bootstrap = Bootstrap(app)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from flask_bootstrap import Bootstrap</span><br><span class="line">from flask import Flask</span><br><span class="line"></span><br><span class="line">bootstrap = Bootstrap()</span><br><span class="line"></span><br><span class="line">def create_app():</span><br><span class="line">    app = Flask(__name__)</span><br><span class="line">    bootstrap.init_app(app)</span><br><span class="line"></span><br><span class="line">    return app</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/greyli/bootstrap-flask.git</span><br><span class="line">$ cd bootstrap-flask</span><br><span class="line">$ virtualenv venv</span><br><span class="line">$ source venv/bin/activate</span><br><span class="line">$ pip install flask flask-wtf flask-sqlalchemy bootstrap-flask</span><br><span class="line">$ cd bootstrap-flask/examples</span><br><span class="line">$ flask run</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_udp_server</title>
      <link href="/posts/1cc9d7a9/"/>
      <url>/posts/1cc9d7a9/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import threading</span><br><span class="line">from gevent import socket</span><br><span class="line"></span><br><span class="line">PORT1 = 5000</span><br><span class="line">PORT2 = 12345</span><br><span class="line"></span><br><span class="line">def udp_server1(host=&apos;0.0.0.0&apos;, port=PORT1):</span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)</span><br><span class="line">    print(&quot;Listening on udp %s:%s&quot; % (host, port))</span><br><span class="line">    s.bind((host, port))</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        (data, addr) = s.recvfrom(1024)</span><br><span class="line">        if data:</span><br><span class="line">            print(&quot;reveive %s from %s&quot; % (data, addr))</span><br><span class="line">    s.close()</span><br><span class="line"></span><br><span class="line">def udp_server2(host=&apos;0.0.0.0&apos;, port=PORT2):</span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)</span><br><span class="line">    print(&quot;Listening on udp %s:%s&quot; % (host, port))</span><br><span class="line">    s.bind((host, port))</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        (data, addr) = s.recvfrom(1024)</span><br><span class="line">        if data:</span><br><span class="line">            print(&quot;reveive %s from %s&quot; % (data, addr))</span><br><span class="line">            sent = s.sendto(data, addr)</span><br><span class="line">    s.close()</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    a = threading.Thread(target=udp_server1, daemon=True, args=())</span><br><span class="line">    b = threading.Thread(target=udp_server2, daemon=True, args=())</span><br><span class="line">    a.start()</span><br><span class="line">    b.start()</span><br><span class="line">    a.join()</span><br><span class="line">    b.join()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_tracemalloc</title>
      <link href="/posts/2b4c1538/"/>
      <url>/posts/2b4c1538/</url>
      
        <content type="html"><![CDATA[<p><a href="https://stackoverflow.com/questions/50148554/when-would-the-python-tracemalloc-module-allocations-statistics-not-match-whats" target="_blank" rel="noopener">https://stackoverflow.com/questions/50148554/when-would-the-python-tracemalloc-module-allocations-statistics-not-match-whats</a><br><a href="https://superuser.blog/detect-memory-leak-python/" target="_blank" rel="noopener">https://superuser.blog/detect-memory-leak-python/</a><br><a href="https://docs.python.org/3/library/tracemalloc.html" target="_blank" rel="noopener">https://docs.python.org/3/library/tracemalloc.html</a><br><a href="https://blog.louie.lu/2017/08/04/tracemalloc-python-standard-library-09/" target="_blank" rel="noopener">https://blog.louie.lu/2017/08/04/tracemalloc-python-standard-library-09/</a></p><p>The PYTHONTRACEMALLOC environment variable (PYTHONTRACEMALLOC=NFRAME) and the -X tracemalloc=NFRAME command line option can be used to start tracing at startup.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">import psutil</span><br><span class="line">import linecache</span><br><span class="line">import os</span><br><span class="line">import tracemalloc</span><br><span class="line">import threading</span><br><span class="line">import sys</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">def MonitorMemory():</span><br><span class="line">    def display_top(snapshot, key_type=&apos;lineno&apos;, limit=1):</span><br><span class="line">        top_stats = snapshot.statistics(key_type)</span><br><span class="line"></span><br><span class="line">        print(&quot;Top %s lines&quot; % limit)</span><br><span class="line">        for index, stat in enumerate(top_stats[:limit], 1): </span><br><span class="line">            frame = stat.traceback[0]</span><br><span class="line">            # replace &quot;/path/to/module/file.py&quot; with &quot;module/file.py&quot;</span><br><span class="line">            filename = os.sep.join(frame.filename.split(os.sep)[-2:])</span><br><span class="line">            print(&quot;#%s: %s:%s: %.1f KiB&quot;</span><br><span class="line">                  % (index, filename, frame.lineno, stat.size / 1024))</span><br><span class="line">            line = linecache.getline(frame.filename, frame.lineno).strip()</span><br><span class="line">            if line:</span><br><span class="line">                print(&apos;   %s&apos; % line)</span><br><span class="line"></span><br><span class="line">        other = top_stats[limit:]</span><br><span class="line">        if other:</span><br><span class="line">            size = sum(stat.size for stat in other)</span><br><span class="line">            print(&quot;%s other: %.1f KiB&quot; % (len(other), size / 1024))</span><br><span class="line">        #total = sum(stat.size for stat in top_stats)</span><br><span class="line">        #print(&quot;Total allocated size: %.1f KiB&quot; % (total / 1024))</span><br><span class="line"></span><br><span class="line">    snapshot = tracemalloc.take_snapshot()</span><br><span class="line">    display_top(snapshot)</span><br><span class="line">    python_memory = tracemalloc.get_traced_memory()</span><br><span class="line">    print(&quot;Python Memory Usage current:%.2f MB, peak:%.2f MB&quot; % (python_memory[0]/2**20, python_memory[1]/2**20))</span><br><span class="line">    print(&quot;Process Memory Usage: %s MB&quot; % (psutil.Process().memory_info().rss / 2**20))</span><br><span class="line"></span><br><span class="line"># Simulate memory allocate by creating bytes</span><br><span class="line">EMPTY_BYTES_SIZE = sys.getsizeof(b&apos;&apos;)</span><br><span class="line">def allocate_bytes(size):</span><br><span class="line">    bytes_len = (size - EMPTY_BYTES_SIZE)</span><br><span class="line">    return b&apos;x&apos; * bytes_len</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    tracemalloc.start()</span><br><span class="line">    MonitorMemory()</span><br><span class="line"></span><br><span class="line">    a = allocate_bytes(100 * 1024 * 1024)</span><br><span class="line">    MonitorMemory()</span><br><span class="line"></span><br><span class="line">    time.sleep(5)</span><br><span class="line"></span><br><span class="line">    b = allocate_bytes(100 * 1024 * 1024)</span><br><span class="line">    MonitorMemory()</span><br><span class="line">    time.sleep(5)</span><br><span class="line"></span><br><span class="line">    del a</span><br><span class="line">    MonitorMemory()</span><br><span class="line"></span><br><span class="line">    time.sleep(5)</span><br><span class="line"></span><br><span class="line">    del b</span><br><span class="line">    MonitorMemory()</span><br></pre></td></tr></table></figure><p>result</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">(venv) user@vm-docker:~/tracemalloc$ python3.6 app.py</span><br><span class="line">Top 1 lines</span><br><span class="line">#1: app.py:10: 0.1 KiB</span><br><span class="line">   def display_top(snapshot, key_type=&apos;lineno&apos;, limit=1):</span><br><span class="line">Total allocated size: 0.1 KiB</span><br><span class="line">Process Memory Usage: 11.890625 MB</span><br><span class="line"></span><br><span class="line">Top 1 lines</span><br><span class="line">#1: app.py:39: 102400.0 KiB</span><br><span class="line">   return b&apos;x&apos; * bytes_len</span><br><span class="line">42 other: 22.8 KiB</span><br><span class="line">Total allocated size: 102422.8 KiB</span><br><span class="line">Process Memory Usage: 111.921875 MB</span><br><span class="line"></span><br><span class="line">Top 1 lines</span><br><span class="line">#1: app.py:39: 204800.0 KiB</span><br><span class="line">   return b&apos;x&apos; * bytes_len</span><br><span class="line">48 other: 28.4 KiB</span><br><span class="line">Total allocated size: 204828.4 KiB</span><br><span class="line">Process Memory Usage: 211.6953125 MB</span><br><span class="line"></span><br><span class="line">Top 1 lines</span><br><span class="line">#1: app.py:39: 102400.0 KiB</span><br><span class="line">   return b&apos;x&apos; * bytes_len</span><br><span class="line">48 other: 32.4 KiB</span><br><span class="line">Total allocated size: 102432.4 KiB</span><br><span class="line">Process Memory Usage: 111.93359375 MB</span><br><span class="line"></span><br><span class="line">Top 1 lines</span><br><span class="line">#1: python3.6/tracemalloc.py:65: 9.7 KiB</span><br><span class="line">   return (self.size, self.count, self.traceback)</span><br><span class="line">47 other: 26.2 KiB</span><br><span class="line">Total allocated size: 35.9 KiB</span><br><span class="line">Process Memory Usage: 11.93359375 MB</span><br></pre></td></tr></table></figure><ul><li>Example<br><a href="https://tech.buzzfeed.com/finding-and-fixing-memory-leaks-in-python-413ce4266e7d" target="_blank" rel="noopener">https://tech.buzzfeed.com/finding-and-fixing-memory-leaks-in-python-413ce4266e7d</a><br><a href="https://docs.python.org/3/library/tracemalloc.html" target="_blank" rel="noopener">https://docs.python.org/3/library/tracemalloc.html</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> linecache</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> tracemalloc</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">allocate_bytes</span><span class="params">(size)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">b'x'</span> * size</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">display_top</span><span class="params">(key_type=<span class="string">'lineno'</span>, limit=<span class="number">10</span>)</span>:</span></span><br><span class="line">    snapshot = tracemalloc.take_snapshot()</span><br><span class="line">    top_stats = snapshot.statistics(key_type)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"Top %s lines"</span> % limit)</span><br><span class="line">    <span class="keyword">for</span> index, stat <span class="keyword">in</span> enumerate(top_stats[:limit], <span class="number">1</span>):</span><br><span class="line">        frame = stat.traceback[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># replace "/path/to/module/file.py" with "module/file.py"</span></span><br><span class="line">        filename = os.sep.join(frame.filename.split(os.sep)[<span class="number">-2</span>:])</span><br><span class="line">        print(<span class="string">"#%s: %s:%s: %.1f KiB"</span> % (index, filename, frame.lineno, stat.size / <span class="number">1024</span>))</span><br><span class="line">        line = linecache.getline(frame.filename, frame.lineno).strip()</span><br><span class="line">        <span class="keyword">if</span> line:</span><br><span class="line">            print(<span class="string">'    %s'</span> % line)</span><br><span class="line">    total = sum(stat.size <span class="keyword">for</span> stat <span class="keyword">in</span> top_stats)</span><br><span class="line">    print(<span class="string">"Total allocated size: %.1f KiB"</span> % (total / <span class="number">1024</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    tracemalloc.start()</span><br><span class="line">    a = allocate_bytes(<span class="number">100</span>*<span class="number">1024</span>*<span class="number">1024</span>)</span><br><span class="line">    display_top()</span><br><span class="line">    print(<span class="string">"=============================================="</span>)</span><br><span class="line">    b = allocate_bytes(<span class="number">100</span>*<span class="number">1024</span>*<span class="number">1024</span>)</span><br><span class="line">    display_top()</span><br><span class="line"></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    #case 1: Get the traceback of a memory block</span></span><br><span class="line"><span class="string">    tracemalloc.start(25)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    a = allocate_bytes(100*1024*1024)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    snapshot = tracemalloc.take_snapshot()</span></span><br><span class="line"><span class="string">    top_stats = snapshot.statistics('traceback')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # pick the biggest memory block</span></span><br><span class="line"><span class="string">    stat = top_stats[0]</span></span><br><span class="line"><span class="string">    print("%s memory blocks: %.1f KiB" % (stat.count, stat.size / 1024))</span></span><br><span class="line"><span class="string">    for line in stat.traceback.format():</span></span><br><span class="line"><span class="string">        print(line)</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line"></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    #case 2: Display the top 10</span></span><br><span class="line"><span class="string">    tracemalloc.start()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    a = allocate_bytes(100*1024*1024)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    snapshot = tracemalloc.take_snapshot()</span></span><br><span class="line"><span class="string">    top_stats = snapshot.statistics('lineno') #'filename'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for stat in top_stats[:10]:</span></span><br><span class="line"><span class="string">        print(stat)</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line"></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    #cae 3: Compute differences</span></span><br><span class="line"><span class="string">    tracemalloc.start()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    snapshot1 = tracemalloc.take_snapshot()</span></span><br><span class="line"><span class="string">    a = allocate_bytes(100*1024*1024)</span></span><br><span class="line"><span class="string">    snapshot2 = tracemalloc.take_snapshot()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    top_stats = snapshot2.compare_to(snapshot1, 'lineno')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for stat in top_stats[:10]:</span></span><br><span class="line"><span class="string">        print(stat)</span></span><br><span class="line"><span class="string">    '''</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#result 1:</span><br><span class="line">Top 10 lines</span><br><span class="line">#1: app.py:6: 102400.0 KiB</span><br><span class="line">    return b&apos;x&apos; * size</span><br><span class="line">Total allocated size: 102400.0 KiB</span><br><span class="line">==============================================</span><br><span class="line">Top 10 lines</span><br><span class="line">#1: app.py:6: 204800.1 KiB</span><br><span class="line">    return b&apos;x&apos; * size</span><br><span class="line">#2: python3.6/linecache.py:137: 6.0 KiB</span><br><span class="line">    lines = fp.readlines()</span><br><span class="line">#3: python3.6/linecache.py:47: 0.8 KiB</span><br><span class="line">    return updatecache(filename, module_globals)</span><br><span class="line">#4: python3.6/tracemalloc.py:497: 0.7 KiB</span><br><span class="line">    grouped = self._group_by(key_type, cumulative)</span><br><span class="line">#5: python3.6/tokenize.py:431: 0.6 KiB</span><br><span class="line">    encoding = find_cookie(first)</span><br><span class="line">#6: python3.6/tokenize.py:454: 0.6 KiB</span><br><span class="line">    encoding, lines = detect_encoding(buffer.readline)</span><br><span class="line">#7: python3.6/linecache.py:136: 0.5 KiB</span><br><span class="line">    with tokenize.open(fullname) as fp:</span><br><span class="line">#8: python3.6/linecache.py:16: 0.5 KiB</span><br><span class="line">    lines = getlines(filename, module_globals)</span><br><span class="line">#9: python3.6/tokenize.py:423: 0.5 KiB</span><br><span class="line">    first = read_or_stop()</span><br><span class="line">#10: app.py:10: 0.5 KiB</span><br><span class="line">    top_stats = snapshot.statistics(key_type)</span><br><span class="line">Total allocated size: 204815.3 KiB</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#result 2:</span><br><span class="line">1 memory blocks: 102400.0 KiB</span><br><span class="line">  File &quot;app.py&quot;, line 6</span><br><span class="line">    return b&apos;x&apos; * size</span><br><span class="line">  File &quot;app.py&quot;, line 37</span><br><span class="line">    a = allocate_bytes(100*1024*1024)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#result 3:</span><br><span class="line">app.py:6: size=100 MiB, count=1, average=100 MiB</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#result 4:</span><br><span class="line">app.py:6: size=100 MiB (+100 MiB), count=1 (+1), average=100 MiB</span><br><span class="line">/usr/lib/python3.6/tracemalloc.py:387: size=96 B (+96 B), count=2 (+2), average=48 B</span><br><span class="line">/usr/lib/python3.6/tracemalloc.py:524: size=56 B (+56 B), count=1 (+1), average=56 B</span><br><span class="line">/usr/lib/python3.6/tracemalloc.py:281: size=40 B (+40 B), count=1 (+1), average=40 B</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_threading_pause_stop</title>
      <link href="/posts/c85a5f4f/"/>
      <url>/posts/c85a5f4f/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Job</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        super(Job, self).__init__(*args, **kwargs)</span><br><span class="line">        self.__flag = threading.Event()     <span class="comment"># 用於暫停執行緒的標識</span></span><br><span class="line">        self.__flag.set()                   <span class="comment"># 設定為True</span></span><br><span class="line">        self.__running = threading.Event()  <span class="comment"># 用於停止執行緒的標識</span></span><br><span class="line">        self.__running.set()                <span class="comment"># 將running設定為True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> self.__running.isSet():</span><br><span class="line">            self.__flag.wait()              <span class="comment"># 為True時立即返回, 為False時阻塞直到內部的標識位為True後返回</span></span><br><span class="line">            <span class="keyword">print</span> time.time()</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pause</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.__flag.clear()                 <span class="comment"># 設定為False, 讓執行緒阻塞</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">resume</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.__flag.set()                   <span class="comment"># 設定為True, 讓執行緒停止阻塞</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stop</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.__flag.set()                   <span class="comment"># 將執行緒從暫停狀態恢復, 如何已經暫停的話</span></span><br><span class="line">        self.__running.clear()              <span class="comment"># 設定為False</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_getrefcount</title>
      <link href="/posts/4e13bdc/"/>
      <url>/posts/4e13bdc/</url>
      
        <content type="html"><![CDATA[<p><a href="https://rushter.com/blog/python-garbage-collector/" target="_blank" rel="noopener">https://rushter.com/blog/python-garbage-collector/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">foo = []</span><br><span class="line"></span><br><span class="line"># 2 references, 1 from the foo var and 1 from getrefcount</span><br><span class="line">print(sys.getrefcount(foo))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def bar(a):</span><br><span class="line">    # 4 references</span><br><span class="line">    # from the foo var, function argument, getrefcount and Python&apos;s function stack</span><br><span class="line">    print(sys.getrefcount(a))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bar(foo)</span><br><span class="line"># 2 references, the function scope is destroyed</span><br><span class="line">print(sys.getrefcount(foo))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_virtualenv</title>
      <link href="/posts/e0c8846c/"/>
      <url>/posts/e0c8846c/</url>
      
        <content type="html"><![CDATA[<p><code>pip install virtualenv --user</code><br>如果不加–user，會有error<br>Could not install packages due to an EnvironmentError: [Errno 13] Permission denied: ‘c:\program files (x86)\python37\Lib\site-packages\virtualenv.py’<br>Consider using the <code>--user</code> option or check the permissions.</p><p>win10會將virtualenv安裝在<br>C:\Users\831392\AppData\Roaming\Python\Python37\Scripts<br>可以設定成環境變數方便使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ pip install virtualenv --user</span><br><span class="line">Collecting virtualenv</span><br><span class="line">Using cached https://files.pythonhosted.org/packages/b6/30/96a02b2287098b23b875bc8c2f58071c35d2efe84f747b64d523721dc2b5/virtualenv-16.0.0-py2.py3-none-any.whl</span><br><span class="line">Installing collected packages: virtualenv</span><br><span class="line">The script virtualenv.exe is installed <span class="keyword">in</span> <span class="string">'C:\Users\Nick\AppData\Roaming\Python\Python37\Scripts'</span> <span class="built_in">which</span> is not on PATH.</span><br><span class="line">Consider adding this directory to PATH or, <span class="keyword">if</span> you prefer to suppress this warning, use --no-warn-script-location. Successfully installed virtualenv-16.0.0</span><br></pre></td></tr></table></figure><p>如果系統中預設的python是python2<br>用virtualenv建立環境時，預設有可能會使用python2來建立</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ virtualenv venv</span><br><span class="line">Running virtualenv with interpreter /usr/bin/python2</span><br><span class="line">New python executable <span class="keyword">in</span> /home/nick/HH/wrapper_server/venv/bin/python2</span><br><span class="line">Also creating executable <span class="keyword">in</span> /home/nick/HH/wrapper_server/venv/bin/python</span><br><span class="line">Installing setuptools, pkg_resources, pip, wheel...done.</span><br></pre></td></tr></table></figure><p>可以手動指定python的版本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ virtualenv vnev --python=python3</span><br><span class="line">$ virtualenv vnev --python=python3.6</span><br></pre></td></tr></table></figure><h4 id="virtualenv-v-s-virtualenvwrapper"><a href="#virtualenv-v-s-virtualenvwrapper" class="headerlink" title="virtualenv v.s. virtualenvwrapper"></a>virtualenv v.s. virtualenvwrapper</h4><h5 id="virtualenv"><a href="#virtualenv" class="headerlink" title="virtualenv"></a>virtualenv</h5><ol><li>安裝<br>pip install virtualenv</li><li>建立虛擬環境<br>cd my_project<br>virtualenv venv</li><li>啟動虛擬環境<br>source venv/bin/activate</li><li>退出虛擬環境<br>deactivate</li></ol><h5 id="virtualenvwrapper"><a href="#virtualenvwrapper" class="headerlink" title="virtualenvwrapper"></a>virtualenvwrapper</h5><p>好處=&gt;將所有的虛擬環境整合在一個目錄下，不會在project中建立venv的資料夾，git管理方便；搜尋也方便</p><ol><li>安裝<br>pip install virtualenvwrapper</li><li>Configurations<br>export WORKON_HOME=$HOME/.virtualenv<br>source /usr/local/bin/virtualenvwrapper.sh #第一次執行會自動建立<del>/.virtualenv<br>source /home/nick/.local/bin/virtualenvwrapper.sh #第一次執行會自動建立</del>/.virtualenv</li><li>建立虛擬環境<br>mkvirtualenv venv //會將虛擬環境建立在WORKON_HOME目錄</li><li>啟動虛擬環境<br>workon venv</li><li>退出虛擬環境<br>deactivate</li><li>刪除虛擬環境<br>rmvirtualenv</li><li>列出所有虛擬環境<br>lsvirtualenv [-b -l]</li><li>列出環境裡安裝了什麼packages<br>lssitepackages</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>setup_flask_application</title>
      <link href="/posts/80d36e57/"/>
      <url>/posts/80d36e57/</url>
      
        <content type="html"><![CDATA[<h2 id="Flask-application-using-development-server"><a href="#Flask-application-using-development-server" class="headerlink" title="Flask application using development server"></a>Flask application using development server</h2><ol><li>Use application factory to create instances of your Flask app</li><li>Modular application with Blueprint</li><li>Set static folder</li><li>Allow cross-domain request if needed</li></ol><h2 id="Flask-application-deployment-for-production"><a href="#Flask-application-deployment-for-production" class="headerlink" title="Flask application deployment for production"></a>Flask application deployment for production</h2><ol><li>Run application by gunicorn, nginx, and supervisor</li><li>Deploy application using docker container and docker-compose</li></ol><h2 id="Add-mysql-module"><a href="#Add-mysql-module" class="headerlink" title="Add mysql module"></a>Add mysql module</h2><ol><li>Make sure mysql is activated completely before gunicorn</li><li>Create database if not exist</li><li>Use flask-sqlalchemy to access database</li><li>Start mysql service by docker-compose</li></ol><h2 id="Add-crontab-module"><a href="#Add-crontab-module" class="headerlink" title="Add crontab module"></a>Add crontab module</h2><ol><li>Fetch environment and enabled for cron commands if needed</li><li>run-one can guatantee a task only be executed once at the same time</li><li>Start cron process by supervisor</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_selenium_chromedriver</title>
      <link href="/posts/71d3a875/"/>
      <url>/posts/71d3a875/</url>
      
        <content type="html"><![CDATA[<p><a href="https://stackoverflow.com/questions/57243622/docker-google-cloud-chromedriver-executable-needs-to-be-in-path" target="_blank" rel="noopener">https://stackoverflow.com/questions/57243622/docker-google-cloud-chromedriver-executable-needs-to-be-in-path</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.6-alpine</span><br><span class="line"></span><br><span class="line">RUN apk add --update chromium chromium-chromedriver</span><br><span class="line">RUN pip install selenium</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    chrome_options = webdriver.ChromeOptions()</span><br><span class="line">    chrome_options.add_argument(&apos;--headless&apos;)</span><br><span class="line">    chrome_options.add_argument(&apos;--no-sandbox&apos;)</span><br><span class="line">    chrome_options.add_argument(&apos;--disable-dev-shm-usage&apos;)</span><br><span class="line">    driver = webdriver.Chrome(executable_path=&apos;/usr/bin/chromedriver&apos;, options=chrome_options)</span><br><span class="line">    driver.get(&apos;https://google.com&apos;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_pytest_fixture</title>
      <link href="/posts/3c416c32/"/>
      <url>/posts/3c416c32/</url>
      
        <content type="html"><![CDATA[<h1 id="pytest-Fixtures"><a href="#pytest-Fixtures" class="headerlink" title="pytest Fixtures"></a>pytest Fixtures</h1><p>fixture scope 有 function, module, session<br>預設是function</p><ul><li>function<br>每個 test 所使用的 fixture 都是不一樣的。如果以網路連線的 fixture 為例，每次執行測試都會重開一個網路連線</li><li>module<br>同一個 module 裡的測試會用相同的 fixture。如果以網路連線 fixture 為例，相同 module 的測試都是共用同一個網路連線 fixture</li><li>session<br>同一次測試裡的 fixture 都是一樣的。如果以網路連線 fixture 為例，所有測試都是使用同一個網路連線 fixture</li></ul><ul><li>pytest 可以自動把 fixture 的名字帶到測試函數中，例如 20 個測試函數都需要同樣的 fixture 的話，就可以直接在測試函數寫上與該 fixture 同名的參數， pytest 就會自動幫忙代入 fixture</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"></span><br><span class="line"><span class="meta">@pytest.fixture()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hello_world"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_h_in_hello_world</span><span class="params">(hello_world)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> <span class="string">"h"</span> <span class="keyword">in</span> hello_world</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_w_in_hello_world</span><span class="params">(hello_world)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> <span class="string">"w"</span> <span class="keyword">in</span> hello_world</span><br></pre></td></tr></table></figure><ul><li>Parametrizing a fixture<br>有些時候可能 fixture 需要針對多種不同的參數進行測試，例如測試不同的 server ip/domain ，這時可以選擇 parametrizing a fixture ， pytest 就會自動幫忙針對不同的 fixture 參數執行測試，就不用額外多寫個測試了。</li></ul><p>以 test_action 為例子， pytest 自動以 start, stop 各自進行一次測試</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"></span><br><span class="line"><span class="meta">@pytest.fixture(scope='module', params=['start', 'stop'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">action</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> request.param</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_action</span><span class="params">(action)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> <span class="string">'pause'</span> == action</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ py.test test_parametrizing_test.py</span><br><span class="line">================== <span class="built_in">test</span> session starts ==================</span><br><span class="line">platform linux2 -- Python 2.7.9, pytest-2.8.5, py-1.4.31, pluggy-0.3.1</span><br><span class="line">rootdir: /home/user/test_action.py, inifile:</span><br><span class="line">collected 2 items</span><br><span class="line">test_action.py FF</span><br><span class="line">======================= FAILURES ========================</span><br><span class="line">__________________ test_action[start] ___________________</span><br><span class="line">action = <span class="string">'start'</span></span><br><span class="line">    def test_action(action):</span><br><span class="line">&gt;       assert <span class="string">'pause'</span> == action</span><br><span class="line">E       assert <span class="string">'pause'</span> == <span class="string">'start'</span></span><br><span class="line">E         - pause</span><br><span class="line">E         + start</span><br><span class="line">test_action.py:8: AssertionError</span><br><span class="line">___________________ test_action[stop] ___________________</span><br><span class="line">action = <span class="string">'stop'</span></span><br><span class="line">    def test_action(action):</span><br><span class="line">&gt;       assert <span class="string">'pause'</span> == action</span><br><span class="line">E       assert <span class="string">'pause'</span> == <span class="string">'stop'</span></span><br><span class="line">E         - pause</span><br><span class="line">E         + stop</span><br><span class="line">test_action.py:8: AssertionError</span><br><span class="line">=============== 2 failed <span class="keyword">in</span> 0.02 seconds ================</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_pytest</title>
      <link href="/posts/1555af5b/"/>
      <url>/posts/1555af5b/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/liuchunming033/article/details/46501653" target="_blank" rel="noopener">https://blog.csdn.net/liuchunming033/article/details/46501653</a><br><a href="http://note.qidong.name/2018/01/pytest-fixture/" target="_blank" rel="noopener">http://note.qidong.name/2018/01/pytest-fixture/</a><br><a href="http://kuanghy.github.io/2018/05/08/pytest" target="_blank" rel="noopener">http://kuanghy.github.io/2018/05/08/pytest</a><br><a href="https://senarukana.github.io/2015/05/29/pytest-fixture/" target="_blank" rel="noopener">https://senarukana.github.io/2015/05/29/pytest-fixture/</a><br><a href="https://myapollo.com.tw/2018/09/15/flask-test-client-get-post-examples/" target="_blank" rel="noopener">https://myapollo.com.tw/2018/09/15/flask-test-client-get-post-examples/</a><br><a href="https://www.jianshu.com/p/36128049fefc" target="_blank" rel="noopener">https://www.jianshu.com/p/36128049fefc</a><br><a href="http://note.qidong.name/2018/02/pytest-mock/" target="_blank" rel="noopener">http://note.qidong.name/2018/02/pytest-mock/</a><br><a href="https://www.patricksoftwareblog.com/testing-a-flask-application-using-pytest/" target="_blank" rel="noopener">https://www.patricksoftwareblog.com/testing-a-flask-application-using-pytest/</a><br><a href="https://myapollo.com.tw/2017/10/27/pytest-coverage/" target="_blank" rel="noopener">https://myapollo.com.tw/2017/10/27/pytest-coverage/</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install pytest</span><br><span class="line">pip install pytest-html</span><br><span class="line">pip install pytest-cov</span><br></pre></td></tr></table></figure><p>會安裝下列相關的套件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">atomicwrites==1.3.0</span><br><span class="line">attrs==19.1.0</span><br><span class="line">coverage==4.5.3</span><br><span class="line">more-itertools==7.0.0</span><br><span class="line">pluggy==0.9.0</span><br><span class="line">py==1.8.0</span><br><span class="line">pytest==4.4.0</span><br><span class="line">pytest-cov==2.6.1</span><br><span class="line">pytest-html==1.20.0</span><br><span class="line">pytest-metadata==1.8.0</span><br><span class="line">six==1.12.0</span><br></pre></td></tr></table></figure><p>command</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">execute commands under /<span class="built_in">test</span></span><br><span class="line">pytest <span class="comment">#run all tests velow current dir</span></span><br><span class="line">pytest test_xxx.py <span class="comment">#run tests in module file test_xxx.py</span></span><br><span class="line">pytest --html=log.html <span class="comment">#run tests and generate report log.html</span></span><br><span class="line">pytest --cov-report=html --cov=./ <span class="comment">#run tests and calculate the coverage for test files</span></span><br><span class="line">pytest test_xxx.py::TestClass::test_func <span class="comment"># test test_func in the TestClass in the test_xxx.py</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> session</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestAuth</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_login</span><span class="params">(self)</span>:</span></span><br><span class="line">        s = session()</span><br><span class="line">        base_uri = <span class="string">'http://127.0.0.1:8857'</span></span><br><span class="line">        data =&#123;<span class="string">'username'</span>: <span class="string">'admin'</span>, <span class="string">'password'</span>: <span class="string">'123456'</span>&#125;</span><br><span class="line"></span><br><span class="line">        ret = s.post(base_uri + <span class="string">'/api/auth/login'</span>, data)</span><br><span class="line">        print(ret.content)</span><br><span class="line">        <span class="keyword">assert</span> ret.status_code == <span class="number">200</span></span><br><span class="line">        response = &#123;</span><br><span class="line">            <span class="string">'code'</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">'data'</span>: &#123;&#125;,</span><br><span class="line">            <span class="string">'page'</span>: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ret_json = json.loads(ret.content)</span><br><span class="line">        <span class="keyword">assert</span> ret_json == response</span><br><span class="line">        <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure><p>在根目錄下執行以下指令，輸出的結果會在coverage目錄裡<br><code>python -m pytest test --cov=. --cov-report html:coverage</code></p><p>pytest #run all tests below current dir<br>pytest test_xxx.py #run tests in module file test_xxx.py<br>pytest –html=log.html #run tests and generate report log.html<br>pytest –cov-report=html –cov=./ #run tests and calculate the coverage for test files</p><ul><li>To run a specific test within a module:<br>pytest test_mod.py::test_func<br>pytest test_mod.py::TestClass::test_method</li></ul><p>python -m pytest -vv test –cov=. –cov-report html:coverage –html=./coverage/log.html<br>python -m pytest -vv -s test –cov=. –cov-report html:coverage –html=./coverage/log.html<br>docker exec -it hh_imfr bash -c “python3.6 -m pytest -vv -s test –cov=. –cov-report html:coverage –html=./coverage/log.html”</p><p><a href="https://www.cnblogs.com/landhu/p/7462221.html" target="_blank" rel="noopener">https://www.cnblogs.com/landhu/p/7462221.html</a></p><ol><li>執行指定文件<br>pytest test_mod.py</li><li>執行指定目錄下所有文件<br>pytest tests/</li><li>執行指定module中的function<br>pytest test_mod.py::testfunc</li><li>執行指定module中的class funtion<br>pytest testmod.py::testclass::test_method</li></ol><p>-vv 顯示詳細的信息<br>-s 捕獲輸出, 例如顯示 print 函數的輸出<br>-x 首次失敗後停止執行</p><p>ENV_FACEPP_HOST=”192.168.56.3:8866” ENV_FACEPP_ACCOUNT=”<a href="mailto:face@aptg.com.tw" target="_blank" rel="noopener">face@aptg.com.tw</a>“ ENV_FACEPP_PASSWORD=”123456” python3.6 -m pytest -vv -s test –cov=. –cov-report html:coverage –html=./coverage/log.html</p><p>python3.6 -m pytest -vv -s test/test_WSGIServer.py –cov=. –cov-report html:coverage –html=./coverage/log.html</p><p>ENV_FACEPP_HOST=”192.168.56.3:8866” ENV_FACEPP_ACCOUNT=”<a href="mailto:face@aptg.com.tw" target="_blank" rel="noopener">face@aptg.com.tw</a>“ ENV_FACEPP_PASSWORD=”123456” python3.6 -m pytest -vv -s test/test_WSGIServer.py –cov=. –cov-report=html –cov-config=test/setup.cfg –html=coverage/log.html</p><p><a href="https://pytest-cov.readthedocs.io/en/latest/config.html" target="_blank" rel="noopener">https://pytest-cov.readthedocs.io/en/latest/config.html</a><br><a href="https://myapollo.com.tw/2017/10/27/pytest-coverage/" target="_blank" rel="noopener">https://myapollo.com.tw/2017/10/27/pytest-coverage/</a><br><a href="https://coverage.readthedocs.io/en/latest/config.html" target="_blank" rel="noopener">Configuration reference</a></p><p>ENV_FACEPP_HOST=”192.168.56.3:8866” ENV_FACEPP_ACCOUNT=”<a href="mailto:face@aptg.com.tw" target="_blank" rel="noopener">face@aptg.com.tw</a>“ ENV_FACEPP_PASSWORD=”123456” python3.6 -m pytest -vv -s test –cov=. –cov-report=html –cov-config=test/setup.cfg –html=coverage/log.html</p><p>python3.6 -m pytest -vv -s app/test/test_subject.py –cov=. –cov-config=app/test/setup.cfg –cov-report=html –html=coverage/log.html<br>python3.6 -m pytest -vv -s app/test/test_event.py –cov=. –cov-config=app/test/setup.cfg –cov-report=html –html=coverage/log.html</p><h3 id="Trouble-Shooting"><a href="#Trouble-Shooting" class="headerlink" title="Trouble Shooting"></a>Trouble Shooting</h3><p>pytest 路徑問題</p><p>在test file中，若是import project內的module，會發生ModuleNotFoundError<br><img src="/posts/1555af5b/image_01.png" alt></p><ul><li><p>法一<br>在project根目錄下，直接執行<br><code>python -m pytest app/test/test_auth.py</code><br><img src="/posts/1555af5b/image_02.png" alt></p></li><li><p>法二<br>設定PYTHONPATH<br><img src="/posts/1555af5b/image_03.png" alt></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pyqt5_webview</title>
      <link href="/posts/69706db6/"/>
      <url>/posts/69706db6/</url>
      
        <content type="html"><![CDATA[<p>pip install PyQt5<br>pip install PyQtWebEngine</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">from PyQt5.QtWidgets import QApplication</span><br><span class="line">from PyQt5.QtCore import QUrl</span><br><span class="line">from PyQt5.QtWebEngineWidgets import QWebEngineView</span><br><span class="line"></span><br><span class="line">app = QApplication(sys.argv)</span><br><span class="line"></span><br><span class="line">web = QWebEngineView()</span><br><span class="line">web.load(QUrl(&quot;https://tw.yahoo.com&quot;))</span><br><span class="line">web.show()</span><br><span class="line"></span><br><span class="line">sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>opencv_face_detection</title>
      <link href="/posts/1953e58/"/>
      <url>/posts/1953e58/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">face_cascade = cv2.CascadeClassifier(<span class="string">'haarcascade_frontalface_default.xml'</span>)</span><br><span class="line">eye_cascade = cv2.CascadeClassifier(<span class="string">'haarcascade_eye.xml'</span>)</span><br><span class="line"></span><br><span class="line">img = cv2.imread(<span class="string">'img.jpg'</span>)</span><br><span class="line">gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line">faces = face_cascade.detectMultiScale(gray, <span class="number">1.3</span>, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> (x,y,w,h) <span class="keyword">in</span> faces:</span><br><span class="line">    img = cv2.rectangle(img,(x,y),(x+w,y+h),(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">2</span>)</span><br><span class="line">    roi_gray = gray[y:y+h, x:x+w]</span><br><span class="line">    roi_color = img[y:y+h, x:x+w]</span><br><span class="line">    eyes = eye_cascade.detectMultiScale(roi_gray)</span><br><span class="line">    <span class="keyword">for</span> (ex,ey,ew,eh) <span class="keyword">in</span> eyes:</span><br><span class="line">        cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">'img'</span>,img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>opencv</title>
      <link href="/posts/8b5f195/"/>
      <url>/posts/8b5f195/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.gtwang.org/programming/opencv-drawing-functions-tutorial/" target="_blank" rel="noopener">https://blog.gtwang.org/programming/opencv-drawing-functions-tutorial/</a></p><h4 id="直線"><a href="#直線" class="headerlink" title="直線"></a>直線</h4><p>cv2.line(影像, 開始座標, 結束座標, 顏色, 線條寬度)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立一張 512x512 的 RGB 圖片（黑色）</span></span><br><span class="line">img = np.zeros((<span class="number">256</span>, <span class="number">256</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將圖片用淺灰色 (200, 200, 200) 填滿</span></span><br><span class="line">img.fill(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在圖片上畫一條紅色的對角線，寬度為 5 px</span></span><br><span class="line">cv2.line(img, (<span class="number">0</span>, <span class="number">0</span>), (<span class="number">255</span>, <span class="number">255</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 顯示圖片</span></span><br><span class="line">cv2.imshow(<span class="string">'My Image'</span>, img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按下任意鍵則關閉所有視窗</span></span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><img src="/posts/8b5f195/image_01.png" alt></p><h4 id="方框"><a href="#方框" class="headerlink" title="方框"></a>方框</h4><p>cv2.rectangle(影像, 頂點座標, 對向頂點座標, 顏色, 線條寬度)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img = np.zeros((<span class="number">256</span>, <span class="number">256</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">img.fill(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">cv2.line(img, (<span class="number">0</span>, <span class="number">0</span>), (<span class="number">255</span>, <span class="number">255</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在圖片上畫一個綠色方框，線條寬度為 2 px</span></span><br><span class="line">cv2.rectangle(img, (<span class="number">20</span>, <span class="number">60</span>), (<span class="number">120</span>, <span class="number">160</span>), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 綠色實心方框</span></span><br><span class="line">cv2.rectangle(img, (<span class="number">40</span>, <span class="number">80</span>), (<span class="number">100</span>, <span class="number">140</span>), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">'My Image'</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><img src="/posts/8b5f195/image_02.png" alt></p><h4 id="圓圈"><a href="#圓圈" class="headerlink" title="圓圈"></a>圓圈</h4><p>cv2.circle(影像, 圓心座標, 半徑, 顏色, 線條寬度)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img = np.zeros((<span class="number">256</span>, <span class="number">256</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">img.fill(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">cv2.line(img, (<span class="number">0</span>, <span class="number">0</span>), (<span class="number">255</span>, <span class="number">255</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">5</span>)</span><br><span class="line">cv2.rectangle(img, (<span class="number">20</span>, <span class="number">60</span>), (<span class="number">120</span>, <span class="number">160</span>), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">cv2.rectangle(img, (<span class="number">40</span>, <span class="number">80</span>), (<span class="number">100</span>, <span class="number">140</span>), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 黃色圓圈，線條寬度為 3 px</span></span><br><span class="line">cv2.circle(img,(<span class="number">90</span>, <span class="number">210</span>), <span class="number">30</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 藍色實心圓圈</span></span><br><span class="line">cv2.circle(img,(<span class="number">140</span>, <span class="number">170</span>), <span class="number">15</span>, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">'My Image'</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><img src="/posts/8b5f195/image_03.png" alt></p><h4 id="橢圓形"><a href="#橢圓形" class="headerlink" title="橢圓形"></a>橢圓形</h4><p>cv2.ellipse(影像, 中心座標, 軸長, 旋轉角度, 起始角度, 結束角度, 顏色, 線條寬度)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img = np.zeros((<span class="number">256</span>, <span class="number">256</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">img.fill(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">cv2.line(img, (<span class="number">0</span>, <span class="number">0</span>), (<span class="number">255</span>, <span class="number">255</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">5</span>)</span><br><span class="line">cv2.rectangle(img, (<span class="number">20</span>, <span class="number">60</span>), (<span class="number">120</span>, <span class="number">160</span>), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">cv2.rectangle(img, (<span class="number">40</span>, <span class="number">80</span>), (<span class="number">100</span>, <span class="number">140</span>), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">cv2.circle(img,(<span class="number">90</span>, <span class="number">210</span>), <span class="number">30</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">3</span>)</span><br><span class="line">cv2.circle(img,(<span class="number">140</span>, <span class="number">170</span>), <span class="number">15</span>, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 傾斜 45 度的紫色橢圓形</span></span><br><span class="line">cv2.ellipse(img, (<span class="number">180</span>, <span class="number">200</span>), (<span class="number">25</span>, <span class="number">55</span>), <span class="number">45</span>, <span class="number">0</span>, <span class="number">360</span>, (<span class="number">205</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 傾斜 45 度的半個實心橢圓</span></span><br><span class="line">cv2.ellipse(img, (<span class="number">180</span>, <span class="number">200</span>), (<span class="number">20</span>, <span class="number">50</span>), <span class="number">45</span>, <span class="number">0</span>, <span class="number">180</span>, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">'My Image'</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><img src="/posts/8b5f195/image_04.png" alt></p><h4 id="折線"><a href="#折線" class="headerlink" title="折線"></a>折線</h4><p>cv2.polylines(影像, 頂點座標, 封閉型, 顏色, 線條寬度)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img = np.zeros((<span class="number">256</span>, <span class="number">256</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">img.fill(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">cv2.line(img, (<span class="number">0</span>, <span class="number">0</span>), (<span class="number">255</span>, <span class="number">255</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">5</span>)</span><br><span class="line">cv2.rectangle(img, (<span class="number">20</span>, <span class="number">60</span>), (<span class="number">120</span>, <span class="number">160</span>), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">cv2.rectangle(img, (<span class="number">40</span>, <span class="number">80</span>), (<span class="number">100</span>, <span class="number">140</span>), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">cv2.circle(img,(<span class="number">90</span>, <span class="number">210</span>), <span class="number">30</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">3</span>)</span><br><span class="line">cv2.circle(img,(<span class="number">140</span>, <span class="number">170</span>), <span class="number">15</span>, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">-1</span>)</span><br><span class="line">cv2.ellipse(img, (<span class="number">180</span>, <span class="number">200</span>), (<span class="number">25</span>, <span class="number">55</span>), <span class="number">45</span>, <span class="number">0</span>, <span class="number">360</span>, (<span class="number">205</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">cv2.ellipse(img, (<span class="number">180</span>, <span class="number">200</span>), (<span class="number">20</span>, <span class="number">50</span>), <span class="number">45</span>, <span class="number">0</span>, <span class="number">180</span>, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 設定多邊形頂點座標</span></span><br><span class="line">pts = np.array([[<span class="number">170</span>, <span class="number">55</span>], [<span class="number">165</span>, <span class="number">75</span>], [<span class="number">220</span>, <span class="number">80</span>], [<span class="number">200</span>, <span class="number">60</span>]], np.int32)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將座標轉為 (頂點數量, 1, 2) 的陣列</span></span><br><span class="line">pts = pts.reshape((<span class="number">-1</span>, <span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 繪製多邊形</span></span><br><span class="line">cv2.polylines(img, [pts], <span class="literal">True</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">'My Image'</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><img src="/posts/8b5f195/image_05.png" alt></p><h4 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h4><p>cv2.putText(影像, 文字, 座標, 字型, 大小, 顏色, 線條寬度, 線條種類)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img = np.zeros((<span class="number">400</span>, <span class="number">400</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line">img.fill(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文字</span></span><br><span class="line">text = <span class="string">'Hello, OpenCV!'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用各種字體</span></span><br><span class="line">cv2.putText(img, text, (<span class="number">10</span>, <span class="number">40</span>), cv2.FONT_HERSHEY_SIMPLEX,</span><br><span class="line">  <span class="number">1</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">cv2.putText(img, text, (<span class="number">10</span>, <span class="number">80</span>), cv2.FONT_HERSHEY_PLAIN,</span><br><span class="line">  <span class="number">1</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">cv2.putText(img, text, (<span class="number">10</span>, <span class="number">120</span>), cv2.FONT_HERSHEY_DUPLEX,</span><br><span class="line">  <span class="number">1</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">cv2.putText(img, text, (<span class="number">10</span>, <span class="number">160</span>), cv2.FONT_HERSHEY_COMPLEX,</span><br><span class="line">  <span class="number">1</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">cv2.putText(img, text, (<span class="number">10</span>, <span class="number">200</span>), cv2.FONT_HERSHEY_TRIPLEX,</span><br><span class="line">  <span class="number">1</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">cv2.putText(img, text, (<span class="number">10</span>, <span class="number">240</span>), cv2.FONT_HERSHEY_COMPLEX_SMALL,</span><br><span class="line">  <span class="number">1</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">cv2.putText(img, text, (<span class="number">10</span>, <span class="number">280</span>), cv2.FONT_HERSHEY_SCRIPT_SIMPLEX,</span><br><span class="line">  <span class="number">1</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">cv2.putText(img, text, (<span class="number">10</span>, <span class="number">320</span>), cv2.FONT_HERSHEY_SCRIPT_COMPLEX,</span><br><span class="line">  <span class="number">1</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">'My Image'</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><img src="/posts/8b5f195/image_06.png" alt></p><h4 id="使用-TTF-字型檔"><a href="#使用-TTF-字型檔" class="headerlink" title="使用 TTF 字型檔"></a>使用 TTF 字型檔</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageFont, ImageDraw, Image</span><br><span class="line"></span><br><span class="line">img = np.zeros((<span class="number">450</span>, <span class="number">450</span>, <span class="number">3</span>), np.uint8)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將背景設定為大紅色</span></span><br><span class="line">img[:] = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文字</span></span><br><span class="line">text = <span class="string">'招財\n進寶'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定 TTF 字體檔</span></span><br><span class="line">fontPath = <span class="string">"./康熙字典體.ttf"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 載入字體</span></span><br><span class="line">font = ImageFont.truetype(fontPath, <span class="number">192</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將 NumPy 陣列轉為 PIL 影像</span></span><br><span class="line">imgPil = Image.fromarray(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在圖片上加入文字</span></span><br><span class="line">draw = ImageDraw.Draw(imgPil)</span><br><span class="line">draw.text((<span class="number">30</span>, <span class="number">30</span>),  text, font = font, fill = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將 PIL 影像轉回 NumPy 陣列</span></span><br><span class="line">img = np.array(imgPil)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">'My Image'</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p><img src="/posts/8b5f195/image_07.png" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_print_class_variables</title>
      <link href="/posts/ad5ef208/"/>
      <url>/posts/ad5ef208/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Animal(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.legs = 2</span><br><span class="line">        self.name = &apos;Dog&apos;</span><br><span class="line">        self.color= &apos;Spotted&apos;</span><br><span class="line">        self.smell= &apos;Alot&apos;</span><br><span class="line">        self.age  = 10</span><br><span class="line">        self.kids = 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">an = Animal()</span><br><span class="line">attrs = vars(an)</span><br><span class="line">print(&apos;, &apos;.join(&quot;%s: %s&quot; % item for item in attrs.items()))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_period_jobs</title>
      <link href="/posts/4830199a/"/>
      <url>/posts/4830199a/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/365109/" target="_blank" rel="noopener">https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/365109/</a><br><a href="https://segmentfault.com/a/1190000011084828" target="_blank" rel="noopener">https://segmentfault.com/a/1190000011084828</a><br><a href="http://slark.info/2017/09/07/%E4%BB%8Eapscheduler%E8%B0%88%E5%88%B0%E5%BB%B6%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%A4%84%E7%90%86-%E4%B8%80/" target="_blank" rel="noopener">http://slark.info/2017/09/07/%E4%BB%8Eapscheduler%E8%B0%88%E5%88%B0%E5%BB%B6%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%A4%84%E7%90%86-%E4%B8%80/</a></p><p>pip install apscheduler</p><ul><li><p>Scheduler Type<br>BlockingScheduler：僅可用在當前你的程序之內，與當前的進行共享計算資源<br>BackgroundScheduler:　在後臺執行排程，不影響當前的系統計算執行<br>AsyncIOScheduler:　如果當前系統中使用了async module，則需要使用非同步的排程器<br>GeventScheduler:　如果使用了gevent，則需要使用該排程<br>TornadoScheduler:　如果使用了Tornado, 則使用當前的排程器<br>TwistedScheduler:Twister應用的排程器<br>QtScheduler:　Qt的排程器</p></li><li><p>trigger组件<br>date: 只在某個時間點執行一次<br>interval: 每隔一段時間執行一次<br>cron: 使用同linux下crontab的方式</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">APScheduler==3.6.0</span><br><span class="line">pytz==2019.1</span><br><span class="line">six==1.12.0</span><br><span class="line">tzlocal==1.5.1</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> apscheduler.schedulers.background <span class="keyword">import</span> BackgroundScheduler</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_date_time</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"new work doing..."</span>)</span><br><span class="line">    time.sleep(random.randint(<span class="number">1</span>, <span class="number">10</span>))</span><br><span class="line">    print(time.strftime(<span class="string">"%A, %d. %B %Y %I:%M:%S %p"</span>))</span><br><span class="line"></span><br><span class="line">scheduler = BackgroundScheduler()</span><br><span class="line">scheduler.start()</span><br><span class="line"></span><br><span class="line">job = scheduler.add_job(func=print_date_time, trigger=<span class="string">"interval"</span>, seconds=<span class="number">5</span>)</span><br><span class="line">job.remove()</span><br><span class="line"></span><br><span class="line"><span class="comment">#import atexit</span></span><br><span class="line"><span class="comment"># Shut down the scheduler when exiting the app</span></span><br><span class="line"><span class="comment">#atexit.register(lambda: scheduler.shutdown())</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:44:49,797 - [/app/app/foundation.py:30] - INFO Wednesday, 29. May 2019 04:44:49 PM\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:44:49.798794097Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:44:49,799 - [/app/app/foundation.py:28] - INFO new work doing...\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:44:49.801053894Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;Execution of job \&quot;print_date_time (trigger: interval[0:00:05], next run at: 2019-05-29 16:44:54 CST)\&quot; skipped: maximum number of running instances reached (1)\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:44:54.79513305Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:44:54,811 - [/app/app/foundation.py:30] - INFO Wednesday, 29. May 2019 04:44:54 PM\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:44:54.813206541Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:44:59,793 - [/app/app/foundation.py:28] - INFO new work doing...\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:44:59.795272865Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:45:03,796 - [/app/app/foundation.py:30] - INFO Wednesday, 29. May 2019 04:45:03 PM\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:03.798538219Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:45:04,812 - [/app/app/foundation.py:28] - INFO new work doing...\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:04.813942546Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;Execution of job \&quot;print_date_time (trigger: interval[0:00:05], next run at: 2019-05-29 16:45:09 CST)\&quot; skipped: maximum number of running instances reached (1)\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:09.833079458Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:45:10,828 - [/app/app/foundation.py:30] - INFO Wednesday, 29. May 2019 04:45:10 PM\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:10.829141668Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:45:14,797 - [/app/app/foundation.py:28] - INFO new work doing...\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:14.798225389Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;Execution of job \&quot;print_date_time (trigger: interval[0:00:05], next run at: 2019-05-29 16:45:19 CST)\&quot; skipped: maximum number of running instances reached (1)\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:19.797481515Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:45:23,800 - [/app/app/foundation.py:30] - INFO Wednesday, 29. May 2019 04:45:23 PM\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:23.801753502Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:45:24,791 - [/app/app/foundation.py:28] - INFO new work doing...\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:24.791963078Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;Execution of job \&quot;print_date_time (trigger: interval[0:00:05], next run at: 2019-05-29 16:45:29 CST)\&quot; skipped: maximum number of running instances reached (1)\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:29.810835667Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:45:34,792 - [/app/app/foundation.py:30] - INFO Wednesday, 29. May 2019 04:45:34 PM\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:34.792841708Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:45:34,793 - [/app/app/foundation.py:28] - INFO new work doing...\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:34.793527943Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;Execution of job \&quot;print_date_time (trigger: interval[0:00:05], next run at: 2019-05-29 16:45:39 CST)\&quot; skipped: maximum number of running instances reached (1)\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:39.799708141Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:45:42,803 - [/app/app/foundation.py:30] - INFO Wednesday, 29. May 2019 04:45:42 PM\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:42.803948426Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2019-05-29 16:45:44,793 - [/app/app/foundation.py:28] - INFO new work doing...\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2019-05-29T08:45:44.793580805Z&quot;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_pympler</title>
      <link href="/posts/de31b74d/"/>
      <url>/posts/de31b74d/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pypi.org/project/Pympler/" target="_blank" rel="noopener">https://pypi.org/project/Pympler/</a></p><p><a href="https://stackoverflow.com/questions/47447270/how-to-find-the-largest-objects-in-memory" target="_blank" rel="noopener">https://stackoverflow.com/questions/47447270/how-to-find-the-largest-objects-in-memory</a><br><a href="https://pythonhosted.org/Pympler/muppy.html" target="_blank" rel="noopener">https://pythonhosted.org/Pympler/muppy.html</a><br><a href="https://buildmedia.readthedocs.org/media/pdf/pympler/latest/pympler.pdf" target="_blank" rel="noopener">https://buildmedia.readthedocs.org/media/pdf/pympler/latest/pympler.pdf</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from pympler import summary, muppy</span><br><span class="line"></span><br><span class="line">def memory_summary1():</span><br><span class="line">    mem_summary = summary.summarize(muppy.get_objects())</span><br><span class="line">    rows = summary.format_(mem_summary)</span><br><span class="line">    return &apos;\n&apos;.join(rows)</span><br><span class="line"></span><br><span class="line">print(memory_summary1())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">from pympler import tracker</span><br><span class="line">from operator import itemgetter</span><br><span class="line"></span><br><span class="line">def memory_summary2():</span><br><span class="line">    mem = tracker.SummaryTracker()</span><br><span class="line">    for item in sorted(mem.create_summary(), reverse=True, key=itemgetter(2)):</span><br><span class="line">        print(&quot;%s&quot; % (item,))</span><br><span class="line"></span><br><span class="line">memory_summary2()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>psutil</title>
      <link href="/posts/fbb05bc2/"/>
      <url>/posts/fbb05bc2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://psutil.readthedocs.io/en/release-2.2.1" target="_blank" rel="noopener">psutil documentation</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"></span><br><span class="line"><span class="meta">@imfr_bp.route('/system/info', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">imfr_system_info</span><span class="params">()</span>:</span></span><br><span class="line">    ret = &#123;&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        ret[<span class="string">'cpu_core'</span>] = psutil.cpu_count(logical=<span class="literal">True</span>)</span><br><span class="line">        ret[<span class="string">'cpu_usage'</span>] = psutil.cpu_percent()</span><br><span class="line">        ret[<span class="string">'mem_total'</span>] = float(psutil.virtual_memory().total/(<span class="number">1024.0</span>*<span class="number">1024</span>))</span><br><span class="line">        ret[<span class="string">'mem_available'</span>] = float(psutil.virtual_memory().available/(<span class="number">1024.0</span>*<span class="number">1024</span>))</span><br><span class="line"></span><br><span class="line">        ret[<span class="string">'imfr'</span>] = &#123;&#125;</span><br><span class="line">        pids = psutil.pids()</span><br><span class="line">        <span class="keyword">for</span> pid <span class="keyword">in</span> pids:</span><br><span class="line">            process = psutil.Process(pid)</span><br><span class="line">            name = process.name()</span><br><span class="line">            <span class="keyword">if</span> name == <span class="string">'python3.6'</span>:</span><br><span class="line">                ret[<span class="string">'imfr'</span>][<span class="string">'threads'</span>] = len(process.threads())</span><br><span class="line">                ret[<span class="string">'imfr'</span>][<span class="string">'cpu_usage'</span>] = float(process.cpu_percent(interval=<span class="number">1</span>))</span><br><span class="line">                ret[<span class="string">'imfr'</span>][<span class="string">'mem_usage'</span>] = float(process.memory_info().rss/(<span class="number">1024.0</span>*<span class="number">1024.0</span>))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        logging.error(traceback.format_exc())</span><br><span class="line">        <span class="keyword">return</span> error_result(ErrorCode.ERROR_UNKNOWN)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> success_result(ret)</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:$ curl -X GET http://192.168.56.3:5074/api/system/info</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"code"</span>: 0,</span><br><span class="line"><span class="string">"data"</span>: &#123;</span><br><span class="line"><span class="string">"cpu_core"</span>: 4,</span><br><span class="line"><span class="string">"cpu_usage"</span>: 0.7,</span><br><span class="line"><span class="string">"imfr"</span>: &#123;</span><br><span class="line"><span class="string">"cpu_usage"</span>: 0.0,</span><br><span class="line"><span class="string">"mem_usage"</span>: 61.76953125,</span><br><span class="line"><span class="string">"threads"</span>: 5</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"mem_available"</span>: 1270.5234375,</span><br><span class="line"><span class="string">"mem_total"</span>: 1999.765625</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>diff_python2_python3</title>
      <link href="/posts/333c708/"/>
      <url>/posts/333c708/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:~$ python3.5</span><br><span class="line">Python 3.5.2 (default, Nov 23 2017, 16:37:01)</span><br><span class="line">[GCC 5.4.0 20160609] on linux</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; abc = &#123;<span class="string">"1"</span>:<span class="string">"a"</span>, <span class="string">"2"</span>:<span class="string">"b"</span>&#125;</span><br><span class="line">&gt;&gt;&gt; aaa = abc.keys()</span><br><span class="line">&gt;&gt;&gt; aaa</span><br><span class="line">dict_keys([<span class="string">'2'</span>, <span class="string">'1'</span>])</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">exit</span>()</span><br><span class="line"></span><br><span class="line">user@vm-docker:~$ python2.7</span><br><span class="line">Python 2.7.12 (default, Dec  4 2017, 14:50:18)</span><br><span class="line">[GCC 5.4.0 20160609] on linux2</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; abc = &#123;<span class="string">"1"</span>:<span class="string">"a"</span>, <span class="string">"2"</span>:<span class="string">"b"</span>&#125;</span><br><span class="line">&gt;&gt;&gt; aaa = abc.keys()</span><br><span class="line">&gt;&gt;&gt; aaa</span><br><span class="line">[<span class="string">'1'</span>, <span class="string">'2'</span>]</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">exit</span>()</span><br></pre></td></tr></table></figure><p>from urllib import urlencode<br>=&gt;from urllib.parse import urlencode</p><p>import urlparse<br>=&gt;from urllib.parse import urlparse</p><p>from urllib import urlencode<br>=&gt;from urllib.parse import urlencode</p><p>import BaseHTTPServer<br>=&gt;import http.server</p><p>不要使用tesseract，會有錯誤<br>pip install pytesseract and import pytesseract</p><p>try:<br>    import Queue<br>except ImportError:<br>    import queue as Queue</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>objgraph</title>
      <link href="/posts/16c8ee4f/"/>
      <url>/posts/16c8ee4f/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pypi.org/project/graphviz/" target="_blank" rel="noopener">https://pypi.org/project/graphviz/</a><br><a href="https://pypi.org/project/objgraph/" target="_blank" rel="noopener">https://pypi.org/project/objgraph/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import objgraph</span><br><span class="line"></span><br><span class="line">for typ, n in objgraph.most_common_types(limit=None):</span><br><span class="line">    print(&apos;&#123;typ:30&#125; &#123;n:&gt;10&#125;&apos;.format(typ=typ, n=n))</span><br><span class="line"></span><br><span class="line">for info in objgraph.growth(limit=None):</span><br><span class="line">    print(&apos;+++ %s&apos;,  (info,))</span><br><span class="line"></span><br><span class="line">print(&quot;leaking_objects: %s&quot; % len(objgraph.get_leaking_objects()))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install objgraph</span><br><span class="line">apt-get install xdot</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> objgraph</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(<span class="string">"********************* objgraph.show_most_common_types() ************************"</span>)</span><br><span class="line">    objgraph.show_most_common_types()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"********************* objgraph.show_growth(limit=10) ************************"</span>)</span><br><span class="line">    objgraph.show_growth(limit=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"********************* objgraph.show_growth(limit=10) ************************"</span>)</span><br><span class="line">    _list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">    objgraph.show_growth(limit=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">********************* objgraph.show_most_common_types() ************************</span></span><br><span class="line"><span class="string">function                   1969</span></span><br><span class="line"><span class="string">dict                       1153</span></span><br><span class="line"><span class="string">wrapper_descriptor         998</span></span><br><span class="line"><span class="string">tuple                      976</span></span><br><span class="line"><span class="string">weakref                    774</span></span><br><span class="line"><span class="string">method_descriptor          732</span></span><br><span class="line"><span class="string">builtin_function_or_method 693</span></span><br><span class="line"><span class="string">getset_descriptor          378</span></span><br><span class="line"><span class="string">set                        346</span></span><br><span class="line"><span class="string">list                       299</span></span><br><span class="line"><span class="string">********************* objgraph.show_growth(limit=10) ************************</span></span><br><span class="line"><span class="string">function                       1969     +1969</span></span><br><span class="line"><span class="string">dict                           1081     +1081</span></span><br><span class="line"><span class="string">wrapper_descriptor              998      +998</span></span><br><span class="line"><span class="string">tuple                           861      +861</span></span><br><span class="line"><span class="string">weakref                         774      +774</span></span><br><span class="line"><span class="string">method_descriptor               732      +732</span></span><br><span class="line"><span class="string">builtin_function_or_method      693      +693</span></span><br><span class="line"><span class="string">getset_descriptor               378      +378</span></span><br><span class="line"><span class="string">set                             346      +346</span></span><br><span class="line"><span class="string">list                            299      +299</span></span><br><span class="line"><span class="string">********************* objgraph.show_growth(limit=10) ************************</span></span><br><span class="line"><span class="string">list      300        +1</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_mysql_db_session</title>
      <link href="/posts/ffdb9082/"/>
      <url>/posts/ffdb9082/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class MySqlAlchemy(SQLAlchemy):</span><br><span class="line">    def apply_driver_hacks(self, app, info, options):</span><br><span class="line">        options.update(&#123;&quot;isolation_level&quot;: &quot;READ COMMITTED&quot;&#125;)</span><br><span class="line">        super(MySqlAlchemy, self).apply_driver_hacks(app, info, options)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_multiprocessing_pool</title>
      <link href="/posts/ccf12b21/"/>
      <url>/posts/ccf12b21/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">def task(pid):</span><br><span class="line">    # do something</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    pool = multiprocessing.Pool()</span><br><span class="line">    cpus = multiprocessing.cpu_count()</span><br><span class="line">    results = []</span><br><span class="line"></span><br><span class="line">    for i in range(0, cpus):</span><br><span class="line">        result = pool.apply_async(task, args=(i,))</span><br><span class="line">        results.append(result)</span><br><span class="line"></span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line"></span><br><span class="line">    for result in results:</span><br><span class="line">        print(result.get())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">def init_worker(X):</span><br><span class="line">    # Using a dictionary is not strictly necessary. You can also</span><br><span class="line">    # use global variables.</span><br><span class="line">    var_dict[&apos;X&apos;] = X</span><br><span class="line"></span><br><span class="line">def run_ws2(args):</span><br><span class="line">    ws_client = WSClient(args.host, args.rtsp_url, args.source)</span><br><span class="line">    var_dict[args.source] = args.rtsp_url</span><br><span class="line">    ws_client.run()</span><br><span class="line"></span><br><span class="line">var_dict = &#123;&#125;</span><br><span class="line"></span><br><span class="line">with Pool(processes=len(settings), initializer=init_worker, initargs=(X)) as pool:</span><br><span class="line">    pool.map(run_ws, [setting for setting in settings])</span><br><span class="line"></span><br><span class="line">pool.close()</span><br><span class="line">pool.join()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">from multiprocessing import Pool, Manager</span><br><span class="line">from multiprocessing.managers import BaseManager</span><br><span class="line"></span><br><span class="line">class SharedEventList(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.d = &#123;&#125;</span><br><span class="line">        self.d[&apos;hahaha&apos;] = list()</span><br><span class="line">        self.d[&apos;gogogo&apos;] = list()</span><br><span class="line"></span><br><span class="line">    def append(self, source, value):</span><br><span class="line">        self.d[source].append(value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    BaseManager.register(&apos;SharedEventList&apos;, SharedEventList)</span><br><span class="line">    manager = BaseManager()</span><br><span class="line">    manager.start()</span><br><span class="line">    event_list = manager.SharedEventList()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    pool = Pool(processes=4)</span><br><span class="line">    for i in range(4):</span><br><span class="line">        pool.apply_async(run_ws, args=(event_list,))</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_logging</title>
      <link href="/posts/a45c283d/"/>
      <url>/posts/a45c283d/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.blog.pythonlibrary.org/2014/02/11/python-how-to-create-rotating-logs/" target="_blank" rel="noopener">Python: How to Create Rotating Logs</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> logging.handlers <span class="keyword">import</span> RotatingFileHandler</span><br><span class="line"><span class="keyword">from</span> logging.handlers <span class="keyword">import</span> TimedRotatingFileHandler</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_logger</span><span class="params">(name)</span>:</span></span><br><span class="line">    formatter = logging.Formatter(<span class="string">'%(asctime)s - [%(filename)s:%(lineno)s] - %(levelname)s %(message)s '</span>)</span><br><span class="line">    logger = logging.getLogger(name)</span><br><span class="line">    logger.setLevel(logging.DEBUG)</span><br><span class="line"></span><br><span class="line">    console = logging.StreamHandler()</span><br><span class="line">    console.setFormatter(formatter)</span><br><span class="line">    logger.addHandler(console)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'/app/logs'</span>):</span><br><span class="line">        os.makedirs(<span class="string">'/app/logs'</span>)</span><br><span class="line"></span><br><span class="line">    file_handler = TimedRotatingFileHandler(<span class="string">'/app/logs/imfr.log'</span>, when=<span class="string">"d"</span>, interval=<span class="number">1</span>, backupCount=<span class="number">7</span>)</span><br><span class="line">    file_handler.setFormatter(formatter)</span><br><span class="line">    logger.addHandler(file_handler)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> logger</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># set logging to file</span><br><span class="line">log_formatter = logging.Formatter(format_string)</span><br><span class="line">file_handler = logging.FileHandler(log_file_name, mode=&apos;w&apos;) # mode is file write mode, &apos;a&apos; to append</span><br><span class="line">file_handler.setFormatter(log_formatter)</span><br><span class="line"> </span><br><span class="line"># create child logger and set it to be a file handler</span><br><span class="line">logger = logging.getLogger() # or pass a string to give it a name</span><br><span class="line">logger.addHandler(file_handler)</span><br><span class="line">logger.setLevel(log_level)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>interrupt_thread</title>
      <link href="/posts/b44a52cd/"/>
      <url>/posts/b44a52cd/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.itread01.com/content/1546799768.html" target="_blank" rel="noopener">Python強制關閉執行緒</a><br><a href="http://stackoverflow.com/questions/323972/is-there-any-way-to-kill-a-thread-in-python" target="_blank" rel="noopener">http://stackoverflow.com/questions/323972/is-there-any-way-to-kill-a-thread-in-python</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> inspect</span><br><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_async_raise</span><span class="params">(tid, exctype)</span>:</span></span><br><span class="line">    <span class="string">"""raises the exception, performs cleanup if needed"""</span></span><br><span class="line">    tid = ctypes.c_long(tid)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> inspect.isclass(exctype):</span><br><span class="line">        exctype = type(exctype)</span><br><span class="line">    res = ctypes.pythonapi.PyThreadState_SetAsyncExc(tid, ctypes.py_object(exctype))</span><br><span class="line">    <span class="keyword">if</span> res == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">"invalid thread id"</span>)</span><br><span class="line">    <span class="keyword">elif</span> res != <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># """if it returns a number greater than one, you're in trouble,</span></span><br><span class="line">        <span class="comment"># and you should call it again with exc=NULL to revert the effect"""</span></span><br><span class="line">        ctypes.pythonapi.PyThreadState_SetAsyncExc(tid, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">raise</span> SystemError(<span class="string">"PyThreadState_SetAsyncExc failed"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stop_thread</span><span class="params">(thread)</span>:</span></span><br><span class="line">    _async_raise(thread.ident, SystemExit)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"begin"</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        print(<span class="string">"end"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    t = TestThread()</span><br><span class="line">    t.start()</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    stop_thread(t)</span><br><span class="line">    print(<span class="string">"stoped"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">terminate_thread</span><span class="params">(thread)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> thread.isAlive():</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    exc = ctypes.py_object(SystemExit)</span><br><span class="line">    res = ctypes.pythonapi.PyThreadState_SetAsyncExc(ctypes.c_long(thread.ident), exc)</span><br><span class="line">    <span class="keyword">if</span> res == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">"nonexistent thread id"</span>)</span><br><span class="line">    <span class="keyword">elif</span> res &gt; <span class="number">1</span>:</span><br><span class="line">        ctypes.pythonapi.PyThreadState_SetAsyncExc(thread.ident, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">raise</span> SystemError(<span class="string">"PyThreadState_SetAsyncExc failed"</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>image_url_to_opencv_image</title>
      <link href="/posts/f22e58f/"/>
      <url>/posts/f22e58f/</url>
      
        <content type="html"><![CDATA[<p>METHOD #1: OpenCV, NumPy, and urllib</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import urllib.request import urlopen</span><br><span class="line">import cv2</span><br><span class="line"></span><br><span class="line">def url_to_image(url):</span><br><span class="line"># download the image, convert it to a NumPy array, and then read</span><br><span class="line"># it into OpenCV format</span><br><span class="line">resp = urlopen(url)</span><br><span class="line">image = np.asarray(bytearray(resp.read()), dtype=&quot;uint8&quot;)</span><br><span class="line">image = cv2.imdecode(image, cv2.IMREAD_COLOR)</span><br><span class="line"></span><br><span class="line"># return the image</span><br><span class="line">return image</span><br><span class="line"></span><br><span class="line"># initialize the list of image URLs to download</span><br><span class="line">urls = [</span><br><span class="line">&quot;https://www.pyimagesearch.com/wp-content/uploads/2015/01/opencv_logo.png&quot;,</span><br><span class="line">&quot;https://www.pyimagesearch.com/wp-content/uploads/2015/01/google_logo.png&quot;,</span><br><span class="line">&quot;https://www.pyimagesearch.com/wp-content/uploads/2014/12/adrian_face_detection_sidebar.png&quot;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"># loop over the image URLs</span><br><span class="line">for url in urls:</span><br><span class="line"># download the image URL and display it</span><br><span class="line">print &quot;downloading %s&quot; % (url)</span><br><span class="line">image = url_to_image(url)</span><br><span class="line">cv2.imshow(&quot;Image&quot;, image)</span><br><span class="line">cv2.waitKey(0)</span><br></pre></td></tr></table></figure><p>Method #2: scikit-image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from skimage import io</span><br><span class="line"> </span><br><span class="line"># loop over the image URLs</span><br><span class="line">for url in urls:</span><br><span class="line"># download the image using scikit-image</span><br><span class="line">print &quot;downloading %s&quot; % (url)</span><br><span class="line">image = io.imread(url)</span><br><span class="line">cv2.imshow(&quot;Incorrect&quot;, image)</span><br><span class="line">cv2.imshow(&quot;Correct&quot;, cv2.cvtColor(image, cv2.COLOR_BGR2RGB))</span><br><span class="line">cv2.waitKey(0)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>gevent_timeout</title>
      <link href="/posts/33c9c691/"/>
      <url>/posts/33c9c691/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import gevent</span><br><span class="line">import traceback</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    try:</span><br><span class="line">        with gevent.Timeout(1):</span><br><span class="line">            while True:</span><br><span class="line">                gevent.sleep(0.3)</span><br><span class="line">                print(&quot;do_something...&quot;)</span><br><span class="line">    except gevent.Timeout:</span><br><span class="line">        print(&quot;gevent.Timeout&quot;)</span><br><span class="line">    except:</span><br><span class="line">        print(traceback.format_exc())</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(venv) user@vm-docker:~$ python app.py</span><br><span class="line">do_something...</span><br><span class="line">do_something...</span><br><span class="line">do_something...</span><br><span class="line">gevent.Timeout</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>gevent_spawn</title>
      <link href="/posts/9d8d8ccf/"/>
      <url>/posts/9d8d8ccf/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spawns = []</span><br><span class="line">for i in range(GEVENT_NUM):</span><br><span class="line">    spawns.append(gevent.spawn(do_something, i))</span><br><span class="line">gevent.joinall(spawns)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gevent.joinall([</span><br><span class="line">    gevent.spawn(foo, 1),</span><br><span class="line">    gevent.spawn(goo, 2)</span><br><span class="line">])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_gevent</title>
      <link href="/posts/fbf3436c/"/>
      <url>/posts/fbf3436c/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def goo():</span><br><span class="line">    while True:</span><br><span class="line">        logger.info(&apos;gThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line">        gevent.sleep(1)</span><br><span class="line">def foo():</span><br><span class="line">    while True:</span><br><span class="line">        logger.info(&apos;fThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line">        gevent.sleep(1)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">    gevent.spawn(goo)</span><br><span class="line">    gevent.spawn(foo)</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">2019-07-18 09:41:48,231 - [main.py:174] - INFO mThread id main = 140059510753024</span><br><span class="line">2019-07-18 09:41:49,233 - [main.py:181] - INFO mThread id main = 140059510753024</span><br><span class="line">2019-07-18 09:41:50,235 - [main.py:181] - INFO mThread id main = 140059510753024</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">    gevent.spawn(goo)</span><br><span class="line">    gevent.spawn(foo).run()</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">2019-07-18 09:38:31,008 - [main.py:174] - INFO mThread id main = 140436039460608</span><br><span class="line">2019-07-18 09:38:31,009 - [main.py:170] - INFO fThread id main = 140436039460608</span><br><span class="line">2019-07-18 09:38:31,009 - [main.py:166] - INFO gThread id main = 140436039460608</span><br><span class="line">2019-07-18 09:38:32,011 - [main.py:170] - INFO fThread id main = 140436039460608</span><br><span class="line">2019-07-18 09:38:32,011 - [main.py:166] - INFO gThread id main = 140436039460608</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">    gevent.spawn(goo).run()</span><br><span class="line">    gevent.spawn(foo)</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">2019-07-18 09:39:38,280 - [main.py:174] - INFO mThread id main = 140345852270336</span><br><span class="line">2019-07-18 09:39:38,281 - [main.py:166] - INFO gThread id main = 140345852270336</span><br><span class="line">2019-07-18 09:39:39,296 - [main.py:166] - INFO gThread id main = 140345852270336</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">    gevent.joinall([</span><br><span class="line">        gevent.spawn(goo),</span><br><span class="line">        gevent.spawn(foo)</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">2019-07-18 09:43:04,408 - [main.py:174] - INFO mThread id main = 139723512018688</span><br><span class="line">2019-07-18 09:43:04,409 - [main.py:166] - INFO gThread id main = 139723512018688</span><br><span class="line">2019-07-18 09:43:04,409 - [main.py:170] - INFO fThread id main = 139723512018688</span><br><span class="line">2019-07-18 09:43:05,410 - [main.py:166] - INFO gThread id main = 139723512018688</span><br><span class="line">2019-07-18 09:43:05,411 - [main.py:170] - INFO fThread id main = 139723512018688</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">from gevent import monkey;monkey.patch_all()</span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">    gevent.spawn(goo)</span><br><span class="line">    gevent.spawn(foo)</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">2019-07-18 09:44:59,346 - [main.py:175] - INFO mThread id main = 140233629611272</span><br><span class="line">2019-07-18 09:44:59,346 - [main.py:166] - INFO gThread id main = 140233571852872</span><br><span class="line">2019-07-18 09:44:59,346 - [main.py:170] - INFO fThread id main = 140233571853128</span><br><span class="line">2019-07-18 09:45:00,347 - [main.py:182] - INFO mThread id main = 140233629611272</span><br><span class="line">2019-07-18 09:45:00,347 - [main.py:166] - INFO gThread id main = 140233571852872</span><br><span class="line">2019-07-18 09:45:00,347 - [main.py:170] - INFO fThread id main = 140233571853128</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">def goo():</span><br><span class="line">    time.sleep(10)</span><br><span class="line">    logger.info(&apos;gThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">def foo():</span><br><span class="line">    time.sleep(5)</span><br><span class="line">    logger.info(&apos;fThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">    gevent.joinall([</span><br><span class="line">        gevent.spawn(goo),</span><br><span class="line">        gevent.spawn(foo)</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">2019-07-18 10:06:19,773 - [main.py:174] - INFO mThread id main = 139665595115264</span><br><span class="line">2019-07-18 10:06:29,785 - [main.py:166] - INFO gThread id main = 139665595115264</span><br><span class="line">2019-07-18 10:06:34,791 - [main.py:170] - INFO fThread id main = 139665595115264</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">def goo():</span><br><span class="line">    gevent.sleep(10)</span><br><span class="line">    logger.info(&apos;gThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">def foo():</span><br><span class="line">    gevent.sleep(5)</span><br><span class="line">    logger.info(&apos;fThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">    gevent.joinall([</span><br><span class="line">        gevent.spawn(goo),</span><br><span class="line">        gevent.spawn(foo)</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">2019-07-18 10:07:05,429 - [main.py:174] - INFO mThread id main = 140126333138688</span><br><span class="line">2019-07-18 10:07:10,434 - [main.py:170] - INFO fThread id main = 140126333138688</span><br><span class="line">2019-07-18 10:07:15,436 - [main.py:166] - INFO gThread id main = 140126333138688</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">from gevent import monkey;monkey.patch_all()</span><br><span class="line">def goo():</span><br><span class="line">    time.sleep(10)</span><br><span class="line">    logger.info(&apos;gThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">def foo():</span><br><span class="line">    time.sleep(5)</span><br><span class="line">    logger.info(&apos;fThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">    gevent.joinall([</span><br><span class="line">        gevent.spawn(goo),</span><br><span class="line">        gevent.spawn(foo)</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">2019-07-18 10:09:27,635 - [main.py:174] - INFO mThread id main = 140478560122120</span><br><span class="line">2019-07-18 10:09:32,636 - [main.py:171] - INFO fThread id main = 140478502363976</span><br><span class="line">2019-07-18 10:09:37,641 - [main.py:167] - INFO gThread id main = 140478502363720</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">from gevent import monkey;monkey.patch_all()</span><br><span class="line">def goo():</span><br><span class="line">    gevent.sleep(10)</span><br><span class="line">    logger.info(&apos;gThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">def foo():</span><br><span class="line">    gevent.sleep(5)</span><br><span class="line">    logger.info(&apos;fThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    logger.info(&apos;mThread id main = %s&apos; % threading.current_thread().ident)</span><br><span class="line"></span><br><span class="line">    gevent.joinall([</span><br><span class="line">        gevent.spawn(goo),</span><br><span class="line">        gevent.spawn(foo)</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">2019-07-18 10:08:53,700 - [main.py:174] - INFO mThread id main = 140337642030344</span><br><span class="line">2019-07-18 10:08:58,704 - [main.py:171] - INFO fThread id main = 140337584272200</span><br><span class="line">2019-07-18 10:09:03,704 - [main.py:167] - INFO gThread id main = 140337584271944</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>flask_login</title>
      <link href="/posts/69b994cd/"/>
      <url>/posts/69b994cd/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#declaration</span></span><br><span class="line"><span class="keyword">from</span> flask_login <span class="keyword">import</span> LoginManager</span><br><span class="line">login_manager = LoginManager()</span><br><span class="line"></span><br><span class="line"><span class="comment">#init</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">login_manager.init_app(app)</span><br><span class="line"></span><br><span class="line"><span class="comment">#usage</span></span><br><span class="line"><span class="meta">@login_manager.user_loader</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_user</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="comment">#logger.info("load_user: id = " + id)</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> User.User.query.get(int(id))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        logger.error(traceback.format_exc())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@auth_bp.route('/auth/login', methods=['POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    params = request.form <span class="keyword">or</span> request.get_json()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        username = params[<span class="string">'username'</span>]</span><br><span class="line">        password = params[<span class="string">'password'</span>]</span><br><span class="line">        remember = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        logger.error(traceback.format_exc())</span><br><span class="line">        <span class="keyword">return</span> error_result(ErrorCode.ERROR_INVALID_PARAM)</span><br><span class="line"></span><br><span class="line">    user = User.query.filter_by(username=username).first()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user:</span><br><span class="line">        <span class="keyword">return</span> error_result(ErrorCode.ERROR_USER_NOT_EXIST)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> user.check_password(password):</span><br><span class="line">        login_user(user, remember=remember)</span><br><span class="line">        <span class="keyword">return</span> success_result()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> error_result(ErrorCode.ERROR_PASSWORD_ERROR)</span><br><span class="line"></span><br><span class="line"><span class="meta">@auth_bp.route('/auth/logout')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">    logout_user()</span><br><span class="line">    <span class="keyword">return</span> success_result()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>flask_doc</title>
      <link href="/posts/eacf1c94/"/>
      <url>/posts/eacf1c94/</url>
      
        <content type="html"><![CDATA[<p>pip install flask_docs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">from flask_docs import ApiDoc</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"># 本地加载</span><br><span class="line"># app.config[&apos;API_DOC_CDN&apos;] = False</span><br><span class="line"></span><br><span class="line"># 禁用文档页面</span><br><span class="line"># app.config[&apos;API_DOC_ENABLE&apos;] = False</span><br><span class="line"></span><br><span class="line"># 需要显示文档的 Api</span><br><span class="line">app.config[&apos;API_DOC_MEMBER&apos;] = [&apos;api&apos;, &apos;platform&apos;]</span><br><span class="line"></span><br><span class="line"># 需要排除的 RESTful Api 文档</span><br><span class="line">app.config[&apos;RESTFUL_API_DOC_EXCLUDE&apos;] = []</span><br><span class="line"></span><br><span class="line">ApiDoc(app)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>flask_background_task</title>
      <link href="/posts/4b411f65/"/>
      <url>/posts/4b411f65/</url>
      
        <content type="html"><![CDATA[<ol><li>celery</li><li>rq</li></ol><p><a href="https://myapollo.com.tw/2019/06/01/flask-celery/" target="_blank" rel="noopener">https://myapollo.com.tw/2019/06/01/flask-celery/</a></p><p><a href="http://www.pythondoc.com/flask-celery/first.html" target="_blank" rel="noopener">http://www.pythondoc.com/flask-celery/first.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>download_file</title>
      <link href="/posts/996f0d2c/"/>
      <url>/posts/996f0d2c/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> send_file</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/download')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadFile</span> <span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#For windows you need to use drive name [ex: F:/example.pdf]</span></span><br><span class="line">    path = <span class="string">"/examples.pdf"</span></span><br><span class="line">    <span class="keyword">return</span> send_file(path, as_attachment=<span class="literal">True</span>, cache_timeout=<span class="number">-1</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>draw_frame</title>
      <link href="/posts/5e5f185d/"/>
      <url>/posts/5e5f185d/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw_track</span><span class="params">(ipcam_index, ipcam)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            frame, counter = ipcam.getframe()</span><br><span class="line">            <span class="keyword">if</span> frame <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                time.sleep(CONST.SLEEP_TIME_FRAME_DUPLICATED)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            resize_frame = cv2.resize(frame, (DataManager.imageWidth, DataManager.imageHeight))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> tid <span class="keyword">in</span> FaceTrackData.track_data[ipcam_index].track_list.copy():</span><br><span class="line">                tracked_position = FaceTrackData.track_data[ipcam_index].track_list[tid].tracker.get_position()</span><br><span class="line">                t_x = int(tracked_position.left())</span><br><span class="line">                t_y = int(tracked_position.top())</span><br><span class="line">                t_w = int(tracked_position.width())</span><br><span class="line">                t_h = int(tracked_position.height())</span><br><span class="line">                cv2.rectangle(resize_frame, (t_x, t_y),</span><br><span class="line">                                            (t_x + t_w , t_y + t_h),</span><br><span class="line">                                            (FaceTrackData.track_data[ipcam_index].track_list[tid].R, FaceTrackData.track_data[ipcam_index].track_list[tid].G, FaceTrackData.track_data[ipcam_index].track_list[tid].B), <span class="number">5</span>)</span><br><span class="line">            cv2.imshow(ipcam.location, resize_frame)</span><br><span class="line">            <span class="keyword">if</span> cv2.waitKey(<span class="number">1</span>) == <span class="number">27</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            logging.error(<span class="string">'draw_track failed ---&gt; \n%s'</span> % traceback.format_exc())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>disable_cache_in_flask</title>
      <link href="/posts/3b817890/"/>
      <url>/posts/3b817890/</url>
      
        <content type="html"><![CDATA[<p><a href="https://arusahni.net/blog/2014/03/flask-nocache.html" target="_blank" rel="noopener">Disabling caching in Flask</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from nocache import nocache</span><br><span class="line"></span><br><span class="line">@app.route(&apos;/my_endpoint&apos;)</span><br><span class="line">@nocache</span><br><span class="line">def my_endpoint():</span><br><span class="line">    return render_template(...)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python_class</title>
      <link href="/posts/c61afcbc/"/>
      <url>/posts/c61afcbc/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">class MyClass(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.a = 10</span><br><span class="line">        self.b = &#123;&apos;key&apos;: &apos;value&apos;&#125;</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    ins = MyClass()</span><br><span class="line">    print(ins) #&lt;__main__.MyClass object at 0x7f4dd1c2a470&gt;</span><br></pre></td></tr></table></figure><p><strong>str</strong>()用來定義傳回物件描述字串，通常用來描述的字串是對使用者友善的說明文字，如果對物件使用str()，所呼叫的就是<strong>str</strong>()。<br>如果要定義對開發人員較有意義的描述，例如傳回產生實例的類別名稱之類的，則可以定義<strong>repr</strong>()，如果對物件使用repr()，則所呼叫的就是<strong>repr</strong>()。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class MyClass(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.a = 10</span><br><span class="line">        self.b = &#123;&apos;key&apos;: &apos;value&apos;&#125;</span><br><span class="line"></span><br><span class="line">    #自定義當print MyClass instance object時，要返回什麼內容</span><br><span class="line">    def __str__(self):</span><br><span class="line">        return &quot;a: &quot; + str(self.a) + &quot;, b: &quot; + str(self.b)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    ins = MyClass()</span><br><span class="line">    print(ins) #a: 10, b: &#123;&apos;key&apos;: &apos;value&apos;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>install_dlib_on_windows</title>
      <link href="/posts/dc2bade1/"/>
      <url>/posts/dc2bade1/</url>
      
        <content type="html"><![CDATA[<p>Install dlib for python on windows</p><p><a href="https://pypi.org/simple/dlib/" target="_blank" rel="noopener">Links for dlib</a></p><p>pip install <a href="https://files.pythonhosted.org/packages/0e/ce/f8a3cff33ac03a8219768f0694c5d703c8e037e6aba2e865f9bae22ed63c/dlib-19.8.1-cp36-cp36m-win_amd64.whl#sha256=794994fa2c54e7776659fddb148363a5556468a6d5d46be8dad311722d54bfcf" target="_blank" rel="noopener">https://files.pythonhosted.org/packages/0e/ce/f8a3cff33ac03a8219768f0694c5d703c8e037e6aba2e865f9bae22ed63c/dlib-19.8.1-cp36-cp36m-win_amd64.whl#sha256=794994fa2c54e7776659fddb148363a5556468a6d5d46be8dad311722d54bfcf</a></p><p>pip install dlib-19.8.1-cp36-cp36m-win_amd64.whl</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>url_for</title>
      <link href="/posts/ba4ed96a/"/>
      <url>/posts/ba4ed96a/</url>
      
        <content type="html"><![CDATA[<p>自定義url_for的位址與port</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_url_for</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> current_app.test_request_context():</span><br><span class="line">        <span class="comment"># With the test request context of the app</span></span><br><span class="line">        kwargs[<span class="string">'_external'</span>] = <span class="literal">True</span>    <span class="comment"># Add the _external=True keyword argument to whatever else was passed</span></span><br><span class="line">        url = url_for(*args, **kwargs)    <span class="comment"># Get the URL</span></span><br><span class="line">        url = url.replace(<span class="string">'://localhost/'</span>, <span class="string">'://localhost:15074/'</span>)</span><br><span class="line">        <span class="keyword">return</span> url</span><br><span class="line"></span><br><span class="line"><span class="meta">@render_bp.route('/system/setting/engine', methods = ['POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">system_setting_engine</span><span class="params">()</span>:</span></span><br><span class="line">        fields = [k <span class="keyword">for</span> k <span class="keyword">in</span> request.form]</span><br><span class="line"></span><br><span class="line">        values = [request.form[k] <span class="keyword">for</span> k <span class="keyword">in</span> request.form]</span><br><span class="line">        payload = dict(zip(fields, values))</span><br><span class="line"></span><br><span class="line">        <span class="comment">#print("payload",json.dumps(payload))</span></span><br><span class="line"></span><br><span class="line">        r = requests.put(HOST+<span class="string">'/config/engine'</span>, data = payload)</span><br><span class="line">        <span class="comment">#return redirect(url_for('render_bp.system_setting', _external=True))</span></span><br><span class="line">        <span class="keyword">return</span> redirect(my_url_for(<span class="string">'render_bp.system_setting'</span>, _external=<span class="literal">True</span>))</span><br></pre></td></tr></table></figure><ul><li>Reference<br><a href="https://github.com/pallets/flask/issues/824" target="_blank" rel="noopener">https://github.com/pallets/flask/issues/824</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>websocket_client</title>
      <link href="/posts/f2123b71/"/>
      <url>/posts/f2123b71/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gevent==1.4.0</span><br><span class="line">greenlet==0.4.15</span><br><span class="line">gunicorn==19.9.0</span><br><span class="line">six==1.12.0</span><br><span class="line">websocket==0.2.1</span><br><span class="line">websocket-client==0.55.0</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</span><br><span class="line"><span class="keyword">import</span> websocket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">port = <span class="number">5073</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_message</span><span class="params">(ws, message)</span>:</span></span><br><span class="line">    data = json.loads(message)</span><br><span class="line">    print(<span class="string">"receive message from server:"</span>)</span><br><span class="line">    print(data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_error</span><span class="params">(ws, error)</span>:</span></span><br><span class="line">    print(error)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_close</span><span class="params">(ws)</span>:</span></span><br><span class="line">    print(<span class="string">"### closed ###"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_open</span><span class="params">(ws)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">job</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line">            ws.send(<span class="string">"Hello"</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        ws.close()</span><br><span class="line">    thread = threading.Thread(target=job)</span><br><span class="line">    thread.start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    websocket.enableTrace(<span class="literal">True</span>)</span><br><span class="line">    <span class="comment">#ws = websocket.create_connection("ws://localhost:" + str(port) + "/")</span></span><br><span class="line">    url = &#123;<span class="string">'rtsp'</span>: <span class="string">'E6-IN-01.mp4'</span>&#125;</span><br><span class="line">    ws = websocket.WebSocketApp(<span class="string">"ws://0.0.0.0:"</span> + str(port) + <span class="string">"?"</span> + urlencode(url),</span><br><span class="line">                              on_message = on_message,</span><br><span class="line">                              on_error = on_error,</span><br><span class="line">                              on_close = on_close)</span><br><span class="line">    ws.on_open = on_open</span><br><span class="line">    ws.run_forever()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>supervisor</title>
      <link href="/posts/4d9192f8/"/>
      <url>/posts/4d9192f8/</url>
      
        <content type="html"><![CDATA[<ul><li>Reference<br><a href="https://blog.51cto.com/lixcto/1539136" target="_blank" rel="noopener">https://blog.51cto.com/lixcto/1539136</a><br><a href="http://supervisord.org/configuration.html" target="_blank" rel="noopener">http://supervisord.org/configuration.html</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl status</span><br><span class="line">supervisorctl stop service</span><br><span class="line">supervisorctl restart service</span><br><span class="line">supervisorctl start service</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@koala:~# supervisorctl status</span><br><span class="line">clean_upload_event               RUNNING   pid 1857, uptime 2 days, 20:51:06</span><br><span class="line">events_consumer                  RUNNING   pid 1859, uptime 2 days, 20:51:06</span><br><span class="line">koala_online                     RUNNING   pid 1861, uptime 2 days, 20:51:06</span><br><span class="line">koala_worker                     RUNNING   pid 1860, uptime 2 days, 20:51:06</span><br><span class="line">redis                            RUNNING   pid 1862, uptime 2 days, 20:51:06</span><br><span class="line">updater                          RUNNING   pid 1864, uptime 2 days, 20:51:06</span><br><span class="line">weather                          RUNNING   pid 1858, uptime 2 days, 20:51:06</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nginx</title>
      <link href="/posts/a477be03/"/>
      <url>/posts/a477be03/</url>
      
        <content type="html"><![CDATA[<p>$host 與 $http_host的區別在於當使用非80/443端口的時候，$http_host = $host:$port</p><ul><li><p>client_max_body_size<br>這個directive設定Nginx可以處理的最大request body大小。如果收到的請求大於指定的大小，那麼Nginx會回复HTTP 413錯誤（Request Entity too large）。如果web服務器提供大文件上傳的話，那麼設置好這個directive很重要。<br>Nginx默認為這個directive設定的值是1m</p></li><li><p>client_body_buffer_size<br>這個directive設定了request body的緩衝大小。如果body超過了緩衝的大小，那麼整個body或者部分body將被寫入一個臨時文件。如果Nginx被設置成使用文件緩衝而不使用內存緩衝，那麼這個dirctive就無效。 client_body_buffer_size在32位系統上默認是8k，在64位系統上默認是16k</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /logs &#123;</span><br><span class="line">    root /app/;</span><br><span class="line">    autoindex on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/posts/a477be03/image_01.png" alt></p><ul><li><p>autoindex_exact_size關閉，讓檔案大小用人類可讀的方式呈現</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location /logs &#123;</span><br><span class="line">    root /app/;</span><br><span class="line">    autoindex_exact_size off;</span><br><span class="line">    autoindex on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/posts/a477be03/image_02.png" alt><br><img src="/posts/a477be03/image_03.png" alt></p></li><li><p>Reference<br><a href="https://www.linuxdashen.com/nginx%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B%E9%85%8D%E7%BD%AE%E7%BC%93%E5%86%B2%E3%80%81%E8%B6%85%E6%97%B6%E3%80%81%E5%8E%8B%E7%BC%A9%E5%92%8C%E6%97%A5%E5%BF%97" target="_blank" rel="noopener">https://www.linuxdashen.com/nginx%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B%E9%85%8D%E7%BD%AE%E7%BC%93%E5%86%B2%E3%80%81%E8%B6%85%E6%97%B6%E3%80%81%E5%8E%8B%E7%BC%A9%E5%92%8C%E6%97%A5%E5%BF%97</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux logrotate</title>
      <link href="/posts/cd579093/"/>
      <url>/posts/cd579093/</url>
      
        <content type="html"><![CDATA[<p><a href="https://linux.die.net/man/8/logrotate" target="_blank" rel="noopener">https://linux.die.net/man/8/logrotate</a></p><p><a href="https://ihower.tw/blog/archives/3565" target="_blank" rel="noopener">https://ihower.tw/blog/archives/3565</a><br><a href="https://blog.toright.com/posts/4622/nginx-log-%E4%BB%A5%E6%97%A5%E6%9C%9F%E6%AD%B8%E6%AA%94.html" target="_blank" rel="noopener">https://blog.toright.com/posts/4622/nginx-log-%E4%BB%A5%E6%97%A5%E6%9C%9F%E6%AD%B8%E6%AA%94.html</a><br><a href="https://zshell.cc/2018/01/15/linux-varlog--logrotate%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%BF%90%E7%BB%B4/" target="_blank" rel="noopener">https://zshell.cc/2018/01/15/linux-varlog--logrotate%E9%85%8D%E7%BD%AE%E4%B8%8E%E8%BF%90%E7%BB%B4/</a><br><a href="http://light3moon.com/2016/02/19/%E9%85%8D%E7%BD%AE%20logrotate/" target="_blank" rel="noopener">http://light3moon.com/2016/02/19/%E9%85%8D%E7%BD%AE%20logrotate/</a><br><a href="https://codertw.com/%E4%BC%BA%E6%9C%8D%E5%99%A8/377513/" target="_blank" rel="noopener">https://codertw.com/%E4%BC%BA%E6%9C%8D%E5%99%A8/377513/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-f, --force</span><br><span class="line">-v, --verbose</span><br><span class="line"></span><br><span class="line">logrotate -fv /etc/logrotate.d/mysql-server</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/var/lib/logrotate/status</span><br><span class="line">/etc/logrotate.conf</span><br><span class="line">/etc/logrotate.d/mysql-server</span><br></pre></td></tr></table></figure><ol><li>/etc/logrotate.d裡的設定優先權比logrotate.conf高</li><li>logrotate.conf單純是一個script，需要被執行，無法主動執行</li><li>因為/etc/cron.daily/logrotate設定，因此logrotate.conf被執行的最短周期是一天</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pthread example</title>
      <link href="/posts/df62d35a/"/>
      <url>/posts/df62d35a/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">pthread_mutex_t</span> count_lock;</span><br><span class="line"><span class="keyword">pthread_cond_t</span> count_nonzero;</span><br><span class="line"><span class="keyword">unsigned</span> count;</span><br><span class="line"></span><br><span class="line">decrement_count()</span><br><span class="line">&#123;</span><br><span class="line">    pthread_mutex_lock(&amp;count_lock);</span><br><span class="line">    <span class="keyword">while</span> (count == <span class="number">0</span>)</span><br><span class="line">        pthread_cond_wait(&amp;count_nonzero, &amp;count_lock);</span><br><span class="line">    count = count - <span class="number">1</span>;</span><br><span class="line">    pthread_mutex_unlock(&amp;count_lock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">increment_count()</span><br><span class="line">&#123;</span><br><span class="line">    pthread_mutex_lock(&amp;count_lock);</span><br><span class="line">    <span class="keyword">if</span> (count == <span class="number">0</span>)</span><br><span class="line">        pthread_cond_signal(&amp;count_nonzero);</span><br><span class="line">    count = count + <span class="number">1</span>;</span><br><span class="line">    pthread_mutex_unlock(&amp;count_lock);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python socket server</title>
      <link href="/posts/a7a9482c/"/>
      <url>/posts/a7a9482c/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">serv = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">serv.bind((<span class="string">'0.0.0.0'</span>, <span class="number">9527</span>))</span><br><span class="line">serv.listen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    conn, addr = serv.accept()</span><br><span class="line">    print(<span class="string">'Client from'</span>, addr)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        data = conn.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data: <span class="keyword">break</span></span><br><span class="line">        conn.send(data)</span><br><span class="line"></span><br><span class="line">    conn.close()</span><br><span class="line">    print(<span class="string">'Client disconnected'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>split pcap</title>
      <link href="/posts/b080c008/"/>
      <url>/posts/b080c008/</url>
      
        <content type="html"><![CDATA[<ol><li><p>使用 wireshark 提供的程式切割<br>editcap.exe -c frame_size src.pcap new.pcap</p></li><li><p>使用 tcpdump 切割<br>tcpdump -r src.pcap -w new.pcap -C file_size(MB)</p></li><li><p>剪下<br>editcap.exe -r src.pcap dst.pcap 1-8(只留下 frame 1-8)</p></li><li><p>合併<br>mergecap.exe -w dst.pcap src1.pcap src2.pcap</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vf mirror</title>
      <link href="/posts/4ccc247a/"/>
      <url>/posts/4ccc247a/</url>
      
        <content type="html"><![CDATA[<h4 id="使用-intel-網卡，在-dpdk-mode-下設定-vlan-mirror，以便於側錄封包"><a href="#使用-intel-網卡，在-dpdk-mode-下設定-vlan-mirror，以便於側錄封包" class="headerlink" title="使用 intel 網卡，在 dpdk mode 下設定 vlan mirror，以便於側錄封包"></a>使用 intel 網卡，在 dpdk mode 下設定 vlan mirror，以便於側錄封包</h4><p>假設網卡 interface 為 enp97s0f0</p><ol><li>先建立 3 個 vf for enp97s0f0<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> 3 &gt; /sys/class/net/enp97s0f0/device/sriov_numvfs</span></span><br></pre></td></tr></table></figure></li><li>bind dpdk driver<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> /opt/dpdk-19.11/usertools/dpdk-devbind.py -b igb_uio 0000:61:02.0</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> /opt/dpdk-19.11/usertools/dpdk-devbind.py -b igb_uio 0000:61:02.1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> /opt/dpdk-19.11/usertools/dpdk-devbind.py --status-dev net</span></span><br><span class="line"></span><br><span class="line">Network devices using DPDK-compatible driver</span><br><span class="line">============================================</span><br><span class="line">0000:61:02.0 'Ethernet Virtual Function 700 Series 37cd' drv=igb_uio unused=iavf</span><br><span class="line">0000:61:02.1 'Ethernet Virtual Function 700 Series 37cd' drv=igb_uio unused=iavf</span><br></pre></td></tr></table></figure></li><li>設定 vlan/mac for vf 0, 1 used for CU-plane (vf 0 for uplane and vf 1 for cplane)<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ip link <span class="built_in">set</span> enp97s0f0 vf 0 vlan 2</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ip link <span class="built_in">set</span> enp97s0f0 vf 1 vlan 1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ip link <span class="built_in">set</span> enp97s0f0 vf 0 mac 00:11:22:33:44:66</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ip link <span class="built_in">set</span> enp97s0f0 vf 1 mac 00:11:22:33:44:66</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ip link show enp97s0f0</span></span><br><span class="line">1: enp97s0f0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000</span><br><span class="line">    link/ether 28:c1:3c:95:6f:9c brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    vf 0 MAC 00:11:22:33:44:66, vlan 2, spoof checking on, link-state auto, trust off</span><br><span class="line">    vf 1 MAC 00:11:22:33:44:66, vlan 1, spoof checking on, link-state auto, trust off</span><br><span class="line">    vf 2 MAC 00:00:00:00:00:00, spoof checking on, link-state auto, trust off</span><br></pre></td></tr></table></figure></li><li>建立 vlan_mirror<ul><li>add 1, 2 是 vf 0/1 設定的 vlan id</li><li>sriov/2 是指 vf 2</li><li>enp97s2f2 是 vf 2 的 interface (可以用 ifconfig 查詢)</li><li>vf 2 的 mtu size 必須要設大，否則無法側錄到 uplane<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ echo add 1,2 &gt; /sys/class/net/enp97s0f0/device/sriov/2/vlan_mirror</span><br><span class="line">$ ifconfig enp97s2f2 mtu 9000</span><br></pre></td></tr></table></figure></li></ul></li><li>錄製封包<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tcpdump -i enp97s2f2 -w ecpri.pcap</span><br></pre></td></tr></table></figure></li></ol><ul><li>Reference<br><a href="https://specs.openstack.org/openstack/neutron-specs/specs/stein/port-mirroring-sriov-vfs.html" target="_blank" rel="noopener">https://specs.openstack.org/openstack/neutron-specs/specs/stein/port-mirroring-sriov-vfs.html</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ssh Tunnel</title>
      <link href="/posts/85f67f4e/"/>
      <url>/posts/85f67f4e/</url>
      
        <content type="html"><![CDATA[<ul><li>Command<br><code>ssh -N -L 9999:192.168.56.102:8080 user@192.168.56.11</code><br><code>ssh -N -L 0.0.0.0:9999:192.168.56.102:8080 user@192.168.56.11</code><br><img src="/posts/85f67f4e/image01.png" alt></li></ul><ol><li>proxy server: <a href="mailto:user@192.168.56.11" target="_blank" rel="noopener">user@192.168.56.11</a></li><li>remote server application: 192.168.56.102:8080</li><li>on local PC: You can access 192.168.56.102:8080 via <a href="mailto:user@192.168.56.11" target="_blank" rel="noopener">user@192.168.56.11</a> on localhost <a href="http://localhost:9999" target="_blank" rel="noopener">http://localhost:9999</a></li></ol><ul><li>reference<br><a href="https://blog.rex-tsou.com/2017/10/%E5%88%A9%E7%94%A8-ssh-tunnel-%E5%81%9A%E8%B7%B3%E6%9D%BFaka.-%E7%BF%BB%E7%89%86/" target="_blank" rel="noopener">https://blog.rex-tsou.com/2017/10/%E5%88%A9%E7%94%A8-ssh-tunnel-%E5%81%9A%E8%B7%B3%E6%9D%BFaka.-%E7%BF%BB%E7%89%86/</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Fluent Terminal</title>
      <link href="/posts/10ad64df/"/>
      <url>/posts/10ad64df/</url>
      
        <content type="html"><![CDATA[<ul><li>Using Python on Fluent Terminal - CMD</li></ul><ol><li>手動設定 Path for Python<br><img src="/posts/10ad64df/image01.png" alt></li><li>使用 virtualenv 的方式<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\User\python&gt; venv\Scripts\activate.bat</span><br><span class="line"></span><br><span class="line">(venv) C:\Users\User\python&gt;</span><br></pre></td></tr></table></figure></li></ol><ul><li>Using Python on Fluent Terminal - Power Shell</li></ul><ol><li>手動設定 Path for Python</li><li>使用 virtualenv 的方式<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\User\python&gt; venv\Scripts\activate.ps1</span><br><span class="line">(venv) PS C:\Users\User\python&gt;</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>整合 cmder<br><img src="/posts/10ad64df/image03.png" alt></p></li><li><p>Trouble Shooting</p></li></ul><ol><li>Power Shell 預設不能執行某些命令<br><img src="/posts/10ad64df/image02.png" alt><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\User\python&gt; Get-ExecutionPolicy</span><br><span class="line">Restricted</span><br></pre></td></tr></table></figure>要將值改成 RemoteSigned<br>以系統管理員身分執行 Power Shell<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Windows\system32&gt; Set-ExecutionPolicy RemoteSigned</span><br><span class="line"></span><br><span class="line">執行原則變更</span><br><span class="line">執行原則有助於防範您不信任的指令碼。如果變更執行原則，可能會使您接觸到 about_Execution_Policies 說明主題 (網址為</span><br><span class="line">https:/go.microsoft.com/fwlink/?LinkID=135170) 中所述的安全性風險。您要變更執行原則嗎?</span><br><span class="line">[Y] 是(Y)  [A] 全部皆是(A)  [N] 否(N)  [L] 全部皆否(L)  [S] 暫停(S)  [?] 說明 (預設值為 &quot;N&quot;): y</span><br><span class="line">PS C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> FluentTerminal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FluentTerminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python note</title>
      <link href="/posts/2a024bae/"/>
      <url>/posts/2a024bae/</url>
      
        <content type="html"><![CDATA[<p>module: 可以想成一個檔案就是一個module<br>package: 可以想成一個目錄就是一個package，但必須要該folder下建立<strong>init</strong>.py，可以為空  </p><ul><li><p>dec to hex string，若少於 2 位數，補 0<br>hex =’{:02x}’.format(A)</p></li><li><p>dec to bin string，若少於 16 位數，補 0<br>bin =’{:016b}’.format(B)</p></li><li><p>bin string to 2’sc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">two2dec</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> s[<span class="number">0</span>] == <span class="string">'1'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span> * (int(<span class="string">''</span>.join(<span class="string">'1'</span> <span class="keyword">if</span> x == <span class="string">'0'</span> <span class="keyword">else</span> <span class="string">'0'</span> <span class="keyword">for</span> x <span class="keyword">in</span> s), <span class="number">2</span>) + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> int(s, <span class="number">2</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matlab note</title>
      <link href="/posts/db30bcc7/"/>
      <url>/posts/db30bcc7/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.mathworks.com/help/matlab/matlab_prog/matlab-operators-and-special-characters.html" target="_blank" rel="noopener">https://www.mathworks.com/help/matlab/matlab_prog/matlab-operators-and-special-characters.html</a><br><code>.&#39;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A=[1 2]</span><br><span class="line">A=A.&apos;</span><br><span class="line">[output]</span><br><span class="line">A =</span><br><span class="line">   1   2</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line">   1</span><br><span class="line">   2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matplotlib note</title>
      <link href="/posts/9ebec7b8/"/>
      <url>/posts/9ebec7b8/</url>
      
        <content type="html"><![CDATA[<ul><li><p>設定 figure resolution<br><code>plt.figure(figsize=(10, 10), dpi=160)</code><br>=&gt; resolution is 1600x1600</p></li><li><p>隱藏軸標籤和座標軸<br>ax = plt.gca()<br>ax.axes.xaxis.set_visible(False)<br>ax.axes.yaxis.set_visible(False)</p></li><li><p>隱藏座標軸<br>ax = plt.gca()<br>ax.axes.xaxis.set_ticks([])<br>ax.axes.yaxis.set_ticks([])</p></li><li><p>隱藏軸標籤<br>ax = plt.gca()<br>ax.axes.xaxis.set_ticklabels([])<br>ax.axes.yaxis.set_ticklabels([])</p></li><li><p>將坐標軸的刻度用科學計數標記</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ax = plt.gca()</span><br><span class="line">ax.ticklabel_format(style=&apos;sci&apos;, scilimits=(0, 0), axis=&apos;y&apos;)</span><br><span class="line">ax.yaxis.major.formatter._useMathText = True</span><br></pre></td></tr></table></figure><p>scilimits=(-1,2) 表示對 10^-1 ~ 10^2 範圍之外的數值進行科學計數轉換，範圍內的不換</p></li><li><p>waveform</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">fs=<span class="number">4000</span></span><br><span class="line">Ts=<span class="number">1</span>/fs</span><br><span class="line">f0=<span class="number">10</span></span><br><span class="line">A=math.sqrt(<span class="number">2</span>)</span><br><span class="line">N=<span class="number">1024</span></span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">0</span>,N<span class="number">-1</span>,<span class="number">10</span>)   <span class="comment"># start,stop,step</span></span><br><span class="line">y = A*np.sin(<span class="number">2</span>*np.pi*f0*Ts*x)</span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.show() <span class="comment"># show the image</span></span><br></pre></td></tr></table></figure><p><img src="/posts/9ebec7b8/image_01.png" alt></p></li><li><p>Trouble Shooting</p></li></ul><ol><li><p><code>OverflowError: Exceeded cell block limit (set &#39;agg.path.chunksize&#39; rcparam)</code><br>當要處理的數據太多，必須手動設定 chunksize<br><code>plt.rcParams[&#39;agg.path.chunksize&#39;] = 100000</code></p></li><li><p>在大量使用 plt.plot and plt.savefig 時，會遇到以下 error<br><code>Fail to allocate bitmap</code><br>即使有執行 plt.close() 也無效，且固定產生 369 張圖後，會 failed</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib</span><br><span class="line">matplotlib.use(&quot;Agg&quot;)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Access ssh without input password</title>
      <link href="/posts/e729699d/"/>
      <url>/posts/e729699d/</url>
      
        <content type="html"><![CDATA[<p>在 windown 下使用 ssh/scp 時，不需要輸入密碼</p><ol><li><p>generate key in windows</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\User&gt;ssh-keygen -t rsa</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (C:\Users\User/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in C:\Users\User/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in C:\Users\User/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:u7s0Cq8ljGfhuNonSa7CwLAxvyk9ebR8FFIitHGbeHk user@DESKTOP-A88C5KQ</span><br><span class="line">The key&apos;s randomart image is:</span><br><span class="line">+---[RSA 3072]----+</span><br><span class="line">| .o .            |</span><br><span class="line">|  .=.+.          |</span><br><span class="line">|  o.=oE          |</span><br><span class="line">|+  ....          |</span><br><span class="line">|o=  .. .S        |</span><br><span class="line">|o.o=...  .       |</span><br><span class="line">|o+oBBo. +        |</span><br><span class="line">|ooX+==.o o       |</span><br><span class="line">|++o=.oo +o       |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure></li><li><p>將 id_rsa.pub 內容複製進 linux ~/.ssh/authorized_keys</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\User&gt; cat .ssh/id_rsa.pub</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDFTdfNrQFk+pnyFUpYlI9DjxcqgYhwaK1kPwKULW6qthMZ1331a/cczktzYGiRVDRa6AEdAAMdINi3Vw2tmfxAYOYGQA0GvRExTDQo+txWJlC6ZTQqrXgnDDldI9yDtlkOGFcUfvW6G/VVS0qdM1W5yN3hGHtGjccpsn/zal4dWFRuYv/b4iSLbcxtJG5tV5yEwqCA0da2QdT8NabKtcEi0D7N7V+ZWemlEnYZtGKHjAb25Lbk26wYFDHakCL1k75CloGPXoSp0M9smXLQ0d8MBbCJssQdMhQS4EHaeoihpHYB6dX66+wDPXvVv4gZOPpexOo64es9Uuz7RD5YxYIdlDFsH4LgJGUm7pC4BI1T618xlicc83VF7f2ElR5hSUROMWYld+MDlqAn4nftQyInzCXQsyAyRdq1mzbRKa7UvGiCmEdKUl+pj25+RjScTb7IWTqXXUCATcPmtg11B7AznnS5RkhvigXHGUH03X1HBHUtnI78frI+1/R6tjuesps= user@DESKTOP-A88C5KQ</span><br></pre></td></tr></table></figure></li></ol><ul><li>.ssh 資料夾的權限必須是 0700</li><li>authorized_keys 檔案的權限必須是 0600</li><li>兩台機器 A、B 要溝通，在 A 上建立 public key and private key，然後將 public key 給 B，如此便能進行加密溝通</li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>network</title>
      <link href="/posts/608487bc/"/>
      <url>/posts/608487bc/</url>
      
        <content type="html"><![CDATA[<p>Layer 1，實體層（Physical Layer）<br>通常可以透過檢查網路孔上的燈號，判斷是否正常</p><p>Layer 2，資料連結層（Data Link Layer）<br>在區網內部主要是透過Media Access Control(MAC) 達到資料轉送跟交換<br>電腦或任何網路設備開機時，只要第一次發出封包，就會被對連交換器記下所屬的 MAC，內網內其他的設備要跟其溝通時，最終會先找到 MAC 才開始進行溝通、傳送</p><p>ping 過 172.18.73.132 之後，就可以看到本機端會發現 172.18.73.132 的 MAC，並記錄下來<br>$ ping 172.18.73.132<br>$ arp -a</p><p>介面: 172.18.73.168 — 0x14<br>  網際網路網址          實體位址               類型<br>  172.18.73.132         28-c1-3c-8f-c8-51     動態<br>  172.18.73.254         9c-4e-20-bf-a1-ca     動態<br>  172.18.73.255         ff-ff-ff-ff-ff-ff     靜態</p><p>Layer 3，網路層（Network Layer）<br>Layer 4，傳輸層（Transport Layer）<br>Layer 5，會議層（Session Layer）<br>Layer 6，展示層（Presentation Layer）<br>Layer 7，應用層（Application Layer）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Prompt</title>
      <link href="/posts/6543690e/"/>
      <url>/posts/6543690e/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cyberciti.biz/tips/howto-linux-unix-bash-shell-setup-prompt.html" target="_blank" rel="noopener">https://www.cyberciti.biz/tips/howto-linux-unix-bash-shell-setup-prompt.html</a></p><ul><li>預設 Prompt<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# echo $PS1</span><br><span class="line">[\u@\h \W]\$</span><br></pre></td></tr></table></figure></li><li>format<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">\d：當前日期，以「週 月 日」的格式顯示</span><br><span class="line">\D&#123;format&#125;：當前日期，可指定格式，例如 「\D&#123;%Y-%m-%d&#125;」</span><br><span class="line">\t：當前時間，以 24 小時時制顯示</span><br><span class="line">\u：使用者名稱</span><br><span class="line">\W：當前資料夾名稱</span><br><span class="line">\w：當前路徑</span><br><span class="line">\h：主機名稱 (Host Name)&#125;</span><br></pre></td></tr></table></figure></li><li>用指令取得動態資訊<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ export PS1=&quot;\$(date +%d.%m.%Y) [\u@\h \W]# &quot;</span><br></pre></td></tr></table></figure></li><li>顏色標記<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ export PS1=&quot;[\e[0;31m\u\e[m@\h \W]# &quot;</span><br><span class="line">$ export PS1=&quot;[\[\e[0;31m\]\u\[\e[m\]@\h \W]# &quot;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sed</title>
      <link href="/posts/fba335b8/"/>
      <url>/posts/fba335b8/</url>
      
        <content type="html"><![CDATA[<ul><li>Reference<br><a href="https://linuxhint.com/50_sed_command_examples/" target="_blank" rel="noopener">https://linuxhint.com/50_sed_command_examples/</a><br><a href="http://shyuanliang.blogspot.com/2013/05/sed.html" target="_blank" rel="noopener">http://shyuanliang.blogspot.com/2013/05/sed.html</a></li></ul><ol><li>[:alnum:] 代表英文大小寫字元及數字，亦即 0-9, A-Z, a-z</li><li>[:alpha:] 代表任何英文大小寫字元，亦即 A-Z, a-z</li><li>[:blank:] 代表空白鍵與 [Tab] 按鍵兩者</li><li>[:cntrl:] 代表鍵盤上面的控制按鍵，亦即包括 CR, LF, Tab, Del.. 等等</li><li>[:digit:] 代表數字而已，亦即 0-9</li><li>[:graph:] 除了空白字元 (空白鍵與 [Tab] 按鍵) 外的其他所有按鍵</li><li>[:lower:] 代表小寫字元，亦即 a-z</li><li>[:print:] 代表任何可以被列印出來的字元</li><li>[:punct:] 代表標點符號 (punctuation symbol)，亦即：” ‘ ? ! ; : # $…</li><li>[:upper:] 代表大寫字元，亦即 A-Z</li><li>[:space:] 任何會產生空白的字元，包括空白鍵, [Tab], CR 等等</li><li>[:xdigit:] 代表 16 進位的數字類型，因此包括： 0-9, A-F, a-f 的數字與字元</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">replace the first match</span><br><span class="line"># echo &quot;Bash Bash Scripting Language&quot; | sed &apos;s/Bash/Perl/&apos;</span><br><span class="line">Perl Bash Scripting Language</span><br><span class="line"></span><br><span class="line">g: replace all occurrences</span><br><span class="line">g2: replace the second match    </span><br><span class="line"># echo &quot;Bash Bash Scripting Language&quot; | sed &apos;s/Bash/Perl/g&apos;</span><br><span class="line">Perl Perl Scripting Language</span><br><span class="line"></span><br><span class="line">在 abc 後加上 123</span><br><span class="line"># echo &quot;abcefg&quot; | sed &apos;s/abc/&amp;123/g&apos;</span><br><span class="line">abc123efg</span><br><span class="line"></span><br><span class="line">在 abc 前加上 123</span><br><span class="line"># echo &quot;abcefg&quot; | sed &apos;s/abc/123&amp;/g&apos;</span><br><span class="line">123abcefg</span><br><span class="line"></span><br><span class="line">\(.*\) =&gt; 取得字串</span><br><span class="line">\1 =&gt; 印出第一個取得的字串</span><br><span class="line"># echo &quot;Bash language&quot; | sed &apos;s/Bash\(.*\)/Shell script\1/&apos;</span><br><span class="line">Shell script language</span><br><span class="line"></span><br><span class="line">把 Bash 替換成 Learn Bash programming</span><br><span class="line"># echo &quot;Bash language&quot; | sed &apos;s/\(Bash\)/Learn \1 programming/&apos;</span><br><span class="line">Learn Bash programming language</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">//file</span><br><span class="line">CSE - Count</span><br><span class="line">EEE - Count</span><br><span class="line">Civil - Count</span><br><span class="line"></span><br><span class="line"># sed  -e &apos;/CSE/ s/Count/100/; /EEE/ s/Count/70/;&apos; file</span><br><span class="line">CSE - 100</span><br><span class="line">EEE - 70</span><br><span class="line">Civil - Count</span><br><span class="line"># sed -i -e &apos;/CSE/! s/Count/80/;&apos; file</span><br><span class="line">CSE - Count</span><br><span class="line">EEE - 80</span><br><span class="line">Civil - 80</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">刪除空白行</span><br><span class="line"># sed &apos;/^$/d&apos; file</span><br><span class="line"></span><br><span class="line"># echo hgdfjg678gfdg kjg45nn | sed &apos;s/[^0-9]//g&apos;</span><br><span class="line">67845</span><br><span class="line"></span><br><span class="line"># echo &quot;hgdfjg678gfdg kjg45nn&quot; | sed &apos;s/[^[:digit:]]//g&apos;</span><br><span class="line">67845</span><br><span class="line"></span><br><span class="line"># echo hgdfjg678gfdg kjg45nn | sed &apos;s/[0-9]//g&apos;</span><br><span class="line">hgdfjggfdg kjgnn</span><br><span class="line"></span><br><span class="line"># echo &quot;hgdfjg678gfdg kjg45nn&quot; | sed &apos;s/[[:digit:]]//g&apos;</span><br><span class="line">hgdfjggfdg kjgnn</span><br><span class="line"></span><br><span class="line">在搜尋到 Hello 的那一行後加上 !!</span><br><span class="line"># echo &quot;Hello World&quot; | sed &apos;/Hello/ s/$/ !!/&apos;</span><br><span class="line">Hello World !!</span><br><span class="line"></span><br><span class="line">在搜尋到 Hello 的那一行前加上 !!</span><br><span class="line"># echo &quot;Hello World&quot; | sed &apos;/Hello/ s/^/ !!/&apos;</span><br><span class="line"> !!Hello World</span><br><span class="line"></span><br><span class="line">在搜尋到 Hello 的那一行除外，加上 !!</span><br><span class="line">sed &apos;/Hello/! S/$/ !!/&apos;</span><br><span class="line"></span><br><span class="line">刪除所有不包含 Hello 的 line</span><br><span class="line"># sed -i &apos;/Hello/!d&apos; test</span><br><span class="line"></span><br><span class="line"># echo &quot;Kaniz Fatema,30th,batch&quot; | sed &quot;s/,/\n/g&quot;</span><br><span class="line">Kaniz Fatema</span><br><span class="line">30th</span><br><span class="line">batch</span><br><span class="line"></span><br><span class="line">i =&gt; 不分大小寫</span><br><span class="line"># echo &quot;I like bash programming&quot; | sed &apos;s/Bash/PHP/i&apos;</span><br><span class="line">I like PHP programming</span><br><span class="line"></span><br><span class="line"># echo &quot;Hello World&quot; | sed &apos;s/\(hello\)/\U\1/Ig&apos;</span><br><span class="line">HELLO World</span><br><span class="line"></span><br><span class="line"># echo &quot;Hello World&quot; | sed &apos;s/\(hello\)/\L\1/Ig&apos;</span><br><span class="line">hello World</span><br><span class="line"></span><br><span class="line"># echo &quot;Hello World&quot; | sed  &apos;s/\(.*\)/\U\1/&apos;</span><br><span class="line">HELLO WORLD</span><br><span class="line"></span><br><span class="line"># echo &quot;Hello World&quot; | sed  &apos;s/\(.*\)/\L\1/&apos;</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><ul><li>刪除 file 中，所有 # 開頭的行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;/^#/d&quot; file</span><br></pre></td></tr></table></figure></li></ul><h1 id="列出第-n-行的結果"><a href="#列出第-n-行的結果" class="headerlink" title="列出第 n 行的結果"></a>列出第 n 行的結果</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls -l | sed -n &apos;np&apos;</span><br><span class="line">ls -l | sed -n &apos;2p&apos;</span><br><span class="line">ls -l | sed -n &apos;3p&apos;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> shell script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux_commands</title>
      <link href="/posts/78a715c/"/>
      <url>/posts/78a715c/</url>
      
        <content type="html"><![CDATA[<ol start="0"><li><p>ubuntu版本<br>lsb_release -a</p></li><li><p>pwd // 看目前所在目錄的路徑</p></li><li><p>mount<br>  mount -t smbfs -o username=”nick.cheng”,password=”123456” //172.16.66.24/public /mnt/sda1<br>  umount /mnt/nick</p><p>  mount -t smbfs -o -I 172.16.66.24 -N ‘//msbn7835/public’ /mnt/nick<br>  mount -t smbfs -o //172.16.66.24/public /mnt/nick<br>  mount -t ntfs //172.16.66.24/public /mnt/nick<br>  mount -t ntfs //msnb7835/public /mnt/nick</p><p>  mount -t nfs -o nolock 172.16.40.25:/home/ssg /mnt/ssg<br>  mount -t nfs -o nolock swhcsvr16:/home/nick.cheng /mnt/sda1<br>  mount -t nfs -o nolock 172.16.40.25:/public /mnt/sda1<br>  mount -t nfs -o nolock 172.16.40.25:/home/nick.cheng /mnt/sda1</p><p>  mount -t nfs username=”nick.cheng”,password=”123456” 172.16.40.25:/public /mnt/sda1<br>  mount -t nfs -o nolost 172.16.40.25:/public /mnt/sda1</p><p>  *在ubuntu下mount server<br>  mount -t cifs //192.168.210.173/sis4990 /home/cyc/sisvnc02/ -o user=sis4990 -o password=123456</p><p>  利用 mount 指令解決 Read-only file system 問題<br>  mount -o remount,rw /</p><p>  格式：mount  -t  檔案系統類型  -o 選項  裝置  掛入點</p><p>  mount -t nfs -o nolock 172.16.66.29:/home/nick.cheng/ /home<br>  mount -t nfs -o nolock 172.16.66.29:/home/nick.cheng/SC1.2_testcase/ /usb/sda1<br>  mount -t vfat -o ro /dev/block/mmcblk1p1 /storage/sdcard1<br>  mount -t vfat -o rw /dev/block/mmcblk1p1 /storage/sdcard1</p><p>  umount /mnt/media_rw/usbdrive/A<br>  mount -t ntfs /dev/block/sda /mnt/media_rw/usbdrive/B</p><p>  mount –t vfat /dev/block/sda1  /mnt/usb_test   ( 如果Partition Type為 FAT32)<br>  mount –t tntfs /dev/block/sda1  /mnt/usb_test   ( 如果Partition Type為 NTFS)</p></li><li><p>時區設定, time<br>  vi /etc/sysconfig/clock  時區設定<br>  ZONE=”Asia/Taipei”</p><p>  改時區<br>  1) vi /etc/sysconfig/clock</p><pre><code>ZONE=&quot;Europe/Luxembourg&quot;ZONE=&quot;Asia/Taipei&quot;</code></pre><p>  2) cp /usr/share/zoneinfo/Asia/Taipei /etc/localtime</p><pre><code>cp /usr/share/zoneinfo/Europe/Luxembourg /etc/localtime</code></pre><p>  hwclock -r //讀取BIOS時間<br>  hwclock -w //將軟體時間寫入BIOS</p><p>  在板子上設定時間&amp;時區<br>  1)mount -o remount, rw /   -&gt;將/etc改成r/w<br>  2)mount -t nfs -o nolock 172.16.66.156:/home/nick.cheng /home<br>  3)cp /home/localtime /etc<br>  4)ntpdate clock.stdtime.gov.tw</p></li></ol><pre><code> *Generic procedure to change timezoneChange directory to /etc# cd /etcCreate a symlink to file localtime:# ln -sf /usr/share/zoneinfo/EST localtime *Use of environment variableYou can use TZ environment variable to display date and time according to your timezone:$ export TZ=America/Los_Angeles$ date</code></pre><ol start="4"><li><p>read file<br>  cat  由第一行開始顯示檔案內容<br>  tac  從最後一行開始顯示，可以看出 tac 是 cat 的倒著寫！<br>  nl   顯示的時候，順道輸出行號！<br>  more 一頁一頁的顯示檔案內容<br>  less 與 more 類似，但是比 more 更好的是，他可以往前翻頁！<br>  head 只看頭幾行<br>  tail 只看尾巴幾行<br>  od   以二進位的方式讀取檔案內容！</p></li><li><p>grep<br>  grep -inr DeviceDemodCreate *<br>  grep -inr DeviceDemodCreate *  | grep t12<br>  vi pcb/device_pcb_t12_116A.cpp<br>  grep -inr IspProcFlash *<br>  vi demodulator/device_demodulator_msb123x_extend.cpp<br>  make ui image_all<br>  cat /etc/issue</p><p>  grep “CURRENT HEAP” 2315.log // 在檔案2315.log中搜尋字串CURRENT HEAP<br>  grep ‘&lt;Cached&gt;‘ 2315.log   // 在檔案2315.log中限定搜尋字串Cached</p><p>  ps aux|grep server|grep -v grep | awk ‘{print $2}’|xargs kill -9</p><p>  -r: current目錄下的所有子目錄都會search<br>  -i: 不區分大小寫<br>  -n: 列出line number<br>  -w: 精準單詞比對<br>  rpm -qa | grep faca | while read line ; do echo “$line” ; done</p><p>  grep -rin “test$” * // 搜尋以 test 為句尾的<br>  grep -v ‘grep’ 去除搜尋結果中有 ‘grep’ 字眼的<br>  因為下了 grep 指令，process中除了會有 ‘xxx’，還會有一個 ‘grep xxx’</p></li><li><p>line number in vi<br>  To display line numbers along the left side of a window, type any one of the following:</p><pre><code>:set number</code></pre><p>  or</p><pre><code>:set nu</code></pre><p>  To turn off line number again enter the same command:</p><pre><code>:set nu!:set nonu</code></pre><p>  If you need number every time you start vi/vim, append following line to your ~/.vimrc file:</p><pre><code>set number</code></pre><p>  set warp! //設定不斷行顯示</p></li><li><p>bashrc<br>  1)把檔案/etc/skel/.bashrc複制到/users/nick.cheng<br>  每次登入時先讓設定好的bashrc生效==&gt;source ~/.bashrc</p><p>  2)直接create file<br>  vi ~/.bashrc</p><h1 id="Source-global-definitions"><a href="#Source-global-definitions" class="headerlink" title="Source global definitions"></a>Source global definitions</h1><p> if [ -f /etc/bashrc ]; then</p><pre><code>. /etc/bashrc</code></pre><p> fi</p><p> #User specific aliases and functions<br> HOME=/home/nick.cheng<br> export PATH=$PATH:/tools/mips-4.3-51/mips-4.3/bin:/tools/cmake/i686/cmake-2.8.0/bin/</p><p> #PS1=’[\033[1m]\u@\h \w$[\033[0m]‘<br> PS1=’[\033[1;33m]\u@\h:[\033[m][\033[01;34m]\W $ [\033[m]‘</p><p>  source ~/.bashrc</p><p> 3)設定~/.bash_profile</p><h1 id="Source-global-definitions-1"><a href="#Source-global-definitions-1" class="headerlink" title="Source global definitions"></a>Source global definitions</h1><p>if [ -f $HOME/.bashrc ]; then</p><pre><code>. $HOME/.bashrc</code></pre><p>fi</p><pre><code>login的時候會自動執行~/.bash_profile</code></pre></li><li><p>tar<br> 壓縮 // 把資料夾 test 壓起來，生成 test.tar<br> tar -cf test.tar test<br> tar -czf test.tar.gz test<br> tar -czf test.tgz test<br> tar -cjf test.tar.bz2 test<br> 解壓縮 // 解壓縮放到test去<br> tar -xf test.tar -C test<br> tar -xzf test.tar.gz -C test<br> tar -xzf test.tgz -C test<br> tar -xjf test.tar.bz2 -C test</p><p> a.tar.gz.part00<br> a.tar.gz.part01<br> cat a.tar.gz.part* | tar -xz</p></li><li><p>gdb<br> g++ -g test.cpp -o test // compile</p><ol><li>gdb //進入</li><li>file test //指定除錯file, 1+2 = gdb ./test</li><li>run //執行</li><li>list //列出code, l-&gt;下一段</li><li>break num //設定中斷點在第num行</li><li>info break //檢查目前中斷點設定</li><li>display x //在執行每一行後都顯示x的值</li><li>next //設定完break並執行時, 執行下一行</li></ol></li></ol><pre><code>run (r) -- 開始執行程式continue (c) -- 離開中斷點，繼續執行程式next (n) -- 單步執行 (step over)step (s) -- 進入函式 (step into)until (u) -- 離開 while, for等迴圈。 執行到程式碼的行數比目前的大，如果目前是迴圈的最後一行，就會離開迴圈finish -- 繼續執行程式直到函式返回start --在 main 設置暫時中斷點，並開始執行程式advance -- 執行程式直到指定的位置run arglist -- 同 run，並指定程式參數start arglist -- 同 start，並指定程式參數kill (k) --終止程式執行quit (q) --離開 GDB</code></pre><p>10.檔案容量<br>    df: 用來察看硬碟空間的指令<br>     du: 用來察看目錄內所有檔案使用掉的空間的情況</p><pre><code>du -sh nick.cheng -a  ：列出所有的檔案與目錄容量，因為預設僅統計目錄底下的檔案量而已。-h  ：以人們較易讀的容量格式 (G/M) 顯示；-s  ：列出總量而已，而不列出每個各別的目錄佔用容量；-S  ：不包括子目錄下的總計，與 -s 有點差別。-k  ：以 KBytes 列出容量顯示；-m  ：以 MBytes 列出容量顯示； df -h ls -l | grep ^d | awk &apos;{print $9}&apos; | xargs du -sh | sort -n</code></pre><p>11.AWK<br>    grep “CURRENT HEAP” 1201.log | awk ‘{print $5}’ &gt; heap.txt<br>    grep ‘&lt;Cached&gt;‘ 1201.log | awk ‘{print $2}’ &gt; cache.txt<br>    grep ‘&lt;MemFree&gt;‘ 1201.log | awk ‘{print $2}’ &gt; Free.txt<br>    grep ‘&lt;before collect objectCount&gt;‘ 1201.log | awk ‘{print $7}’ &gt; JSHeap_free.txt<br>    grep ‘&lt;before collect objectCount&gt;‘ 1201.log | awk ‘{print $6}’ &gt; JSHeap_size.txt<br>    grep ‘&lt;before collect objectCount&gt;‘ 1201.log | awk ‘{print $5}’ &gt; JSHeap_obj_count.txt<br>    grep “Number of Nodes:” 1201.log | awk ‘{print $4}’ &gt; node.txt<br>    cat /proc/meminfo | grep MemFree | awk ‘{print $2}’<br>    cat /proc/meminfo | grep -w ‘MemFree|Cached’ | awk ‘{print $1  $3}’<br>    awk -F”:” ‘{ print $1 “ “ $3 }’ /etc/passwd<br>    cat /proc/meminfo | awk ‘/MemFree/ &amp;&amp; /Cached/‘</p><p>12.include and library<br>    gcc sin.c -lm -L/lib -L/usr/lib  // -L/path<br>     gcc sin.c -lm -I/usr/include     // -I/path</p><p>13.checn gcc version<br>    gcc -v</p><p>14.sync<br>    當資料被讀取到memory後，若檔案有修改，並不會即時將檔案寫回硬碟<br>     執行sync指令，會強制將目前memory中的資料，寫回硬碟</p><p>15.find<br>     find . -iname filename //i: 不分大小寫<br>     find -iname MSrv_Control_common.cpp<br>     find -name MSrv_Control_common.cpp<br>     find . -name <em>.o -exec cp -rf {} ./tmp ; // 將找到的檔案全部copy到tmp下<br>     find . -iname <strong>pycache</strong> -exec rm -rf {} ;<br>     find . -type f -exec dos2unix {} ;<br>     find . -iname “</em>.sh” -print0 | xargs -0 grep libjpeg_old -n</p><p>16.alias<br>    alias ll=”ls -al”</p><p>17.<br>            u(user)       +(加入)     r<br>    chmod   g(group)      -(除去)     w      file or folder<br>            o(others)     =(設定)     x<br>            a(all)<br>     e.g. chmod u+wx -R DAILEO //將DAILEO目錄的user權限加入wx, 並且遞迴(-R)設定DAILEO內所有檔案及資料夾</p><p>18.su<br>    su可以讓目前使用者的shell暫停，轉換成另一個user與group，並重新執行起一個新shell<br>    感覺上就好像暫時變成了另外一個帳號，再執行exit時，就可變回本尊<br>     -l: 模擬一個全新的login，所有的環境變數全部重新設定<br>     -m: 除了變成另一個帳號外，所有的環境都不變，目錄不變，環境變數也不變</p><pre><code>su //預設是切換到rootsu username //切換到username帳號sudo su //切換到root</code></pre><p>19.Makefile<br>    := 會將整個 Makefile 展開後，再決定變數的值<br>     ?= 若變數未定義，則替它指定新的值，否則，採用原有的值<br>     += 聯集<br>     @：不要顯示執行的指令<br>     -：表示即使該行指令出錯，也不會中斷執行</p><p>20.fg/bg<br>    fg: 將stopped的程式叫到前景執行<br>     bg: 將stopped的程式叫到背景執行</p><p>21.cut: 將一行訊息當中，取出某部分我們想要的<br>    export | cut -c 12-<br>         將export的輸出-&gt;以行為準切齊，從第12個字元開始印出來<br>    echo $PATH | cut -d ‘:’ -f 5<br>         將輸出以’:’為準做切割，印出第5個element，for example，a:b:c:d:e:f:g ==&gt; 只會印出e</p><p>22.刪除PATH中不要的部份<br>    for example, 要刪掉/usr/local/bin<br>    export PATH=$(echo $PATH | sed ‘s/:/usr/local/bin:/:/g’)</p><p>23.Busybox<br>    檔案系統是Linux不可缺少的一部份，不過在Embedded System上資源有限，不可能建立像PC那麼大的檔案系統，<br>     系統工具程式必須經過精簡化將檔案縮小這樣才可節省Embedded System資源。<br>    現在在Embedded Linux上最常用的檔案系統為 “Busybox”，<br>     “Buzybox”整合的各種系統工具程式(ex: ls, mkdir, rmdir, mount, ifconfig, kill …)成為一個單一執行檔，<br>     大大縮減了系統使用容量。</p><p>24.echo<br>    將字串寫入到指定文件中<br>    echo xxxxxx &gt; filename    // 會把文件內容全部清除，再寫入xxxxxx<br>    echo xxxxxx &gt;&gt; filename  // 會將xxxxxx寫入到原本文件的最末端</p><p>25.bash_history<br>    在~/.bashrc中設定export HISTSIZE=10000<br>    可以更改.bash_history中記錄的指令數量</p><p>26.java -fullversion</p><p>27.patch<br>    patch -pN &lt; patchfile.diff</p><pre><code>for example, a file test.c, origin test.c is stored in old folder and the modified test.c is stored in new foldercurrent folder: /home/nick/comapre: /home/nick/old  and  /home/nick/new==&gt; diff -Naur old new &gt; diff.patch // 比較old and new folder內的所有檔案1. 假設現在有一個舊的test.c file存放在/home/nick下, 要把它變得跟/home/nick/new/test.c一樣 ==&gt; patch -p1 &lt; diff.patch    // 因為原本是對old/ &amp; new/下的檔案作比較，所以要省略一層目錄2. 假設現在有一個新的test.c file存放在/home/nick下, 要把它變得跟/home/nick/old/test.c一樣 ==&gt; patch -R -p1 &lt; patch.diff3. 假設現在有一個舊的test.c file存放在/home/nick/old下, 要把它變得跟/home/nick/new/test.c一樣 ==&gt; patch -p0 &lt; diff.patch4. 假設現在有一個新的test.c file存放在/home/nick/old下, 要把它變得跟/home/nick/old/test.c一樣 ==&gt; patch -R -p0 &lt; diff.patch</code></pre><p>28.踢登入<br>    pkill -kill -t pts/1</p><ol start="29"><li><p>ctags -R *<br> ctags -R * ../umflib/ ../../OceanBlue/sunrise/app/cvt_eu/stb/src/ ../../../DRIVERS/kmf/basesrc_dvbeu/ ../../../DRIVERS/kmf/kmflib/ ../../../KERNEL/linux-2.6.35.9/include/sis516/<br> 會create出一個tags檔, 記錄所有標籤</p></li><li><p>抓log<br> script /home/cht/log.txt<br> 按ctrl+D停止log</p></li><li><p>使用cat將文字輸入到文件中<br> cat &gt; filename<br> 貼上要輸入的文字<br> 按ctrl+D結束</p></li><li><p>EOF =&gt; ctrl+D</p></li><li><p>在SSH中傳訊給其他使用者<br> write sis4990<br> 按ctrl+D結束<br> wall // broadcast<br> 按ctrl+D結束</p></li><li><p>sudo shutdown -P 0 //0分鐘後關機<br>sudo poweroff</p></li><li><p>scp<br> scp -r <a href="mailto:nick@172.17.2.11" target="_blank" rel="noopener">nick@172.17.2.11</a>:./test/* ~/test/  把172.17.2.11上的test目錄下所有檔案都複製到本地端test目錄下<br> scp -r <a href="mailto:nick@172.17.2.11" target="_blank" rel="noopener">nick@172.17.2.11</a>:/home/architecture/SuperNova_CodeBase/tools.tar.gz ~/scp/<br> scp -P 2222 -r docker-compose.yml <a href="mailto:user@172.18.32.226" target="_blank" rel="noopener">user@172.18.32.226</a>:/home/user/</p></li><li><p>查看系統之 process<br> ps 或 ps –x (查看系統中，屬於自己的 process。)<br> ps –au (查看系統中，所有使用者的 process。)<br> ps –aux (查看系統中，包含系統內部，及所有使用者的 process。)<br> ps -elf</p></li><li><p>lsusb // 查看目前系統usb port的情況</p></li></ol><p>38.<br>while true; do cat /proc/meminfo; sleep 1; done<br>while true; do cat /proc/meminfo; sleep 1; echo “===============================”; done<br>while true; do cat /proc/meminfo | grep MemFree; sleep 1; echo “===============================”; done</p><ol start="39"><li>載入module<br>  insmod /system/lib/modules/ehci-hcd.ko<br>  insmod /system/lib/modules/usb-storage.ko</li></ol><p>40.screen<br>    screen //執行screen<br>    screen -r //重新回到（resume）screen 裡</p><pre><code>C-a c // 新增一個screen, 並切換到新的screen去C-a n // 切換到下一個screenC-a p // 切換到上一個screenC-a w // 列出目前所有的screenC-a a // 切換到上一個顯示過的視窗（不是照順序切換）C-a d // 脫離（detach）目前的 screen ，並放到背景執行（不管開了幾個視窗）</code></pre><p>41.sp &amp; vs<br>    1)在命令列下:sp filename, 會將視窗上下切割並開啟filename檔案<br>        2)在命令列下:vs filename, 會將視窗左右切割並開啟filename檔案<br>        C-w w //在兩個視窗中切換<br>        C-w j/k // 在上下兩個視窗中切換<br>        C-w h/l // 在左右兩個視窗中切換</p><ol start="42"><li><p>zip<br> unzip xxx.zip<br> unzip xxx.zip -d dest_dir<br> zip -r test.zip * // 把當前目錄下所有東西都包到test.zip中</p></li><li><p>free -m</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:~$ free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1999         119        1592           1         288        1707</span><br><span class="line">Swap:           975          41         934</span><br></pre></td></tr></table></figure></li><li><p>ps -eo pid,ppid,cmd,%mem,%cpu –sort=-%mem | head<br>top -b -o +%MEM | head -n 17<br>top -b -o +%CPU | head -n 17<br>top -bn1 | awk ‘/gunicorn/ {print  strftime(“%Y-%m-%d %H:%M:%S”), $9, $10}’</p></li></ol><p>while true; do uptime; top -bn1 | awk ‘/gunicorn/ {print  strftime(“%Y-%m-%d %H:%M:%S”), $9, $10}’; sleep 5; done<br>while true; do uptime | tr -d ‘\n’; top -bn1 | awk ‘/mysqld/ {print  “  “ $9 “  “ $10}’; sleep 5; done<br>while true; do uptime | tr -d ‘\n’; top -bn1 | awk ‘/nucleus/ {printf(“%6s%6s\n”, $9, $10)}’; sleep 5; done<br>while true; do uptime | tr -d ‘\n’; top -bn1 | awk ‘/nucleus/ {printf(“%6s%8s\n”, $9, $6)}’; sleep 5; done</p><ol start="45"><li><p>顯示誰已登錄，他們正在做什麼？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:~$ w</span><br><span class="line"> 19:31:52 up 4 days, 10:46,  5 users,  load average: 0.00, 0.01, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">user     pts/0    192.168.56.1     Thu16    1:38m  4.67s  2.89s vim /home/user/git/IMFR/WSGIServer.py</span><br><span class="line">user     pts/1    192.168.56.1     Thu17    5:52   2.67s  1.43s docker-compose up</span><br><span class="line">user     pts/2    192.168.56.1     Thu17    0.00s 23.53s  0.00s w</span><br><span class="line">user     pts/3    192.168.56.1     Thu18    8:39m  0.16s  0.16s -bash</span><br><span class="line">user     pts/4    192.168.56.1     Thu18    1:59m  0.84s  0.84s -bash</span><br></pre></td></tr></table></figure></li><li><p>uptime - 告訴系統已經運行了多久？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:~$ uptime </span><br><span class="line"> 19:32:57 up 4 days, 10:47,  5 users,  load average: 0.00, 0.00, 0.00</span><br></pre></td></tr></table></figure></li><li><p>查看系統中的sh指向</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al `which sh`</span><br></pre></td></tr></table></figure></li><li><p>設定時區</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure tzdata</span><br></pre></td></tr></table></figure></li><li><p>top 查特定 process</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">top -p `pgrep -d &quot;,&quot; monitor.sh`</span><br><span class="line">top -p pid</span><br></pre></td></tr></table></figure></li><li><p>replace<br>:%s/target/replace/g =&gt; 將 target 全部取代成 replace</p></li><li><p>service –status-all<br>The output of service –status-all lists the state of services controlled by System V</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* +: the service is running</span><br><span class="line">* -: the service is not running</span><br><span class="line">* ?: the service state cannot be determined (for some reason).</span><br></pre></td></tr></table></figure></li><li><p>設定service在開機後的的執行狀態<br>$ update-rc.d redis-server enable<br>$ update-rc.d redis-server disable<br>$ update-rc.d redis-server defaults</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xml_parser</title>
      <link href="/posts/67918593/"/>
      <url>/posts/67918593/</url>
      
        <content type="html"><![CDATA[<p>tree = ET.parse(‘aaa.xml’)<br>root = tree.getroot()<br>root.findall(‘.//{urn:3gpp:tsg:sa5:nrm:ngran}vendorName’)</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>disable_ipv6_on_centos7</title>
      <link href="/posts/961c40eb/"/>
      <url>/posts/961c40eb/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># ifconfig enp0s8</span><br><span class="line">enp0s8: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.56.11  netmask 255.255.255.0  broadcast 192.168.56.255</span><br><span class="line">        inet6 fe80::a00:27ff:fe16:8ac8  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 08:00:27:16:8a:c8  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 303  bytes 27759 (27.1 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 189  bytes 33691 (32.9 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line"># echo &quot;net.ipv6.conf.all.disable_ipv6 = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line"># echo &quot;net.ipv6.conf.default.disable_ipv6 = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line"># sysctl -p</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class="line"># service network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK  ]</span><br><span class="line"># ifconfig enp0s8</span><br><span class="line">enp0s8: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.56.11  netmask 255.255.255.0  broadcast 192.168.56.255</span><br><span class="line">        ether 08:00:27:16:8a:c8  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 467  bytes 42663 (41.6 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 302  bytes 60043 (58.6 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fiber</title>
      <link href="/posts/7bac5dc5/"/>
      <url>/posts/7bac5dc5/</url>
      
        <content type="html"><![CDATA[<ul><li>光纖<br><img src="/posts/7bac5dc5/image01.png" alt><br>Core + Cladding + Coating<br>Core: 反射率大<br>Cladding: 反射率小<br><img src="/posts/7bac5dc5/image03.png" alt><br>在 fiber 線上的數字 50/125，代表 Core 50 ㎛, Cladding 150 ㎛</li><li>分類<br><img src="/posts/7bac5dc5/image04.png" alt><br>Multi-mode 的 Core 直徑較粗，可以同時容納多條光束以不同角度前進，但較易相互影響造成衰減，適合較短的傳輸距離 (&lt; 2 km)，價格較便宜<br><img src="/posts/7bac5dc5/image05.png" alt><br>Single-mode 的 Core 直徑較細，只允許一條光束通行，傳輸距離比較遠 (10 km)，價格較貴</li><li>特性</li></ul><ol><li>傳輸距離<br>傳送距離越短，訊號的衰減越少，所能提供的頻寬就越高</li><li>波長<br>基於光的特性，波長越大，訊號衰減就越少，頻寬就可以越高<br>在 Multi-mode 一般會使用波長 850 nm 至 1300 nm；Single-mode 則使用 1310 nm 至 1550 nm</li><li>訊號源<br>發出光訊號的光源可以是 LED (Light-Emitting Diode) 或 VCSEL (Vertical-Cavity Surface-Emitting Laser)<br>VCSEL 的閃動頻率比 LED 高，在相同時間內能夠發出更多的訊號，因而支援較高的頻寬<br>LED 能支援最多 40 Gbps，VCSEL 能支援至 100 Gbps，但是，必須要 OM3/OM4/OS1/OS2 才能支援 VCSEL</li></ol><ul><li>光纖線種類</li></ul><ol><li>Multi-mode 分為 OM1/OM2/OM3/OM4，數字越大則防止衰減技術越高，頻寬及傳輸距離越大<br><img src="/posts/7bac5dc5/image06.png" alt></li><li>Single-mode 分為 OS1/OS2<br><img src="/posts/7bac5dc5/image07.png" alt></li></ol><ul><li>接頭</li></ul><ol><li>SC<br><img src="/posts/7bac5dc5/image08.png" alt></li><li>LC<br><img src="/posts/7bac5dc5/image09.png" alt></li><li>FC<br><img src="/posts/7bac5dc5/image10.png" alt></li></ol><ul><li>Optical Module<br>光電轉換，轉換電信信號跟光信號，通常會有兩個埠，Tx 用來發射信號，Rx 用來接收信號</li></ul><ol><li>GBIC (Giga Bitrate Interface Converter)<br><img src="/posts/7bac5dc5/image11.png" alt></li><li>SFP/SFP+ (Small Form Pluggable)<br>GBIC 的升級版，功能與 GBIC 相同，但接頭為 LC，所有的SFP模塊必須成對使用，相同波長且相同模式<br>SFP封裝–熱插拔小封裝模塊，目前最高速率可達4G<br>SFP+封裝–標準封裝，工作速率是10G，可以滿足乙太網10G的應用<br><img src="/posts/7bac5dc5/image12.png" alt></li></ol><ul><li><p>速率分類<br>按照速率分有10M/100M/155M/622M/1.25G/2.125G/4.25G/10G/25G/50G/100G</p></li><li><p>波長分類<br>按照波長分有850nm/1310nm/1490nm/1550nm/1610nm，波長為850nm為SFP多模，傳輸距離在2KM以下，波長是1310/1550nm的為單模，傳輸距離在2KM以上<br><img src="/posts/7bac5dc5/image02.png" alt><br>一般廠家會在拉環的顏色上進行區分，比如：黑色拉環的為多模，波長是850nm；藍色是波長1310nm的模塊；紫色是波長1490nm的模塊；黃色則是波長1550nm的模塊等</p></li><li><p>模式分類<br>多模: 幾乎所有的多模光纖尺寸均為50/125um或62.5/125um，並且帶寬（光纖的信息傳輸量）通常為200MHz到2GHz<br>單模: 單模光纖的尺寸為9-10/125µm，並且較之多模光纖具有無限量帶寬和更低損耗的特性。而單模光端機多用於長距離傳輸，有時可達到150至200公里</p></li><li><p>Reference<br><a href="https://www.jannet.hk/zh-Hant/post/optical-fiber-cable/" target="_blank" rel="noopener">https://www.jannet.hk/zh-Hant/post/optical-fiber-cable/</a><br><a href="https://kknews.cc/zh-tw/code/9memlr8.html" target="_blank" rel="noopener">https://kknews.cc/zh-tw/code/9memlr8.html</a><br><a href="https://zhuanlan.zhihu.com/p/101607360" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/101607360</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Add Secondary IP in Network Interface Config for CentOS</title>
      <link href="/posts/9c6ed8e8/"/>
      <url>/posts/9c6ed8e8/</url>
      
        <content type="html"><![CDATA[<ul><li>network interface information<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># cat ifcfg-enp97s0f0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0</span><br><span class="line">ONBOOT=no</span><br><span class="line"># ip a | grep enp</span><br><span class="line">6: enp97s0f0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN qlen 1000</span><br></pre></td></tr></table></figure></li><li>新增 ip<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># cat ifcfg-enp97s0f0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=&quot;192.168.56.100&quot;</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0</span><br><span class="line">ONBOOT=no</span><br><span class="line"># service network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK  ]</span><br><span class="line"># ip a | grep enp</span><br><span class="line">6: enp97s0f0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN qlen 1000</span><br><span class="line">    inet 192.168.56.100/24 brd 192.168.56.255 scope global enp97s0f0</span><br></pre></td></tr></table></figure></li><li>更名<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># cat ifcfg-enp97s0f0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=&quot;192.168.56.100&quot;</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0:NgC</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0:NgC</span><br><span class="line">ONBOOT=no</span><br><span class="line"># service network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK  ]</span><br><span class="line"># ip a | grep enp</span><br><span class="line">6: enp97s0f0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN qlen 1000</span><br><span class="line">    inet 192.168.56.100/24 brd 192.168.56.255 scope global enp97s0f0:NgC</span><br></pre></td></tr></table></figure></li><li>新增多組 ip<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># cat ifcfg-enp97s0f0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR0=&quot;192.168.56.100&quot;</span><br><span class="line">IPADDR1=&quot;192.168.56.101&quot;</span><br><span class="line">#GATEWAY1=&quot;192.168.56.1&quot;</span><br><span class="line">#NETMASK1=&quot;255.255.255.0&quot;</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0</span><br><span class="line">ONBOOT=no</span><br><span class="line"># service network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK  ]</span><br><span class="line"># ip a</span><br><span class="line">6: enp97s0f0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN qlen 1000</span><br><span class="line">    inet 192.168.56.100/24 brd 192.168.56.255 scope global enp97s0f0</span><br><span class="line">    inet 192.168.56.101/24 brd 192.168.56.255 scope global secondary enp97s0f0</span><br></pre></td></tr></table></figure></li><li>duplicate 多份 network interface config<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># ls</span><br><span class="line">ifcfg-enp97s0f0</span><br><span class="line">ifcfg-enp97s0f0:NgC</span><br><span class="line">ifcfg-enp97s0f0:NgU</span><br><span class="line"># cat ifcfg-enp97s0f0:NgC</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=&quot;192.168.56.100&quot;</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0:NgC</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0:NgC</span><br><span class="line">ONBOOT=no</span><br><span class="line"># cat ifcfg-enp97s0f0:NgU</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=&quot;192.168.56.101&quot;</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp97s0f0:NgU</span><br><span class="line">UUID=1bb41bf3-dc2c-448b-92dd-44f7059c056a</span><br><span class="line">DEVICE=enp97s0f0:NgU</span><br><span class="line">ONBOOT=no</span><br><span class="line"># ip a</span><br><span class="line">6: enp97s0f0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN qlen 1000</span><br><span class="line">    inet 192.168.56.100/24 brd 192.168.56.255 scope global enp97s0f0:NgC</span><br><span class="line">    inet 192.168.56.101/24 brd 192.168.56.255 scope global secondary enp97s0f0:NgU</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="https://www.opencli.com/linux/centos-7-add-multiple-ip-addresses" target="_blank" rel="noopener">https://www.opencli.com/linux/centos-7-add-multiple-ip-addresses</a><br><a href="https://ma.ttias.be/how-to-add-secondary-ip-alias-on-network-interface-in-rhel-centos-7/" target="_blank" rel="noopener">https://ma.ttias.be/how-to-add-secondary-ip-alias-on-network-interface-in-rhel-centos-7/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BOM</title>
      <link href="/posts/f3d3ee5b/"/>
      <url>/posts/f3d3ee5b/</url>
      
        <content type="html"><![CDATA[<p>在文件的最前面，會有下列符號</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;U+FEFF&gt;</span><br></pre></td></tr></table></figure><p>在vim中，使用以下指令刪除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set nobomb</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ptp</title>
      <link href="/posts/b0e67c8c/"/>
      <url>/posts/b0e67c8c/</url>
      
        <content type="html"><![CDATA[<ul><li>PTP (Precise Time Protocol)<br>Obtaining sub-100 nanosecond timing on a local area network requires an architecture that is fully IEEE-1588 compliant. The three main components are: a GPS Grandmaster clock, an Ethernet switch (transparent or boundary clock), and a PTP slave.<ul><li>PTP 精準度較 NTP 好，NTP 只能精確到毫秒 (ms)，PTP 能精確到微秒 (us)</li><li>NTP 協議較被廣泛用於 LAN 和 WAN 上的時間同步</li></ul></li><li>確認網卡是否支援 PTP 功能<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># ethtool -T enp134s0f0</span><br><span class="line">Time stamping parameters for enp134s0f0:</span><br><span class="line">Capabilities:</span><br><span class="line">    hardware-transmit     (SOF_TIMESTAMPING_TX_HARDWARE)</span><br><span class="line">    software-transmit     (SOF_TIMESTAMPING_TX_SOFTWARE)</span><br><span class="line">    hardware-receive      (SOF_TIMESTAMPING_RX_HARDWARE)</span><br><span class="line">    software-receive      (SOF_TIMESTAMPING_RX_SOFTWARE)</span><br><span class="line">    software-system-clock (SOF_TIMESTAMPING_SOFTWARE)</span><br><span class="line">    hardware-raw-clock    (SOF_TIMESTAMPING_RAW_HARDWARE)</span><br><span class="line">PTP Hardware Clock: 1</span><br><span class="line">Hardware Transmit Timestamp Modes:</span><br><span class="line">    off                   (HWTSTAMP_TX_OFF)</span><br><span class="line">    on                    (HWTSTAMP_TX_ON)</span><br><span class="line">Hardware Receive Filter Modes:</span><br><span class="line">    none                  (HWTSTAMP_FILTER_NONE)</span><br><span class="line">    all                   (HWTSTAMP_FILTER_ALL)</span><br></pre></td></tr></table></figure></li><li>使用 ptp4l 調整 PHC (PTP Hardware Clock) 時鐘，使用 phc2sys 調整系統時鐘</li></ul><ol><li>使用 ptp4l 指令，將 NIC (enp134s0f0) 中的 PHC 做為 slave mode，同步為 master 的時間 (在 ptp4l.conf 中設定 master 來源)</li><li>使用 phc2sys 指令，將 NIC (enp134s0f0) 中的 PHC 時間，同步到系統時間<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># ptp4l -i enp134s0f0 -m -s -f ptp4l.conf</span><br><span class="line"> -i [dev]  interface device to use</span><br><span class="line"> -m        print messages to stdout</span><br><span class="line"> -s        slave only mode (master, by default)</span><br><span class="line"> -f [file] read configuration from &apos;file&apos;</span><br><span class="line"></span><br><span class="line"># phc2sys -s enp134s0f0 -w -m -n 44</span><br><span class="line"> -s [dev|name]  master clock</span><br><span class="line"> -w             wait for ptp4l</span><br><span class="line"> -m             print messages to stdout</span><br><span class="line"> -n [num]       domain number</span><br></pre></td></tr></table></figure></li></ol><ul><li>Components</li></ul><ol><li>GM (Grandmaster Clock): master 作為同步源頭</li><li>OC (Ordinary Clock): 單一網路界面設備 (只有一個 PTP 通信埠)，可以是 master 或 slave</li><li>BC (Boundary Clock): 多網路界面設備 (有一個以上 PTP 通信埠)，其中一個作為 PTP slave (master 是 GM)，其它則為 master (slave 為連接到 swtich 的眾多 network devices)</li><li>TC (Transparent Clock): 多網路界面設備，如同一般 switch 或 router 轉送所有封包，但不作為 master 或 slave (所以 master 依舊為 GM，slave 為連接到 swtich 的眾多 network devices)，分為<br>a. end-to-end (端對端)：額外累算 event 封包停留 switch 時間，更新 correction 欄位<br>b. peer-to-peer (點對點)：只更新 Sync 和 Follow Up 的 correction 欄位，除了累算 event 封包停留時間，再減去 Link propagation delay</li></ol><ul><li>Master/Slave<br>從通信關係上又把時鐘分為主時鐘和從時鐘，任何時鐘都能作為 Master clock 和 Slave clock，並且保證從時鐘與主時鐘時間同步<br>每個系統只有一個GMC，每個子網內只有一個主時鐘</li></ul><p>T1 透過 Sync 或 Follow Up 告知 Slave，如果 Sync 傳送時還不知道真正傳送時間，才用 Follow Up 送，稱為 2-Step<br>T1: Master 週期傳送 Sync 的時間<br>T2: Slave 接收 Sync 的時間<br>Slave 調整時間，讓 T2 和 T1 的變化速度一致，達到頻率同步。Drift = ((T2’-T2) - (T1’-T1))/(T1’-T1)</p><p>E2E：頻率同步後<br>T3: Slave 傳送 Delay Request 的時間，Slave 只是紀錄 T3，Delay Request 並不含 T3 欄位<br>T4: Master 接收 Delay Request 的時間。T4 透過 Delay Response 告知 Slave<br>Delay = (T2 - T1 + T4 - T3)/2</p><p>P2P：可用在頻率不同步時</p><p>One way delay = (T2-T1 + T4-T3) / 2<br>Offset (phase offset) = Master to Slave difference – One way delay = ((T2-T1) - (T4-T3)) / 2</p><p>s<br>主時鐘在t1時刻發送Sync消息：如果為1588 one-step機制，則Sync消息包含有發送時間；如果為1588 two-step機制，則Sync消息僅發送發送時間值的估計值，即t1的估計值，然後在Follow_Up消息中再發送精確的t1值</p><p>2 Step下, sync msg在Transparent Clock中不必更新timestamp. 但是需要记住sync msg在device中停留多长时间(dwell time)供将来follow up用</p><p>One-step clocks require hardware capable of on-the-fly correction field updates. Two-step clocks require that the software remember the dwell time of a sync message and match it to the corresponding follow up message.</p><p>2-step master –&gt; 1-step transparent –&gt; slave<br>transparent clock会更新sync msg的correction filed, 不会处理follow up<br>最终slave都会把sync和follow up的时间戳相加.<br>1-step master –&gt; 2-step transparent –&gt; slave<br>transparent clock会根据sync msg而生成follow up msg</p><ul><li>Reference<br><a href="https://www.2cm.com.tw/2cm/zh-tw/tech/1B2EBAC1BE7F4700A836C4AE040D5873" target="_blank" rel="noopener">https://www.2cm.com.tw/2cm/zh-tw/tech/1B2EBAC1BE7F4700A836C4AE040D5873</a><br><a href="https://blog.meinbergglobal.com/2013/09/14/ieee-1588-accurate/" target="_blank" rel="noopener">https://blog.meinbergglobal.com/2013/09/14/ieee-1588-accurate/</a><br><a href="http://lirobo.blogspot.com/2020/10/precision-time-protocol.html" target="_blank" rel="noopener">http://lirobo.blogspot.com/2020/10/precision-time-protocol.html</a><br><a href="http://www.chronos.co.uk/files/pdfs/cal/TechnicalBrief-IEEE1588v2PTP.pdf" target="_blank" rel="noopener">http://www.chronos.co.uk/files/pdfs/cal/TechnicalBrief-IEEE1588v2PTP.pdf</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5g_document</title>
      <link href="/posts/11219203/"/>
      <url>/posts/11219203/</url>
      
        <content type="html"><![CDATA[<p><a href="https://doc.dpdk.org/dts/test_plans/vf_macfilter_test_plan.html" target="_blank" rel="noopener">https://doc.dpdk.org/dts/test_plans/vf_macfilter_test_plan.html</a></p><p><a href="https://blog.csdn.net/HiWangWenBing/article/details/106878102" target="_blank" rel="noopener">https://blog.csdn.net/HiWangWenBing/article/details/106878102</a><br><a href="https://blog.csdn.net/HiWangWenBing/category_10056821.html" target="_blank" rel="noopener">https://blog.csdn.net/HiWangWenBing/category_10056821.html</a><br><a href="https://blog.csdn.net/HiWangWenBing/article/details/106872841" target="_blank" rel="noopener">https://blog.csdn.net/HiWangWenBing/article/details/106872841</a><br><a href="https://blog.csdn.net/HiWangWenBing/article/details/106877671" target="_blank" rel="noopener">https://blog.csdn.net/HiWangWenBing/article/details/106877671</a><br><a href="https://blog.csdn.net/HiWangWenBing/article/details/106875790" target="_blank" rel="noopener">https://blog.csdn.net/HiWangWenBing/article/details/106875790</a><br><a href="https://www.2cm.com.tw/2cm/zh-tw/tech/A64431A9FDDC48F4AFFFC99688A8743D" target="_blank" rel="noopener">https://www.2cm.com.tw/2cm/zh-tw/tech/A64431A9FDDC48F4AFFFC99688A8743D</a><br><a href="https://tel3c.tw/blog/post/28669" target="_blank" rel="noopener">https://tel3c.tw/blog/post/28669</a><br><a href="https://zhuanlan.zhihu.com/p/59654520" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/59654520</a><br><a href="https://www.linkedin.com/pulse/3gpp-5g-adhoc-any-decisions-ran-internal-functional-split-eiko-seidel" target="_blank" rel="noopener">https://www.linkedin.com/pulse/3gpp-5g-adhoc-any-decisions-ran-internal-functional-split-eiko-seidel</a></p><p>DTU (Data Terminal Unit)<br>採用 5G/4G 無線、有線網絡，將本地串口數據經 DTU 打包成 IP 數據或者是將 IP 數據轉換成串口數據的無線通訊終端，進行遠程傳輸的設備<br>可以充當UE測試Throughput</p><p>PA (Power Amplifier)<br>功率放大器</p><p>SFP (Small From Pluggable)<br>SFP的最高速率可達4G，SFP+的速率是10G</p><p>PDU (Packet Data Unit)<br>5G網絡以數據包的形式將終端（UE）和外部網絡之間發送和接收的數據進行傳送，通常把這些用戶的數據包叫做PDU<br>PDU session 建立過程是由UE側發起的，目的是在UE和DN之間建立一條新的連線，即終端和外部網絡之間的數據通道</p><p>MCS</p><p>EVM (Error Vector Magnitude)<br>經由 PF 打出來的訊號，跟理想訊號的誤差值</p><p>PLMN (Public Land Mobile Network)<br>PLMN = MCC + MNC<br>MCC: 移動國家碼<br>MNC: 行動網路碼</p><p><a href="https://www.2cm.com.tw/2cm/zh-tw/tech/A64431A9FDDC48F4AFFFC99688A8743D" target="_blank" rel="noopener">https://www.2cm.com.tw/2cm/zh-tw/tech/A64431A9FDDC48F4AFFFC99688A8743D</a><br>在通訊網路中, 無線接取部份分成4個子層 PDCP, RLC, MAC, PHY</p><p>資料在各個子層中進行相對應的封裝，子層從上層收到的資料視為此子層的服務資料單元(Service Data Unit, SDU)，經過子層封裝後成為協定資料單元(Protocol Data Unit, PDU)，再傳遞給下一個子層</p><p>PDCP (Packet Data Convergence Protocol)<br>負責的主要功能有資料封包的標頭(Header)壓縮與解壓縮、資料加密/解密、資料完整性的保護<br>PDCP 的 PDU 格式分成兩種，分別是攜帶資料和序號(Sequence Number, SN)的PDCP Data PDU和攜帶PDCP狀態報告(Status Report)或標頭壓縮控制(Header Compression Control)資訊的PDCP控制PDU</p><p>在LTE通訊協定的設計中，每個無線承載都由一個PDCP實體(Entity)來負責管理，而根據無線承載的不同特性(單向或雙向)，以及RLC是以承認模式(AM)或非承認模式(UM)來傳輸資料，一個PDCP實體可能會對應到一或兩個RLC實體。</p><p>無線承載還可分為專用無線承載(Dedicated Radio Bearer, DRB)和信令無線承載(Signaling Radio Bearer, SRB)兩種，PDCP實體提供無線承載的功能雖然均包含使用者面(User Plane)與控制面(Control Plane)資料傳送、PDCP序號維護、資料加解密、剔除過時資料封包和確保上層資料封包於重建時的順序正確和不重複，但標頭壓縮/解壓縮功能只適用於DRB，資料完整性保護亦僅適用於SRB。  </p><p>RLC (Radio Link Control)<br>該子層主要的功能為對資料SDU進行切割及組合，使之成為適當大小的 PDU 送給 MAC 層。<br>RLC子層負責的另一項重要工作則是在封包遺失時進行自動重傳請求(Automatic Repeat Request, ARQ)</p><p>RLC子層的操作模式可分為三類，分別為透明模式(TM)、非承認模式及承認模式。<br>透明模式為直接穿透模式，資料不須在RLC層進行重新封裝的工作，SDU即為PDU<br>而在承認和非承認模式下，RLC子層均須將所收到的SDU進行切割和重組，以組成MAC子層所要求的PDU。承認和非承認模式之間的主要差別，便是由是否支援ARQ功能進行區分。承認模式須支援ARQ功能，而非承認模式則不支援ARQ功能。在承認模式下，MAC必須在接收端對於PDU接收的結果進行回報，回報結果為接收成功(ACK)或接收失敗(NACK)，當結果為NACK時，RLC的傳送端必須進行重傳。</p><p>ARQ機制旨在克服PDU遺失的問題。在傳送端會將組成的PDU暫存在緩衝區內，用以進行PDU的重傳。在重傳時，若是傳輸空間大小不足以容納須要重傳的PDU時，可以針對已經組成的PDU再次進行切割(Re-segment)，以組成PDU進行傳送。在接收端亦會對收到的PDU進行暫存動作，嘗試將收到的PDU解封裝成為SDU並且維持SDU的先後順序傳送給上層。  </p><p>MAC (Media Access Control) 負責資料的重傳 (HARQ)<br>MAC子層將接手執行排程(Scheduling)、多工(Multiplexing)等任務，以組成MAC子層PDU<br>在MAC子層端，為防止RLC提供的PDU遺失，具備混合式自動回覆請求重傳(HARQ)等功能</p><p>多工的目標，在於將多個不同邏輯通道的資料組合在同一個傳輸通道中傳送，在MAC子層中會將一或多個邏輯通道得到的SDU封裝在同一個 MAC PDU中，然後在傳輸通道中進行傳送。相反的接收時亦會對MAC PDU進行解多工 (De-multiplexing)的動作，將在同一個傳輸通道中的PDU拆解為一至多個邏輯通道SDU，即在接收端將SDU對應到原屬的邏輯通道</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>openshift</title>
      <link href="/posts/41da0a7b/"/>
      <url>/posts/41da0a7b/</url>
      
        <content type="html"><![CDATA[<ul><li><p>How to Setup OpenShift Origin (OKD) on Ubuntu 19.04/18.04/16.04<br><a href="https://computingforgeeks.com/how-to-setup-openshift-origin-on-ubuntu/#ex1" target="_blank" rel="noopener">https://computingforgeeks.com/how-to-setup-openshift-origin-on-ubuntu/#ex1</a></p></li><li><p>How To Setup Local OpenShift Origin (OKD) Cluster on CentOS 7<br><a href="https://computingforgeeks.com/setup-openshift-origin-local-cluster-on-centos/" target="_blank" rel="noopener">https://computingforgeeks.com/setup-openshift-origin-local-cluster-on-centos/</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>redis</title>
      <link href="/posts/7b25d017/"/>
      <url>/posts/7b25d017/</url>
      
        <content type="html"><![CDATA[<ol><li><p>redis-client<br><a href="https://github.com/rgl/redis/downloads" target="_blank" rel="noopener">https://github.com/rgl/redis/downloads</a></p></li><li><p>redis-server<br>sudo apt-get install redis-server<br>sudo apt-get purge –auto-remove redis-server</p></li><li><p>Instruction</p></li></ol><ul><li><p>Start/Stop Redis server<br>$ sudo service redis-server start<br>$ sudo service redis-server restart<br>$ sudo service redis-server stop</p></li><li><p>Open Redis CLI tool<br>$ redis-cli<br>$ redis-cli -h redis15.localnet.org -p 6379 ping</p></li><li><p>Config<br>$ sudo vim /etc/redis/redis.conf<br>port：連結到Redis Server所通過的連接埠。預設為6379，如果有跟其他服務衝突到，應該要修改掉。<br>bind：連結到Redis Server所使用的網路介面。預設為127.0.0.1，也就是內部迴圈(lo)，僅本機可以直接連接。<br>requirepass：連結到此Redis Server所需的密碼。</p><p>修改bind設定<br>$ sudo vim /etc/redis/redis.conf<br>bind 127.0.0.1 =&gt; bind 0.0.0.0</p></li></ul><p><a href="https://blogs.technet.microsoft.com/jessicadeen/uncategorized/how-to-configure-redis-server-on-bash-on-ubuntu-on-windows-10-wsl/" target="_blank" rel="noopener">How to configure Redis-Server on Bash on Ubuntu on Windows 10 (WSL) – Jessica Deen on Technet</a></p><ul><li>Commands<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; set test 123</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get test</span><br><span class="line">&quot;123&quot;</span><br><span class="line">127.0.0.1:6379&gt; exists test</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; del test</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://redis.io/topics/rediscli" target="_blank" rel="noopener">https://redis.io/topics/rediscli</a><br><a href="https://www.itread01.com/content/1545205270.html" target="_blank" rel="noopener">https://www.itread01.com/content/1545205270.html</a><br><a href="https://pypi.org/project/redis/" target="_blank" rel="noopener">https://pypi.org/project/redis/</a><br><a href="https://www.jianshu.com/p/2639549bedc8" target="_blank" rel="noopener">https://www.jianshu.com/p/2639549bedc8</a></p><p>redis-cli -p 6379 –stat</p><ul><li>Setup in nodejs<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">const session = require(&apos;express-session&apos;);</span><br><span class="line">const RedisStore = require(&apos;connect-redis&apos;)(session);</span><br><span class="line"></span><br><span class="line">app.use(session(&#123;</span><br><span class="line">    store: new RedisStore(&#123;</span><br><span class="line">        host: &apos;localhost&apos;,</span><br><span class="line">        port: 6379,</span><br><span class="line">        ttl: 30 * 60 // valid in 30 minutes</span><br><span class="line">    &#125;),</span><br><span class="line">    secret: &apos;keyboard cat&apos;,</span><br><span class="line">    resave: false,</span><br><span class="line">    saveUninitialized: false</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.get(&apos;/&apos;, (req, res) =&gt; &#123;</span><br><span class="line">    if (req.session.key) &#123;</span><br><span class="line">        res.redirect(&apos;/index&apos;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        res.redirect(&apos;/login&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(&apos;/login&apos;,function(req, res)&#123;</span><br><span class="line">    // when user login set the key to redis</span><br><span class="line">    req.session.key = req.body.email;</span><br><span class="line">    res.end(&apos;done&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://github.com/tj/connect-redis" target="_blank" rel="noopener">https://github.com/tj/connect-redis</a><br><a href="https://codeforgeek.com/2015/07/using-redis-to-handle-session-in-node-js/" target="_blank" rel="noopener">https://codeforgeek.com/2015/07/using-redis-to-handle-session-in-node-js/</a></p><p>SET (Setting a Key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SET foo &quot;Hello World&quot;</span><br><span class="line">OK // setting a key</span><br></pre></td></tr></table></figure><p>GET (Getting a Key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; GET foo</span><br><span class="line">&quot;Hello World&quot; // getting a key</span><br></pre></td></tr></table></figure><p>DEL (Deleting a Key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; GET foo </span><br><span class="line">&quot;Hello World&quot; // getting a key</span><br><span class="line">127.0.0.1:6379&gt; DEL foo</span><br><span class="line">(integer) 1 // key just got deleted</span><br><span class="line">127.0.0.1:6379&gt; GET foo</span><br><span class="line">(nil) // since key is deleted therefore, result is nil.</span><br></pre></td></tr></table></figure><p>SETEX (Setting a key with an expiry)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SETEX foo 40 &quot;I said, Hello World!&quot;</span><br><span class="line">OK // key has been set with 40 seconds as expiration</span><br></pre></td></tr></table></figure><p>TTL (Total Time left for a key that has a timeout)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; TTL foo</span><br><span class="line">(integer) 36 // 36 seconds left to timeout</span><br></pre></td></tr></table></figure><p>PERSIST (Removing the timeout from key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PERSIST foo</span><br><span class="line">(integer) 1 // turning the key from volatile to persistent (key won&apos;t expire)</span><br></pre></td></tr></table></figure><p>RENAME (Renaming the current existing key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; RENAME foo bar</span><br><span class="line">OK // renaming the key &apos;foo&apos; as bar</span><br></pre></td></tr></table></figure><p>FLUSHALL (Flushing everything so far saved)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; flushall</span><br><span class="line">OK // just got flushed</span><br></pre></td></tr></table></figure><p>dump redis data<br><a href="https://github.com/sripathikrishnan/redis-rdb-tools" target="_blank" rel="noopener">https://github.com/sripathikrishnan/redis-rdb-tools</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">查找所有key</span><br><span class="line">keys *</span><br><span class="line">redis-cli -h 172.18.66.199 -p 16379 keys &apos;subject_id*&apos; &gt; keys.txt</span><br><span class="line"></span><br><span class="line">dump data to /data/dump.rdb</span><br><span class="line">redis-cli -h 172.18.66.199 -p 16379 bgsave</span><br><span class="line"></span><br><span class="line">要先把dump.rdb從redis container中複製出來</span><br><span class="line">pip install rdbtools python-lzf</span><br><span class="line"></span><br><span class="line">Memory Report</span><br><span class="line">rdb -c memory dump.rdb &gt; memory.csv</span><br><span class="line"></span><br><span class="line">data</span><br><span class="line">rdb --command json dump.rdb &gt; data.txt</span><br><span class="line">rdb --command justkeyvals --key &quot;user.*&quot; dump.rdb &gt; data.txt</span><br></pre></td></tr></table></figure><ul><li>設定、查詢 live time<br>redis&gt; keys *<br>1) key1<br>2) key2<br>redis&gt; EXPIRE key1 10086<br>(integer) 1<br>redis&gt; TTL key1<br>(integer) 10084</li></ul><p><a href="https://tachingchen.com/tw/blog/redis-data-persistence/" target="_blank" rel="noopener">https://tachingchen.com/tw/blog/redis-data-persistence/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; config get &quot;stop-writes-on-bgsave-error&quot;</span><br><span class="line">1) &quot;stop-writes-on-bgsave-error&quot;</span><br><span class="line">2) &quot;yes&quot;</span><br><span class="line">127.0.0.1:6379&gt; CONFIG SET stop-writes-on-bgsave-error no</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; config get &quot;stop-writes-on-bgsave-error&quot;</span><br><span class="line">1) &quot;stop-writes-on-bgsave-error&quot;</span><br><span class="line">2) &quot;no&quot;</span><br></pre></td></tr></table></figure><p>app.pool = redis.ConnectionPool(host=app.config[‘REDIS_HOST’] , port=app.config[‘REDIS_PORT’] , decode_responses=True)<br>app.gredis = redis.Redis(connection_pool=app.pool)<br>app.gredis.config_set(“stop-writes-on-bgsave-error”, “no”)</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>crontab</title>
      <link href="/posts/2de1df7e/"/>
      <url>/posts/2de1df7e/</url>
      
        <content type="html"><![CDATA[<ul><li><p>列出所有設定<br><code>crontab -l</code></p></li><li><p>設定<br><code>crontab -e</code><br>進入編輯畫面編輯排程工作，若需要排程的命令需要 root 權限，可以在 root 帳戶下，執行 <code>crontab -e</code></p></li><li><p>刪除所有設定<br><code>crontab -r</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>taskset command</title>
      <link href="/posts/de3e16a/"/>
      <url>/posts/de3e16a/</url>
      
        <content type="html"><![CDATA[<p>taskset 指令可以指定特定的 CPU 給 Process 使用</p><ul><li><p>安裝</p><ul><li>Ubuntu<br><code>apt install util-linux</code></li><li>Centos<br><code>yum install util-linux</code></li></ul></li><li><p>設定 CPU affinity<br><code>taskset COREMASK EXECUTABLE</code><br><code>taskset -p COREMASK PID</code><br><code>taskset -cp CORELIST PID</code></p><ul><li>執行 test.sh 並綁定在  CPU 0<br><code>taskset 0x1 ./test.sh</code></li><li>執行 test.sh 並綁定在  CPU 0-3<br><code>taskset 0xf ./test.sh</code></li><li>執行 test.sh 並綁定在  CPU 0, 4<br><code>taskset 0x11 ./test.sh</code></li><li>將行程 9527 固定在 CPU 0<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]# taskset -p 0x1 9527</span><br><span class="line">pid 9527&apos;s current affinity mask: f</span><br><span class="line">pid 9527&apos;s new affinity mask: 1</span><br><span class="line"></span><br><span class="line">[root@centos ~]# taskset -cp 0 9527</span><br><span class="line">pid 9527&apos;s current affinity list: 0-3</span><br><span class="line">pid 9527&apos;s new affinity list: 0</span><br></pre></td></tr></table></figure></li><li>將行程 9527 固定在 CPU 2, 3<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]# taskset -p 0xc 9527</span><br><span class="line">pid 9527&apos;s current affinity mask: f</span><br><span class="line">pid 9527&apos;s new affinity mask: c</span><br><span class="line"></span><br><span class="line">[root@centos ~]# taskset -cp 2,3 9527</span><br><span class="line">pid 9527&apos;s current affinity list: 0-3</span><br><span class="line">pid 9527&apos;s new affinity list: 2,3</span><br></pre></td></tr></table></figure></li></ul></li><li><p>查看 CPU affinity<br><code>taskset -p PID</code><br><code>taskset -cp PID</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]# taskset -p 9527</span><br><span class="line">pid 9527&apos;s current affinity mask: f</span><br><span class="line"></span><br><span class="line">[root@centos ~]# taskset -cp 9527</span><br><span class="line">pid 9527&apos;s current affinity list: 0-3</span><br></pre></td></tr></table></figure></li><li><p>Reference<br><a href="https://blog.gtwang.org/linux/run-program-process-specific-cpu-cores-linux/" target="_blank" rel="noopener">https://blog.gtwang.org/linux/run-program-process-specific-cpu-cores-linux/</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VirtualBox - 重新設定 vdi disk 大小</title>
      <link href="/posts/67ead39f/"/>
      <url>/posts/67ead39f/</url>
      
        <content type="html"><![CDATA[<ol><li>目前配置大小為 32G<br><img src="/posts/67ead39f/image01.png" alt></li><li>以系統管理員身份執行 cmd，重新設定大小為 100G<br><code>VBoxManage modifyhd E:\vm\testing\testing.vdi -–resize 102400</code><br><img src="/posts/67ead39f/image02.png" alt><br><img src="/posts/67ead39f/image03.png" alt></li></ol>]]></content>
      
      
      <categories>
          
          <category> VirtualBox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VirtualBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rpm</title>
      <link href="/posts/b408013f/"/>
      <url>/posts/b408013f/</url>
      
        <content type="html"><![CDATA[<ol><li><p>package</p><ul><li>on Centos<br><code>sudo yum install rpmdevtools</code></li><li>on Ubuntu<br><code>sudo apt install rpm</code></li></ul></li><li><p>install<br><code>rpm -ivh test-1.0-1.el7.x86_64.rpm</code><br><code>rpm -ivh test-1.0-1.el7.x86_64.rpm --nodeps --force</code></p></li><li><p>uninstall<br><code>rpm -e test-1.0-1.el7.x86_64</code></p></li><li><p>list all installed rpm packages</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[user@centos ~]$ rpm -qa | grep test</span><br><span class="line">test-1.0-1.el7.x86_64</span><br></pre></td></tr></table></figure></li><li><p>製作 rpm package<br>a. 建立 rpm resource folder<br><code>rpmdev-setuptree</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rpmbuild/</span><br><span class="line">├── BUILD</span><br><span class="line">├── RPMS</span><br><span class="line">├── SOURCES</span><br><span class="line">├── SPECS</span><br><span class="line">└── SRPMS</span><br></pre></td></tr></table></figure><p>b. 把 source tar file 放入 SOURCES<br>c. 建立 spec file template<br><code>cd rpmbuild/SPECS &amp;&amp; rpmdev-newspec test.spec</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Name:           test</span><br><span class="line">Version:        </span><br><span class="line">Release:        1%&#123;?dist&#125;</span><br><span class="line">Summary:        </span><br><span class="line"></span><br><span class="line">License:        </span><br><span class="line">URL:            </span><br><span class="line">Source0:        </span><br><span class="line"></span><br><span class="line">BuildRequires:  </span><br><span class="line">Requires:       </span><br><span class="line"></span><br><span class="line">%description</span><br><span class="line"></span><br><span class="line">%prep</span><br><span class="line">%setup -q</span><br><span class="line"></span><br><span class="line">%build</span><br><span class="line">%configure</span><br><span class="line">make %&#123;?_smp_mflags&#125;</span><br><span class="line"></span><br><span class="line">%install</span><br><span class="line">rm -rf $RPM_BUILD_ROOT</span><br><span class="line">%make_install</span><br><span class="line"></span><br><span class="line">%files</span><br><span class="line">%doc</span><br><span class="line"></span><br><span class="line">%changelog</span><br></pre></td></tr></table></figure><p>d. build rpm package<br><code>rpmbuild -bb rpmbuild/SPECS/test.spec</code><br>rpm file 會產生在<br><code>rpmbuild/RPMS/x86_64/test-1.0-1.el7.x86_64.rpm</code></p></li><li><p>spec</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># test.spec</span><br><span class="line">Name:           test</span><br><span class="line">Version:        1.0</span><br><span class="line">Release:        1%&#123;?dist&#125;</span><br><span class="line">Summary:        TEST</span><br><span class="line">License:        TEST</span><br><span class="line">Source0:        %&#123;name&#125;.tar.gz</span><br><span class="line">#如果有多個 tar source</span><br><span class="line">#Source1:        xxx.tar.gz</span><br><span class="line"></span><br><span class="line">%description</span><br><span class="line">Description</span><br><span class="line"></span><br><span class="line">%prep</span><br><span class="line"># tar檔解壓縮後，預設目錄必須為 test-1.0，若不是 (假設根目錄為 test)，則必須指明目錄名稱</span><br><span class="line">%setup -q -n test</span><br><span class="line"># 先建立目錄 tmp，再將 test 解壓縮 (最後的目錄會是 ~/rpmbuild/BUILD/tmp/test)</span><br><span class="line">#%setup -q -c -n tmp</span><br><span class="line"># 如果有多個 tar source</span><br><span class="line">#%setup -q -b 0 -n aaa</span><br><span class="line">#%setup -q -b 1 -n bbb</span><br><span class="line"></span><br><span class="line">%install</span><br><span class="line">mkdir -p $RPM_BUILD_ROOT/home/user/test</span><br><span class="line">cp -rf test.py $RPM_BUILD_ROOT/home/user/test</span><br><span class="line"></span><br><span class="line">%clean</span><br><span class="line"></span><br><span class="line">%files</span><br><span class="line"># 這個目錄結構，就是安裝 rpm 的路徑，以及安裝的檔案</span><br><span class="line">/home/user/test</span><br><span class="line"></span><br><span class="line">%pre</span><br><span class="line"># 在安裝 rpm 前執行的動作</span><br><span class="line"></span><br><span class="line">%post</span><br><span class="line"># 在安裝 rpm 後執行的動作</span><br></pre></td></tr></table></figure></li><li><p>To prevent binary stripping for specific rpm, we can add following line at the top of any rpm spec file:<br><code>%global __os_install_post %{nil}</code></p></li><li><p>Reference<br><a href="https://idevz.org/2017/07/centos-%E5%A6%82%E4%BD%95%E6%89%93-rpm-%E5%8C%85/" target="_blank" rel="noopener">https://idevz.org/2017/07/centos-%E5%A6%82%E4%BD%95%E6%89%93-rpm-%E5%8C%85/</a><br><a href="https://longfamily.pixnet.net/blog/post/282020230-centos-rpm%E5%8C%85%E5%88%B6%E4%BD%9C%E5%8E%9F%E7%90%86" target="_blank" rel="noopener">https://longfamily.pixnet.net/blog/post/282020230-centos-rpm%E5%8C%85%E5%88%B6%E4%BD%9C%E5%8E%9F%E7%90%86</a><br><a href="https://blog.csdn.net/wangcg123/article/details/53693578" target="_blank" rel="noopener">https://blog.csdn.net/wangcg123/article/details/53693578</a><br><a href="https://blog.csdn.net/trochiluses/article/details/11179901" target="_blank" rel="noopener">https://blog.csdn.net/trochiluses/article/details/11179901</a><br><a href="https://fedoraproject.org/wiki/How_to_create_an_RPM_package/zh-tw" target="_blank" rel="noopener">https://fedoraproject.org/wiki/How_to_create_an_RPM_package/zh-tw</a><br><a href="https://rpm-packaging-guide.github.io/" target="_blank" rel="noopener">https://rpm-packaging-guide.github.io/</a><br><a href="https://www.itread01.com/content/1547001025.html" target="_blank" rel="noopener">https://www.itread01.com/content/1547001025.html</a><br><a href="https://gohalo.me/post/linux-create-rpm-package.html" target="_blank" rel="noopener">https://gohalo.me/post/linux-create-rpm-package.html</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>systemd</title>
      <link href="/posts/e27e5d75/"/>
      <url>/posts/e27e5d75/</url>
      
        <content type="html"><![CDATA[<p>增刪修改 service 檔案後，更新 systemd daemon<br><code>systemctl daemon-reload</code></p><p>啟動<br><code>systemctl start example</code><br><code>systemctl start example.service</code></p><p>關閉<br><code>systemctl stop example</code><br><code>systemctl stop example.service</code></p><p>開機自動啟動<br><code>systemctl enable example.service</code><br><code>systemctl disable example.service</code></p><p>查詢狀態<br><code>systemctl status example.service</code><br><code>systemctl is-active example.service</code><br><code>systemctl is-enabled example.service</code><br><code>systemctl is-failed example.service</code></p><p>列出所有已啟動的服務<br><code>systemctl list-units</code></p><p>列出系統上所有的服務<br><code>systemctl list-units --all</code></p><p>只列出系統上所有 service 類型的服務<br><code>systemctl list-units --type=service</code></p><p>列出系統上所有未啟動的服務<br><code>systemctl list-units --all --state=inactive</code></p><p>查看 log<br><code>journalctl -e -u example.service</code><br><code>journalctl -e -u example.service --no-pager</code></p><p>權限<br><code>chmod 644 example.service</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/systemd/system/example.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=example</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/home/user</span><br><span class="line">ExecStartPre=/home/user/start_pre.sh</span><br><span class="line">ExecStart=/home/uesr/start.sh</span><br><span class="line">ExecStartPost=/home/user/start_post.sh</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p><a href="https://blog.gtwang.org/linux/linux-basic-systemctl-systemd-service-unit-tutorial-examples/" target="_blank" rel="noopener">https://blog.gtwang.org/linux/linux-basic-systemctl-systemd-service-unit-tutorial-examples/</a><br><a href="https://blog.gtwang.org/linux/linux-create-systemd-service-unit-for-python-echo-server-tutorial-examples/" target="_blank" rel="noopener">https://blog.gtwang.org/linux/linux-create-systemd-service-unit-for-python-echo-server-tutorial-examples/</a><br><a href="https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html" target="_blank" rel="noopener">https://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html</a></p>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPU-Pooler</title>
      <link href="/posts/c41c82d5/"/>
      <url>/posts/c41c82d5/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cmk</title>
      <link href="/posts/bfe30151/"/>
      <url>/posts/bfe30151/</url>
      
        <content type="html"><![CDATA[<ul><li>Reference<br><a href="https://github.com/intel/CPU-Manager-for-Kubernetes" target="_blank" rel="noopener">https://github.com/intel/CPU-Manager-for-Kubernetes</a></li><li>reset/initial<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># rm -rf /etc/cmk  &lt;== 刪除舊的配置</span></span><br><span class="line">[root@openness user]<span class="comment"># kubectl taint nodes openness cmk-   &lt;== 刪除 Taint</span></span><br></pre></td></tr></table></figure></li><li>設定 cmk<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># kubectl apply -f CPU-Manager-for-Kubernetes/resources/authorization/cmk-namespace.yaml</span></span><br><span class="line">[root@openness user]<span class="comment"># kubectl apply -f CPU-Manager-for-Kubernetes/resources/authorization/cmk-rbac-rules.yaml</span></span><br><span class="line">[root@openness user]<span class="comment"># kubectl apply -f CPU-Manager-for-Kubernetes/resources/authorization/cmk-serviceaccount.yaml</span></span><br></pre></td></tr></table></figure></li><li>安裝 cmk<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># edit CPU-Manager-for-Kubernetes/resources/pods/cmk-cluster-init-pod.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: cmk-cluster-init-pod</span><br><span class="line">  name: cmk-cluster-init-pod</span><br><span class="line">  namespace: cmk-namespace</span><br><span class="line">spec:</span><br><span class="line">  serviceAccountName: cmk-serviceaccount</span><br><span class="line">  containers:</span><br><span class="line">  - args:</span><br><span class="line">      <span class="comment"># Change this value to pass different options to cluster-init.</span></span><br><span class="line">      - <span class="string">"/cmk/cmk.py cluster-init --all-host --saname=cmk-serviceaccount --namespace=cmk-namespace"</span></span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">    - <span class="string">"/bin/bash"</span></span><br><span class="line">    - <span class="string">"-c"</span></span><br><span class="line">    image: cmk:v1.4.1</span><br><span class="line">    name: cmk-cluster-init-pod</span><br><span class="line">  restartPolicy: Never</span><br><span class="line"></span><br><span class="line">kubectl apply -f CPU-Manager-for-Kubernetes/resources/pods/cmk-cluster-init-pod.yaml</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kuberneters namespace 無法刪除</title>
      <link href="/posts/33ba49e8/"/>
      <url>/posts/33ba49e8/</url>
      
        <content type="html"><![CDATA[<p>刪除 namespace 時，一直處於 Terminating 狀態</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># kubectl delete namespace &lt;ns&gt;</span><br><span class="line"></span><br><span class="line"># kubectl get namespace</span><br><span class="line">NAME              STATUS        AGE</span><br><span class="line">cdi               Active        2d23h</span><br><span class="line">default           Active        2d23h</span><br><span class="line">kube-node-lease   Active        2d23h</span><br><span class="line">kube-public       Active        2d23h</span><br><span class="line">kube-system       Active        2d23h</span><br><span class="line">kubevirt          Active        2d23h</span><br><span class="line">&lt;ns&gt;              Terminating   2d23h</span><br><span class="line">openness          Active        2d23h</span><br></pre></td></tr></table></figure><p>Step1:<br><code>kubectl get namespace &lt;ns&gt; -o json &gt; tmp.json</code></p><p>Step2:<br>刪除 spec 的內容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># vim tmp.json</span><br><span class="line">...</span><br><span class="line">    &quot;spec&quot;: &#123;</span><br><span class="line">        &quot;finalizers&quot;: [   &lt;== delete</span><br><span class="line">            &quot;kubernetes&quot;  &lt;== delete</span><br><span class="line">        ]                 &lt;== delete</span><br><span class="line">    &#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Step3: 在另一個 terminal 開啟一個 local api proxy<br><code>kubectl proxy --port=8081</code></p><p>Step4:<br><code>curl -k -H &quot;Content-Type: application/json&quot; -X PUT --data-binary @tmp.json http://127.0.0.1:8081/api/v1/namespaces/&lt;ns&gt;/finalize</code></p><ul><li>Pod 無法刪除，停留在 Terminating 狀態<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl delete pods &lt;pod&gt; --grace-period=0 --force</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deploy VM via kubevirt</title>
      <link href="/posts/12e6bda/"/>
      <url>/posts/12e6bda/</url>
      
        <content type="html"><![CDATA[<ul><li>Reference<br><a href="https://github.com/open-ness/edgecontroller" target="_blank" rel="noopener">https://github.com/open-ness/edgecontroller</a></li><li>建立 pv<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># cat persistentLocalVolume.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: kv-pv0</span><br><span class="line">  labels:</span><br><span class="line">        <span class="built_in">type</span>: <span class="built_in">local</span></span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">        storage: 15Gi</span><br><span class="line">  accessModes:</span><br><span class="line">        - ReadWriteOnce</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br><span class="line">  storageClassName: <span class="built_in">local</span>-storage</span><br><span class="line">  <span class="built_in">local</span>:</span><br><span class="line">        path: /var/vd/vol0/</span><br><span class="line">  nodeAffinity:</span><br><span class="line">        required:</span><br><span class="line">          nodeSelectorTerms:</span><br><span class="line">          - matchExpressions:</span><br><span class="line">                - key: kubernetes.io/hostname</span><br><span class="line">                  operator: In</span><br><span class="line">                  values:</span><br><span class="line">                  - openness</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: kv-pv1</span><br><span class="line">  labels:</span><br><span class="line">        <span class="built_in">type</span>: <span class="built_in">local</span></span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">        storage: 15Gi</span><br><span class="line">  accessModes:</span><br><span class="line">        - ReadWriteOnce</span><br><span class="line">  persistentVolumeReclaimPolicy: Retain</span><br><span class="line">  storageClassName: <span class="built_in">local</span>-storage</span><br><span class="line">  <span class="built_in">local</span>:</span><br><span class="line">        path: /var/vd/vol1/</span><br><span class="line">  nodeAffinity:</span><br><span class="line">        required:</span><br><span class="line">          nodeSelectorTerms:</span><br><span class="line">          - matchExpressions:</span><br><span class="line">                - key: kubernetes.io/hostname</span><br><span class="line">                  operator: In</span><br><span class="line">                  values:</span><br><span class="line">                  - openness</span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl create -f persistentLocalVolume.yaml </span></span><br><span class="line">persistentvolume/kv-pv0 created</span><br><span class="line">persistentvolume/kv-pv1 created</span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># k get pv</span></span><br><span class="line">NAME                  CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM                         STORAGECLASS    REASON   AGE</span><br><span class="line">kv-pv0                15Gi       RWO            Retain           Available                                 <span class="built_in">local</span>-storage            4s</span><br><span class="line">kv-pv1                15Gi       RWO            Retain           Available                                 <span class="built_in">local</span>-storage            4s</span><br></pre></td></tr></table></figure></li><li>上傳 vm image，建立 dv<ul><li>vm 宣告的 size 必須小於 pv 宣告的大小 (15Gi)</li><li>透過 cdi-uploadproxy 上傳 image<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># kubectl get svc -n cdi</span></span><br><span class="line">NAME              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">cdi-api           ClusterIP   10.105.96.139   &lt;none&gt;        443/TCP   27h</span><br><span class="line">cdi-uploadproxy   ClusterIP   10.106.44.64    &lt;none&gt;        443/TCP   27h</span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl virt image-upload dv centos-dv --image-path=/home/user/CentOS-7-x86_64-GenericCloud-1907.qcow2 --insecure --size=15Gi --storage-class=local-storage --uploadproxy-url=https://10.106.44.64:443</span></span><br><span class="line">DataVolume default/centos-dv created</span><br><span class="line">Waiting <span class="keyword">for</span> PVC centos-dv upload pod to be ready...</span><br><span class="line">Pod now ready</span><br><span class="line">Uploading data to https://10.106.44.64:443</span><br><span class="line"></span><br><span class="line"> 898.75 MiB / 898.75 MiB [=====================================================================================================================================================================================================================================] 100.00% 2m19s</span><br><span class="line"></span><br><span class="line">Uploading data completed successfully, waiting <span class="keyword">for</span> processing to complete, you can hit ctrl-c without interrupting the progress</span><br><span class="line">Processing completed successfully</span><br><span class="line">Uploading /home/user/CentOS-7-x86_64-GenericCloud-1907.qcow2 completed successfully</span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl get dv</span></span><br><span class="line">NAME        PHASE         PROGRESS   AGE</span><br><span class="line">centos-dv   UploadReady              2m24s</span><br></pre></td></tr></table></figure></li></ul></li><li>安裝 vm<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># cat statefullVM.yaml</span></span><br><span class="line">apiVersion: kubevirt.io/v1alpha3</span><br><span class="line">kind: VirtualMachine</span><br><span class="line">metadata:</span><br><span class="line">  name: centos-vm</span><br><span class="line">spec:</span><br><span class="line">  running: <span class="literal">false</span></span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        kubevirt.io/domain: centos-vm</span><br><span class="line">    spec:</span><br><span class="line">      domain:</span><br><span class="line">        cpu:</span><br><span class="line">          cores: 2</span><br><span class="line">        devices:</span><br><span class="line">          disks:</span><br><span class="line">          - disk:</span><br><span class="line">              bus: virtio</span><br><span class="line">            name: rootfs</span><br><span class="line">          interfaces:</span><br><span class="line">          - name: default</span><br><span class="line">            bridge: &#123;&#125;</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            memory: 4096M</span><br><span class="line">      networks:</span><br><span class="line">      - name: default</span><br><span class="line">        pod: &#123;&#125;</span><br><span class="line">      volumes:</span><br><span class="line">        - name: rootfs</span><br><span class="line">          persistentVolumeClaim:</span><br><span class="line">            claimName: centos-dv</span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl create -f statefullVM.yaml</span></span><br><span class="line">[root@openness user]<span class="comment"># kubectl virt start centos-vm</span></span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl get vm</span></span><br><span class="line">NAME        AGE   RUNNING   VOLUME</span><br><span class="line">centos-vm   29s   <span class="literal">true</span>      </span><br><span class="line"></span><br><span class="line">[root@openness user]<span class="comment"># kubectl get vmi</span></span><br><span class="line">NAME        AGE   PHASE     IP            NODENAME</span><br><span class="line">centos-vm   20s   Running   10.244.0.78   openness</span><br></pre></td></tr></table></figure></li><li>vm shell<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># kubectl virt console centos-vm</span></span><br><span class="line">[root@openness user]<span class="comment"># ssh 10.244.0.78</span></span><br></pre></td></tr></table></figure></li><li>建立 service for cdi-uploadproxy<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line"> name: cdi-uploadproxy-nodeport</span><br><span class="line"> namespace: cdi</span><br><span class="line"> labels:</span><br><span class="line">   cdi.kubevirt.io: <span class="string">"cdi-uploadproxy"</span></span><br><span class="line">spec:</span><br><span class="line"> <span class="built_in">type</span>: NodePort</span><br><span class="line"> ports:</span><br><span class="line">   - port: 443</span><br><span class="line">     targetPort: 8443</span><br><span class="line">     nodePort: 31001</span><br><span class="line">     protocol: TCP</span><br><span class="line"> selector:</span><br><span class="line">   cdi.kubevirt.io: cdi-uploadproxy</span><br></pre></td></tr></table></figure></li><li>設定 vm 使用 dedicated CPU<ul><li>dedicatedCpuPlacement 設定 vm 使用 dedicated CPU</li><li>isolateEmulatorThread 設定 qemu 也執行在 dedicated CPU<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># cat statefullVM.yaml</span></span><br><span class="line">...</span><br><span class="line">    spec:</span><br><span class="line">      domain:</span><br><span class="line">        cpu:</span><br><span class="line">          cores: 2</span><br><span class="line">          dedicatedCpuPlacement: <span class="literal">true</span></span><br><span class="line">          isolateEmulatorThread: <span class="literal">true</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul></li><li>設定了 dedicated CPU後，觀察 pod 的 description，可以發現有 cpumanager=true<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># kubectl describe pod virt-launcher-centos-vm-r9qxw</span></span><br><span class="line">...</span><br><span class="line">Node-Selectors:    cpumanager=<span class="literal">true</span></span><br><span class="line">                   kubevirt.io/schedulable=<span class="literal">true</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li>edge node 預設不會有 cpumanager 的 label，在啟動 vmi 時會有以下錯誤<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Events:</span><br><span class="line">  Type     Reason            Age        From               Message</span><br><span class="line">  ----     ------            ----       ----               -------</span><br><span class="line">  Warning  FailedScheduling  &lt;unknown&gt;  default-scheduler  0/1 nodes are available: 1 node(s) didn&apos;t match node selector.</span><br><span class="line">  Warning  FailedScheduling  &lt;unknown&gt;  default-scheduler  0/1 nodes are available: 1 node(s) didn&apos;t match node selector.</span><br><span class="line">  Warning  FailedScheduling  &lt;unknown&gt;  default-scheduler  0/1 nodes are available: 1 node(s) didn&apos;t match node selector.</span><br></pre></td></tr></table></figure></li><li>新增 node 的 label<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@openness user]<span class="comment"># kubectl label nodes openness cpumanager=true</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> Kubevirt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vmx</title>
      <link href="/posts/21b02114/"/>
      <url>/posts/21b02114/</url>
      
        <content type="html"><![CDATA[<ol><li>檢查 cpu 是否支持虛擬化<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ lscpu | grep vmx</span><br><span class="line">Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc eagerfpu pni pclmulqdq vmx ssse3 cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single tpr_shadow flexpriority fsgsbase avx2 invpcid rdseed clflushopt md_clear flush_l1d</span><br></pre></td></tr></table></figure></li><li>確認 kvm 是否加載<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ lsmod | grep kvm</span><br><span class="line">kvm_intel             188768  0 </span><br><span class="line">kvm                   649506  1 kvm_intel</span><br><span class="line">irqbypass              13503  2 kvm,vfio_pci</span><br><span class="line">$  ll /dev/kvm</span><br><span class="line">crw-rw-rw-. 1 root root 10, 232 Sep  6 20:42 /dev/kvm</span><br></pre></td></tr></table></figure></li><li>resources on Kubernetes for OpenNESS<br>如果 vm 不支援 VT-x，allocatable 的 devices.kubevirt.io/kvm 數量會顯示 “0”<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get node -o yaml</span><br><span class="line">...</span><br><span class="line">  status:</span><br><span class="line">    allocatable:</span><br><span class="line">      devices.kubevirt.io/kvm: <span class="string">"110"</span></span><br><span class="line">      devices.kubevirt.io/tun: <span class="string">"110"</span></span><br><span class="line">      devices.kubevirt.io/vhost-net: <span class="string">"110"</span></span><br><span class="line">    capacity:</span><br><span class="line">      devices.kubevirt.io/kvm: <span class="string">"110"</span></span><br><span class="line">      devices.kubevirt.io/tun: <span class="string">"110"</span></span><br><span class="line">      devices.kubevirt.io/vhost-net: <span class="string">"110"</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li>Settings of VirtualBox<ul><li>VirtualBox的版本必須更新到 6.1 以上</li><li>預設 “啟用 Nested VT-x/AMD-V(V)” 的選項是反灰，不能選擇的<br><img src="/posts/21b02114/virtualbox_01.JPG" alt></li><li>使用指令去設定<br><code>VBoxManage.exe modifyvm vm-name --nested-hw-virt on</code></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>update_go_version</title>
      <link href="/posts/606eb6c7/"/>
      <url>/posts/606eb6c7/</url>
      
        <content type="html"><![CDATA[<ol start="0"><li>Information of go<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ go version</span><br><span class="line">go version go1.12.13 linux/amd64</span><br><span class="line">$ echo $GOROOT</span><br><span class="line">/usr/local/go</span><br></pre></td></tr></table></figure></li><li>Delete old version<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm -rf $GOROOT</span><br></pre></td></tr></table></figure></li><li>Download target go version<br><a href="https://golang.org/dl/" target="_blank" rel="noopener">https://golang.org/dl/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://golang.org/dl/go1.15.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li>Install<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tar -C /usr/local -xzf go1.15.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> CentOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Telemetry Aware Scheduler</title>
      <link href="/posts/195363fe/"/>
      <url>/posts/195363fe/</url>
      
        <content type="html"><![CDATA[<ul><li>TAS 包含兩個 container<ul><li>tasext<br>a TAS Scheduler Extender which is an extension to K8s scheduler</li><li>tascont<br>a TAS Policy Controller which consumes TAS policies</li></ul></li><li>Create a secret that allows contact with TAS<br>In a production cluster, these certs should be set up as per normal cluster security policy.<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret tls extender-secret --cert /etc/kubernetes/pki/ca.crt --key /etc/kubernetes/pki/ca.key</span><br></pre></td></tr></table></figure>Error message in tasext<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 00:45:41 http: TLS handshake error from 10.0.2.15:35194: remote error: tls: unknown certificate authority\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T00:45:41.423020853Z&quot;&#125;</span><br></pre></td></tr></table></figure></li><li>Update the configuration of the core K8s scheduler to configure a cluster for TAS deployment<br>主要是在 <code>scheduler-extender-configmap.yaml</code> 更新 <code>tas-service ip</code><ul><li>tas-service information<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NAME                       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                       AGE</span><br><span class="line">tas-service                ClusterIP   10.104.110.87    &lt;none&gt;        9001/TCP                      23h</span><br></pre></td></tr></table></figure></li><li>configure-scheduler.sh<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MANIFEST_FILE=/etc/kubernetes/manifests/kube-scheduler.yaml</span><br><span class="line">CONFIG_MAP=scheduler-extender-configmap.yaml</span><br><span class="line">CLUSTER_ROLE=configmap-getter.yaml</span><br><span class="line"></span><br><span class="line">kubectl apply -f $CONFIG_MAP</span><br><span class="line">kubectl apply -f $CLUSTER_ROLE</span><br><span class="line">kubectl create clusterrolebinding scheduler-config-map --clusterrole=configmapgetter --user=system:kube-scheduler</span><br><span class="line"></span><br><span class="line">sed -i &apos;/^    - --policy-configmap/d&apos; $MANIFEST_FILE</span><br><span class="line">sed -i &apos;/^  dnsPolicy: ClusterFirstWithHostNet/d&apos; $MANIFEST_FILE</span><br><span class="line">sed -e &quot;/    - kube-scheduler/a\\</span><br><span class="line">    - --policy-configmap=scheduler-extender-policy\n    - --policy-configmap-namespace=kube-system&quot; $MANIFEST_FILE -i</span><br><span class="line">sed -e &quot;/spec/a\\</span><br><span class="line">  dnsPolicy: ClusterFirstWithHostNet&quot; $MANIFEST_FILE -i</span><br></pre></td></tr></table></figure></li><li>configmap-getter.yaml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  name: configmapgetter</span><br><span class="line">  namespace: kube-system </span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;configmaps&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;]</span><br></pre></td></tr></table></figure></li><li>scheduler-extender-configmap.yaml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: scheduler-extender-policy</span><br><span class="line">  namespace: kube-system</span><br><span class="line">data:</span><br><span class="line">  policy.cfg: |</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;kind&quot; : &quot;Policy&quot;,</span><br><span class="line">        &quot;apiVersion&quot; : &quot;v1&quot;,</span><br><span class="line">        &quot;extenders&quot; : [</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;urlPrefix&quot;: &quot;https://10.104.110.87:9001&quot;,</span><br><span class="line">              &quot;apiVersion&quot;: &quot;v1&quot;,</span><br><span class="line">              &quot;prioritizeVerb&quot;: &quot;scheduler/prioritize&quot;,</span><br><span class="line">              &quot;filterVerb&quot;: &quot;scheduler/filter&quot;,</span><br><span class="line">              &quot;weight&quot;: 1,</span><br><span class="line">              &quot;enableHttps&quot;: true,</span><br><span class="line">              &quot;managedResources&quot;: [</span><br><span class="line">                   &#123;</span><br><span class="line">                     &quot;name&quot;: &quot;telemetry/scheduling&quot;,</span><br><span class="line">                     &quot;ignoredByScheduler&quot;: true</span><br><span class="line">                   &#125;</span><br><span class="line">              ],</span><br><span class="line">              &quot;ignorable&quot;: true</span><br><span class="line">          &#125;</span><br><span class="line">         ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>apply<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ./configure-scheduler.sh</span><br><span class="line">configmap/scheduler-extender-policy configured</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/configmapgetter unchanged</span><br><span class="line">Error from server (AlreadyExists): clusterrolebindings.rbac.authorization.k8s.io &quot;scheduler-config-map&quot; already exists</span><br></pre></td></tr></table></figure></li></ul></li><li>Create TASPolicy<ul><li>get available metric<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get --raw /apis/custom.metrics.k8s.io/v1beta1 | jq .</span><br></pre></td></tr></table></figure></li><li>get value of target metric<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get --raw /apis/custom.metrics.k8s.io/v1beta1/nodes/*/memory_MemFree_bytes | jq .</span><br></pre></td></tr></table></figure></li><li>policy.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: telemetry.intel.com/v1alpha1</span><br><span class="line">kind: TASPolicy</span><br><span class="line">metadata:</span><br><span class="line">  name: demo-policy</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  strategies:</span><br><span class="line">    deschedule:</span><br><span class="line">      rules:</span><br><span class="line">      - metricname: memory_MemFree_bytes</span><br><span class="line">        operator: LessThan</span><br><span class="line">        target: 10000000</span><br><span class="line">    dontschedule:</span><br><span class="line">      rules:</span><br><span class="line">      - metricname: memory_MemFree_bytes</span><br><span class="line">        operator: LessThan</span><br><span class="line">        target: 1000000</span><br><span class="line">    scheduleonmetric:</span><br><span class="line">      rules:</span><br><span class="line">      - metricname: memory_MemFree_bytes</span><br><span class="line">        operator: GreaterThan</span><br></pre></td></tr></table></figure></li><li>log of adding a policy in tascont<br>會一直去 monitor memory_MemFree_bytes 的值<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 registering scheduleonmetric from demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.856944522Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Adding strategies: scheduleonmetric demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.856986479Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Added memory_MemFree_bytes\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.856995355Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 registering dontschedule from demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857002389Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Adding strategies: dontschedule demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857008778Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Added memory_MemFree_bytes\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857014218Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 registering deschedule from demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857019374Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Adding strategies: deschedule demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857024892Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Added memory_MemFree_bytes\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.85703006Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:50 Added policy, demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:50.857034987Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:52 Evaluating demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:52.302196222Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:52 no metric memory_MemFree_bytes found\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:52.302220044Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:54 Evaluating demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:54.38687469Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:54 openness memory_MemFree_bytes = 194686976\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:54.3869245Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 Evaluating demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.303365136Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 openness memory_MemFree_bytes = 194686976\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.303406196Z&quot;&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>log of deleting a policy in tascont<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 Removed demo-policy: deschedule from strategy register\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.865109714Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 Removed demo-policy: scheduleonmetric from strategy register\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.865133184Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 Removed demo-policy: dontschedule from strategy register\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.865155074Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 deletingpolicies/default/demo-policy\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.865158043Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:02:56 Policy:  demo-policy  deleted\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:02:56.865160837Z&quot;&#125;</span><br></pre></td></tr></table></figure></li><li>Linking a workload to a policy<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: demo-app</span><br><span class="line">  labels:</span><br><span class="line">    app: demo</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: demo</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: demo</span><br><span class="line">        telemetry-policy: demo-policy</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: nginx:latest</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            telemetry/scheduling: 1</span><br><span class="line">      affinity:</span><br><span class="line">        nodeAffinity:</span><br><span class="line">          requiredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">            nodeSelectorTerms:</span><br><span class="line">              - matchExpressions:</span><br><span class="line">                  - key: demo-policy</span><br><span class="line">                    operator: NotIn</span><br><span class="line">                    values:</span><br><span class="line">                      - violating</span><br></pre></td></tr></table></figure><ul><li>log of adding a pod with demo-policy in tasext<ul><li>允許部署<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:05:04 filter request recieved\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:05:04.323434954Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:05:04 openness memory_MemFree_bytes = 160436224\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:05:04.332601831Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:05:04 Filtered nodes for demo-policy : openness \n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:05:04.332642768Z&quot;&#125;</span><br></pre></td></tr></table></figure></li><li>不允許部署<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:07:11 filter request recieved\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:07:11.429996533Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:07:11 openness memory_MemFree_bytes = 147173376\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:07:11.433672095Z&quot;&#125;</span><br><span class="line">&#123;&quot;log&quot;:&quot;2020/08/28 09:07:11 openness violating : memory_MemFree_bytes LessThan 5000000000\n&quot;,&quot;stream&quot;:&quot;stderr&quot;,&quot;time&quot;:&quot;2020-08-28T09:07:11.433697985Z&quot;&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>不允許部署時，Events of the demo-app pod<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Events:</span><br><span class="line">  Type     Reason            Age        From               Message</span><br><span class="line">  ----     ------            ----       ----               -------</span><br><span class="line">  Warning  FailedScheduling  &lt;unknown&gt;  default-scheduler  0/1 nodes are available: 1 Node violates.</span><br></pre></td></tr></table></figure></li></ul></li><li>Deploy and Configure Kubernetes Descheduler<ul><li>Install descheduler<br>module requires Go 1.15<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/kubernetes-sigs/descheduler</span><br><span class="line">$ <span class="built_in">cd</span> descheduler</span><br><span class="line">$ make</span><br><span class="line">$ cp ./_output/bin/descheduler /usr/bin</span><br></pre></td></tr></table></figure></li><li>Run the descheduler in order to stop the workloads on the offending nodes<ul><li>descheduler-policy.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cat descheduler-policy.yaml</span><br><span class="line">apiVersion: <span class="string">"descheduler/v1alpha1"</span></span><br><span class="line">kind: <span class="string">"DeschedulerPolicy"</span></span><br><span class="line">strategies:</span><br><span class="line">  <span class="string">"RemovePodsViolatingNodeAffinity"</span>:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    params:</span><br><span class="line">      nodeAffinityType:</span><br><span class="line">        - <span class="string">"requiredDuringSchedulingIgnoredDuringExecution"</span></span><br></pre></td></tr></table></figure></li><li>Apply<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ descheduler --logtostderr -v4 --kubeconfig=$HOME/.kube/config --policy-config-file=descheduler-policy.yaml</span><br></pre></td></tr></table></figure></li><li>Error<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I0828 10:47:32.515718   29836 node.go:45] node lister returned empty list, now fetch directly</span><br><span class="line">I0828 10:47:32.531210   29836 descheduler.go:106] The cluster size is 0 or 1 meaning eviction causes service disruption or degradation. So aborting..</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li>Reference<br><a href="https://github.com/intel/telemetry-aware-scheduling" target="_blank" rel="noopener">https://github.com/intel/telemetry-aware-scheduling</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deployment nginx on k8s</title>
      <link href="/posts/9c134f6f/"/>
      <url>/posts/9c134f6f/</url>
      
        <content type="html"><![CDATA[<ul><li>create a namespace<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vim namespace.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: demo</span><br><span class="line">$ kubectl create -f namespace.yml</span><br></pre></td></tr></table></figure></li><li>create a pod<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ vim pod.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-pod</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx-label</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">$ kubectl create -f pod.yml -n demo</span><br></pre></td></tr></table></figure></li><li>create a deployment<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ cat deployment.yaml</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx-label</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx-label</span><br><span class="line">    spec:</span><br><span class="line">      containers: </span><br><span class="line">        - name: nginx</span><br><span class="line">          image: nginx</span><br><span class="line">          ports:</span><br><span class="line">          - containerPort: 80</span><br><span class="line">$ kubectl create -f deployment.yml -n demo</span><br></pre></td></tr></table></figure></li><li>create a service<ul><li>selector 設定成 pod 的 label，代表 service 為這單一個 pod 提供封裝</li><li>selector 設定為 deployment 的 label，代表 service 對這些 Replica Set 提供封裝以及 load balance<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ vim service.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-service</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: 9527</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">  externalIPs:</span><br><span class="line">  - 10.60.6.49</span><br><span class="line">  selector: </span><br><span class="line">    app: nginx-label</span><br><span class="line">$ kubectl create -f service.yml -n demo</span><br></pre></td></tr></table></figure></li></ul></li><li>web page<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.60.6.49:9527</span><br></pre></td></tr></table></figure></li><li>get information<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pod -n=demo</span><br><span class="line">NAME                                READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-deployment-58864f7df9-26tfx   1/1     Running   0          13m</span><br><span class="line">nginx-deployment-58864f7df9-dqcqv   1/1     Running   0          13m</span><br><span class="line">nginx-deployment-58864f7df9-sb9ks   1/1     Running   0          13m</span><br><span class="line">nginx-pod                           1/1     Running   0          13m</span><br><span class="line"></span><br><span class="line">$ kubectl get deployment -n=demo</span><br><span class="line">NAME               READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">nginx-deployment   3/3     3            3           13m</span><br><span class="line"></span><br><span class="line">$ kubectl get service -n=demo</span><br><span class="line">NAME            TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE</span><br><span class="line">nginx-service   NodePort   10.111.31.254   10.60.6.49    9527:31755/TCP   13m</span><br></pre></td></tr></table></figure></li><li>直接將 pod 的 port forwarding 到 host<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl -n demo port-forward --address 0.0.0.0 pod/nginx-pod 9528:80</span><br></pre></td></tr></table></figure><ul><li>web page<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.60.6.49:9528</span><br></pre></td></tr></table></figure></li></ul></li><li>scenario<ul><li>Pod + Service</li><li>Deployment + Service</li><li>Pod + Deployment + Service</li></ul></li><li>Reference<br><a href="https://zhuanlan.zhihu.com/p/134637095" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/134637095</a><br><a href="https://phoenixnap.com/kb/kubectl-port-forward" target="_blank" rel="noopener">https://phoenixnap.com/kb/kubectl-port-forward</a><br><a href="https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/" target="_blank" rel="noopener">https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes Commands</title>
      <link href="/posts/61268ed9/"/>
      <url>/posts/61268ed9/</url>
      
        <content type="html"><![CDATA[<ul><li>sample yaml: web.yaml<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">frontend</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">19999</span></span><br></pre></td></tr></table></figure></li><li>建立 pod<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash-4.2# kubectl apply -f web.yaml </span><br><span class="line">pod/web created</span><br></pre></td></tr></table></figure></li><li>Get information<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash-4.2# kubectl get pods</span><br><span class="line">NAME                            READY   STATUS    RESTARTS   AGE</span><br><span class="line">web                             1/1     Running   0          41s</span><br></pre></td></tr></table></figure></li><li>刪除 pod<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash-4.2# kubectl delete pod web</span><br><span class="line">pod &quot;web&quot; deleted</span><br></pre></td></tr></table></figure></li></ul><p>kubectl create<br>It first deletes the resources and then creates it from the file provided.<br>kubectl apply<br>It directly updates in the current live source, only the attributes which are given in the file.</p><p>kubectl get pods –show-labels</p><p>kubectl exec -it web – /bin/bash</p><p>当 Pod 包含多个容器时打开 shell<br>kubectl exec -it my-pod –container my-app – /bin/bash</p><p>沒有 namespace 的元件，利用 <code>kubectl get pod</code> 查詢<br>有 namespace 的元件，要利用 <code>kubectl get pod --all-namespaces</code> 查詢</p><p>kubectl get pod<br>kubectl get pod –all-namespaces<br>kubectl get pod -o wide –all-namespaces<br>kubectl get service<br>kubectl get svc<br>kubectl get namespace<br>kubectl get deployment</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NUMA</title>
      <link href="/posts/4261b1b3/"/>
      <url>/posts/4261b1b3/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Socket: 實體 CPU 的數量，一般 PC 只會有一個 CPU，伺服器等級的 Server 在硬體上才會有多個 CPUs</p></li><li><p>Core: CPU 裡獨立的一組程式執行的硬體單元</p></li><li><p>Thread: Core 裡邏輯的執行單元</p></li><li><p>Sample</p><ul><li>有 1 個 CPU，每個 CPU 上有 4 Core，每個 Core 有 1 個 Threads<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ lscpu</span><br><span class="line">Thread(s) per core:  1</span><br><span class="line">Core(s) per socket:  4</span><br><span class="line">Socket(s):           1</span><br><span class="line">NUMA node(s):        1</span><br><span class="line">NUMA node0 CPU(s):   0-3</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用 lstopo 套件來獲取資訊</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo apt install hwloc</span><br><span class="line">user@ubuntu:~$ lstopo</span><br><span class="line">Machine (7977MB)</span><br><span class="line">  Package L#0</span><br><span class="line">    L3 L#0 (8192KB) + L2 L#0 (256KB) + L1d L#0 (32KB) + L1i L#0 (32KB) + Core L#0 + PU L#0 (P#0)</span><br><span class="line">    L3 L#1 (8192KB) + L2 L#1 (256KB) + L1d L#1 (32KB) + L1i L#1 (32KB) + Core L#1 + PU L#1 (P#1)</span><br><span class="line">    L3 L#2 (8192KB) + L2 L#2 (256KB) + L1d L#2 (32KB) + L1i L#2 (32KB) + Core L#2 + PU L#2 (P#2)</span><br><span class="line">    L3 L#3 (8192KB) + L2 L#3 (256KB) + L1d L#3 (32KB) + L1i L#3 (32KB) + Core L#3 + PU L#3 (P#3)</span><br><span class="line">  HostBridge L#0</span><br><span class="line">    PCI 80ee:beef</span><br><span class="line">      GPU L#0 &quot;controlD64&quot;</span><br><span class="line">      GPU L#1 &quot;card0&quot;</span><br><span class="line">    PCI 8086:100e</span><br><span class="line">      Net L#2 &quot;em1&quot;</span><br><span class="line">    PCI 8086:100e</span><br><span class="line">      Net L#3 &quot;em2&quot;</span><br><span class="line">    PCI 8086:2829</span><br><span class="line">      Block(Disk) L#4 &quot;sda&quot;</span><br><span class="line">      Block(Removable Media Device) L#5 &quot;sr0&quot;</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ lstopo --of png &gt; server.png</span><br></pre></td></tr></table></figure><p><img src="/posts/4261b1b3/server.png" alt></p></li><li><p>使用 numactl 套件來獲取資訊</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo apt install numactl</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ numactl --hardware</span><br><span class="line">available: 1 nodes (0)</span><br><span class="line">node 0 cpus: 0 1 2 3</span><br><span class="line">node 0 size: 7976 MB</span><br><span class="line">node 0 free: 5907 MB</span><br><span class="line">node distances:</span><br><span class="line">node   0 </span><br><span class="line">  0:  10 </span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ numactl --show</span><br><span class="line">policy: default</span><br><span class="line">preferred node: current</span><br><span class="line">physcpubind: 0 1 2 3 </span><br><span class="line">cpubind: 0 </span><br><span class="line">nodebind: 0 </span><br><span class="line">membind: 0</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
            <tag> NUMA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPU Information</title>
      <link href="/posts/e3a8a05c/"/>
      <url>/posts/e3a8a05c/</url>
      
        <content type="html"><![CDATA[<h5 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ lscpu</span><br><span class="line">Architecture:          x86_64</span><br><span class="line">CPU op-mode(s):        32-bit, 64-bit</span><br><span class="line">Byte Order:            Little Endian</span><br><span class="line">CPU(s):                8</span><br><span class="line">On-line CPU(s) list:   0-7</span><br><span class="line">Thread(s) per core:    1</span><br><span class="line">Core(s) per socket:    1</span><br><span class="line">Socket(s):             8</span><br><span class="line">NUMA node(s):          1</span><br><span class="line">Vendor ID:             GenuineIntel</span><br><span class="line">CPU family:            6</span><br><span class="line">Model:                 79</span><br><span class="line">Model name:            Intel(R) Xeon(R) CPU E5-2630 v4 @ 2.20GHz</span><br><span class="line">Stepping:              1</span><br><span class="line">CPU MHz:               2195.109</span><br><span class="line">BogoMIPS:              4396.04</span><br><span class="line">Hypervisor vendor:     Xen</span><br><span class="line">Virtualization type:   full</span><br><span class="line">L1d cache:             32K</span><br><span class="line">L1i cache:             32K</span><br><span class="line">L2 cache:              256K</span><br><span class="line">L3 cache:              25600K</span><br><span class="line">NUMA node0 CPU(s):     0-7</span><br><span class="line">Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush acpi mmx fxsr sse sse2 ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti intel_ppin fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm rdseed adx smap xsaveopt</span><br></pre></td></tr></table></figure><h5 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h5><ul><li>Get information<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ wmic</span><br><span class="line">wmic:root\cli&gt;cpu get Name</span><br><span class="line">Name</span><br><span class="line">Intel(R) Core(TM) i7-8550U CPU @ 1.80GHz</span><br><span class="line"></span><br><span class="line">wmic:root\cli&gt;cpu get NumberOfCores</span><br><span class="line">NumberOfCores</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line">wmic:root\cli&gt;cpu get NumberOfLogicalProcessors</span><br><span class="line">NumberOfLogicalProcessors</span><br><span class="line">8</span><br></pre></td></tr></table></figure></li><li>有一個 CPU，CPU 上有 4 Cores，每個 Core 有兩個 Threads，所以邏輯上總共有 8 核可以使用<br>對應到 Socket, Core, Thread 的結果為<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Thread(s) per core:    2</span><br><span class="line">Core(s) per socket:    4</span><br><span class="line">Socket(s):             1</span><br></pre></td></tr></table></figure></li><li>Get detail information of CPU<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wmic:root\cli&gt;cpu get</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS Notes</title>
      <link href="/posts/645e3264/"/>
      <url>/posts/645e3264/</url>
      
        <content type="html"><![CDATA[<ul><li>網路介片卡</li></ul><ol><li>NAT</li><li>「僅限主機」 介面卡</li></ol><ul><li><p>設定 sudo 權限<br>錯誤訊息: user is not in the sudoers file.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[user@localhost ~]# su root</span><br><span class="line">[user@localhost ~]# vi /etc/sudoers</span><br><span class="line">+ user ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure></li><li><p>設定網路<br>錯誤訊息: cannot find a valid baseurl for repo: base/7/x86_64</p><ul><li>原始設定<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[user@localhost ~]# ip addr</span><br><span class="line">1: lo:  &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: enp0s3:  &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 08:00:27:2b:73:d4 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">3: enp0s8:  &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 08:00:27:c1:72:7d brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure></li><li>修改 <code>ONBOOT=yes</code> 讓網卡在開機時生效<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[user@localhost ~]# sudo vi /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br><span class="line">[user@localhost ~]# sudo vi /etc/sysconfig/network-scripts/ifcfg-enp0s8</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=enp0s3</span><br><span class="line">UUID=baa08a94-1e59-4a41-aa4a-5ad463c51796</span><br><span class="line">DEVICE=enp0s3</span><br><span class="line">ONBOOT=no</span><br></pre></td></tr></table></figure></li><li>重啟網路<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[user@localhost ~]# sudo service network restart</span><br></pre></td></tr></table></figure></li></ul></li><li><p>更新<br>sudo yum update</p></li><li><p>常用工具<br>sudo yum install openssh git net-tools</p></li><li><p>增加 root 磁區大小</p></li></ul><ol><li>先增加 vdi 配置的 disk 大小</li><li>重新設定 root 磁區<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]# fdisk /dev/sda</span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Command (m for help): n</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (2 primary, 0 extended, 2 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (3,4, default 3): 3</span><br><span class="line">First sector (209715200-629145599, default 209715200): 209715200</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (209715200-629145599, default 629145599): 629145599</span><br><span class="line">Partition 3 of type Linux and of size 200 GiB is set</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line"></span><br><span class="line">WARNING: Re-reading the partition table failed with error 16: Device or resource busy.</span><br><span class="line">The kernel still uses the old table. The new table will be used at</span><br><span class="line">the next reboot or after you run partprobe(8) or kpartx(8)</span><br><span class="line">Syncing disks.</span><br><span class="line"></span><br><span class="line">[root@centos ~]$ reboot</span><br><span class="line">[root@centos ~]$ df -h</span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs                 5.4G     0  5.4G   0% /dev</span><br><span class="line">tmpfs                    5.4G     0  5.4G   0% /dev/shm</span><br><span class="line">tmpfs                    5.4G  8.6M  5.4G   1% /run</span><br><span class="line">tmpfs                    5.4G     0  5.4G   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root   50G   32G   19G  64% /</span><br><span class="line">/dev/sda1               1014M  220M  795M  22% /boot</span><br><span class="line">/dev/mapper/centos-home   45G  7.2G   37G  17% /home</span><br><span class="line">tmpfs                    1.1G     0  1.1G   0% /run/user/1000</span><br><span class="line">[root@centos ~]$</span><br><span class="line">[root@centos ~]# pvcreate /dev/sda3</span><br><span class="line">  Physical volume &quot;/dev/sda3&quot; successfully created.</span><br><span class="line">[root@centos ~]# vgextend centos /dev/sda3</span><br><span class="line">  Volume group &quot;centos&quot; successfully extended</span><br><span class="line">[root@centos ~]# lvextend /dev/mapper/centos-root /dev/sda3</span><br><span class="line">  Size of logical volume centos/root changed from 50.00 GiB (12800 extents) to &lt;250.00 GiB (63999 extents).</span><br><span class="line">  Logical volume centos/root successfully resized.</span><br><span class="line">[root@centos ~]# xfs_growfs /dev/mapper/centos-root</span><br><span class="line">meta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=3276800 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=13107200, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line">log      =internal               bsize=4096   blocks=6400, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 13107200 to 65534976</span><br><span class="line">[root@centos ~]$</span><br><span class="line">[root@centos ~]$ df -h</span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs                 5.4G     0  5.4G   0% /dev</span><br><span class="line">tmpfs                    5.4G     0  5.4G   0% /dev/shm</span><br><span class="line">tmpfs                    5.4G   13M  5.4G   1% /run</span><br><span class="line">tmpfs                    5.4G     0  5.4G   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root  250G   33G  218G  13% /</span><br><span class="line">/dev/sda1               1014M  220M  795M  22% /boot</span><br><span class="line">/dev/mapper/centos-home   45G  7.2G   37G  17% /home</span><br><span class="line">tmpfs                    1.1G     0  1.1G   0% /run/user/1000</span><br></pre></td></tr></table></figure></li></ol><ul><li>Trouble shooting<br>在輸入指令時，系統有時會提示：<br>You have new mail in /var/spool/mail/root<br>這是因為在 cron 中執行的腳本有輸出導致的，cron 會把輸出內容發郵件給目前用戶<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/2 * * * * /etc/test.sh &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> CentOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes Notes</title>
      <link href="/posts/d597c8d0/"/>
      <url>/posts/d597c8d0/</url>
      
        <content type="html"><![CDATA[<p><img src="/posts/d597c8d0/image_01.jpg" alt></p><h3 id="四大元件"><a href="#四大元件" class="headerlink" title="四大元件"></a>四大元件</h3><ol><li>Pod</li><li>Worker Node</li><li>Master Node</li><li>Cluster</li></ol><h5 id="Pod"><a href="#Pod" class="headerlink" title="Pod"></a>Pod</h5><ul><li>Kubernetes 中執行的最小基本單元</li><li>一個 Pod 內可以包含一個或多個 container</li><li>同一個 Pod 中的 containers 共享相同的資源、檔案系統，並共享相同的 network namespace，可以透過 localhost 互相溝通</li></ul><h5 id="Worker-Node"><a href="#Worker-Node" class="headerlink" title="Worker Node"></a>Worker Node</h5><ul><li>Kubernetes 中執行的最小硬體單元</li><li>一個 Worker Node 至小會對應到一個 VM，或是一個虛擬的機器集合</li><li>一個 Worker Node 內包含三個元件<ul><li>kubelet: 該 Node 的管理員，負責管理該 Node 上的所有 Pods 的狀態並負責與 Master 溝通</li><li>kube-proxy : 該 Node 的傳訊員，負責更新 Node 的 iptables，讓其他 Node 的物件可以得知該 Node 上所有 Pods 的最新狀態</li><li>Container Runtime: 該 Node 真正負責容器執行的程式，以 Docker 容器為例，其對應的 Container Runtime 就是 Docker Engine</li></ul></li></ul><h5 id="Master-Node"><a href="#Master-Node" class="headerlink" title="Master Node"></a>Master Node</h5><p>負責管理 Kubernetes 系統中，所有的 Pods 跟 Worker Node，包含四個部分</p><ul><li><p>kube-apiserver<br>管理整個 Kubernetes 所需 API 的接口（Endpoint），例如從 Command Line 下 kubectl 指令就會把指令送到這裏<br>負責 Node 之間的溝通橋樑，每個 Node 彼此不能直接溝通，必須要透過 apiserver 轉介<br>負責 Kubernetes 中的請求的身份認證與授權</p></li><li><p>etcd<br>用來存放 Kubernetes Cluster 的資料作為備份，當 Master 因為某些原因而故障時，我們可以透過 etcd 幫我們還原 Kubernetes 的狀態</p></li><li><p>kube-scheduler<br>整個 Kubernetes 的 Pods 調度員，scheduler 會監視新建立但還沒有被指定要跑在哪個 Node 上的 Pod，並根據每個 Node 上面資源規定、硬體限制等條件去協調出一個最適合放置的 Node 讓該 Pod 跑</p></li><li><p>kube-controller-manager<br>負責管理並運行 Kubernetes controller 的組件，簡單來說 controller 就是 Kubernetes 裡一群負責監視 Cluster 狀態的 Process，例如：Node Controller、Replication Controller<br>這些 Process 會在 Cluster 與預期狀態（desire state）不符時嘗試更新現有狀態（current state）。例如：現在要多開一台機器以應付突然增加的流量，那我的預期狀態就會更新成 N+1，現有狀態為 N，這時相對應的 controller 就會想辦法多開一台機器<br>controller-manager 的監視與嘗試更新也都需要透過訪問 kube-apiserver 達成</p></li></ul><h5 id="Cluster"><a href="#Cluster" class="headerlink" title="Cluster"></a>Cluster</h5><p>Kubernetes 中多個 Node 與 Master 的集合，基本上可以想成在同一個環境裡所有 Node 集合在一起的單位<br>通常一個 Cluster 中會有多個 Master 作為備援</p><h5 id="Install-Pod"><a href="#Install-Pod" class="headerlink" title="Install Pod"></a>Install Pod</h5><p>當使用者要部署一個新的 Pod 到 Kubernetes Cluster 時，使用者要先透過 User Command（kubectl）輸入建立 Pod 的對應指令<br>此時指令會經過一層確認使用者身份的認證後，傳遞到 Master Node 中的 API Server，API Server 會把指令備份到 etcd<br>接下來 controller-manager 會從 API Server 收到需要創建一個新的 Pod 的訊息，並檢查如果資源許可，就會建立一個新的 Pod<br>最後 Scheduler 在定期訪問 API Server 時，會詢問 controller-manager 是否有建置新的 Pod，如果發現新建立的 Pod 時，Scheduler 就會負責把 Pod 配送到最適合的一個 Node 上面</p><ul><li>Reference<br><a href="https://medium.com/@C.W.Hu/kubernetes-basic-concept-tutorial-e033e3504ec0" target="_blank" rel="noopener">https://medium.com/@C.W.Hu/kubernetes-basic-concept-tutorial-e033e3504ec0</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gin cors</title>
      <link href="/posts/9782a6cf/"/>
      <url>/posts/9782a6cf/</url>
      
        <content type="html"><![CDATA[<ul><li>project/Middlewares/Cors.go<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Middlewares</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Cors</span><span class="params">()</span> <span class="title">gin</span>.<span class="title">HandlerFunc</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        method := c.Request.Method</span><br><span class="line">        origin := c.Request.Header.Get(<span class="string">"Origin"</span>)</span><br><span class="line">        <span class="keyword">if</span> origin != <span class="string">""</span> &#123;</span><br><span class="line">            c.Header(<span class="string">"Access-Control-Allow-Origin"</span>, origin)</span><br><span class="line">            c.Header(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"POST, GET, OPTIONS, PUT, DELETE, UPDATE"</span>)</span><br><span class="line">            c.Header(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"Origin, X-Requested-With, Content-Type, Accept, Authorization"</span>)</span><br><span class="line">            c.Header(<span class="string">"Access-Control-Expose-Headers"</span>, <span class="string">"Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Cache-Control, Content-Language, Content-Type"</span>)</span><br><span class="line">            c.Header(<span class="string">"Access-Control-Allow-Credentials"</span>, <span class="string">"false"</span>)</span><br><span class="line">            c.Set(<span class="string">"content-type"</span>, <span class="string">"application/json"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> method == <span class="string">"OPTIONS"</span> &#123;</span><br><span class="line">            c.AbortWithStatus(http.StatusNoContent)</span><br><span class="line">        &#125;</span><br><span class="line">        c.Next()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>project/main.go<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"project/Middlewares"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := gin.Default()</span><br><span class="line">    r.Use(Middlewares.Cors())</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World!"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.Run(<span class="string">":8888"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>new and make</title>
      <link href="/posts/7f85b3c1/"/>
      <url>/posts/7f85b3c1/</url>
      
        <content type="html"><![CDATA[<ul><li>new<ul><li>返回指標，指向分配給宣告變數的記憶體空間</li><li>會初始化宣告的變數, 如 string 會賦值為 “”，number 會賦值為 0</li><li>對於 channel, map, slice 等等, 會賦值為 nil<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">p := <span class="built_in">new</span>(<span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> v <span class="keyword">int</span></span><br><span class="line">p := &amp;v</span><br><span class="line"></span><br><span class="line">person := <span class="built_in">new</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">person[<span class="string">"name"</span>] = <span class="string">"John"</span> <span class="comment">// invalid operation: people["name"] (type *map[string]interface &#123;&#125; does not support indexing)</span></span><br></pre></td></tr></table></figure></li></ul></li><li>make<ul><li>不會返回指標</li><li>用來初始化數據結構，包含 channel, map, slice, etc.<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slice := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>, <span class="number">100</span>)</span><br><span class="line">hash := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">bool</span>, <span class="number">10</span>)</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Package exec</title>
      <link href="/posts/2c493017/"/>
      <url>/posts/2c493017/</url>
      
        <content type="html"><![CDATA[<ul><li>import<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"os/exec"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>func (*Cmd) Output<br><code>Output</code> runs the command and returns its standard output.<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"cat"</span>, <span class="string">"text"</span>)</span><br><span class="line">out, err := cmd.Output()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;                      </span><br><span class="line">fmt.Printf(<span class="string">"output: %s\n"</span>, <span class="keyword">string</span>(out))</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error: exit status 1</span><br><span class="line">output:</span><br></pre></td></tr></table></figure></li></ul></li><li>func (c *Cmd) CombinedOutput() ([]byte, error)<br><code>CombinedOutput</code> runs the command and returns its combined standard output and standard error.<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"cat"</span>, <span class="string">"text"</span>)</span><br><span class="line">out, err := cmd.CombinedOutput()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;                      </span><br><span class="line">fmt.Printf(<span class="string">"output: %s\n"</span>, <span class="keyword">string</span>(out))</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error: exit status 1</span><br><span class="line">output: cat: text: No such file or directory</span><br></pre></td></tr></table></figure></li></ul></li><li>func (*Cmd) Run<br><code>Run</code> starts the specified command and waits for it to complete.<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"sleep"</span>, <span class="string">"1"</span>)</span><br><span class="line">fmt.Println(<span class="string">"Running command and waiting for it to finish..."</span>)</span><br><span class="line">err := cmd.Run()</span><br><span class="line">fmt.Printf(<span class="string">"Command finished with error: %v\n"</span>, err)</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Running command and waiting for it to finish...</span><br><span class="line">Command finished with error: &lt;nil&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li>func (c *Cmd) Start() error<br><code>Start</code> starts the specified command but does not wait for it to complete.</li><li>func (c *Cmd) Wait() error<br><code>Wait</code> waits for the command to exit and waits for any copying to stdin or copying from stdout or stderr to complete.<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"sleep"</span>, <span class="string">"5"</span>)</span><br><span class="line">err := cmd.Start()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"Waiting for command to finish..."</span>)</span><br><span class="line">err = cmd.Wait()</span><br><span class="line">fmt.Printf(<span class="string">"Command finished with error: %v"</span>, err)</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ go run main.go </span><br><span class="line">Waiting for command to finish...</span><br><span class="line">Command finished with error: &lt;nil&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li>func (*Cmd) StdoutPipe<br><code>StdoutPipe</code> returns a pipe that will be connected to the command’s standard output when the command starts.<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="keyword">string</span></span><br><span class="line">    Age  <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line">cmd := exec.Command(<span class="string">"echo"</span>, <span class="string">"-n"</span>, <span class="string">`&#123;"Name": "Bob", "Age": 32&#125;`</span>)</span><br><span class="line">stdout, err := cmd.StdoutPipe()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> err := cmd.Start(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> err := json.NewDecoder(stdout).Decode(&amp;person); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> err := cmd.Wait(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;  </span><br><span class="line">fmt.Printf(<span class="string">"%s is %d years old\n"</span>, person.Name, person.Age)</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bob is 32 years old</span><br></pre></td></tr></table></figure></li></ul></li><li>將 stdout 和 stderr 分開處理<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"cat"</span>, <span class="string">"text"</span>)</span><br><span class="line"><span class="keyword">var</span> stdout, stderr bytes.Buffer</span><br><span class="line">cmd.Stdout = &amp;stdout</span><br><span class="line">cmd.Stderr = &amp;stderr</span><br><span class="line">err := cmd.Run()    </span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;     </span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;                   </span><br><span class="line">outStr, errStr := <span class="keyword">string</span>(stdout.Bytes()), <span class="keyword">string</span>(stderr.Bytes())</span><br><span class="line">fmt.Printf(<span class="string">"out: %s\nerr: %s\n"</span>, outStr, errStr)</span><br></pre></td></tr></table></figure></li><li>output<ul><li>success<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">error: exit status 1</span><br><span class="line">out: </span><br><span class="line">err: cat: text: No such file or directory</span><br></pre></td></tr></table></figure></li><li>fail<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">out: test</span><br><span class="line">err:</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li>處理 stdin<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cmd := exec.Command(<span class="string">"tr"</span>, <span class="string">"a-z"</span>, <span class="string">"A-Z"</span>)</span><br><span class="line">cmd.Stdin = strings.NewReader(<span class="string">"some input"</span>)</span><br><span class="line"><span class="keyword">var</span> out bytes.Buffer</span><br><span class="line">cmd.Stdout = &amp;out</span><br><span class="line">err := cmd.Run()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">"error: %s\n"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"in all caps: %q\n"</span>, out.String())</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in all caps: &quot;SOME INPUT&quot;</span><br></pre></td></tr></table></figure></li></ul></li><li>設定 Timeout<ul><li>Example<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ctx, cancel := context.WithTimeout(context.Background(), <span class="number">100</span>*time.Millisecond)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := exec.CommandContext(ctx, <span class="string">"sleep"</span>, <span class="string">"5"</span>).Run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="comment">// This will fail after 100 milliseconds. The 5 second sleep will be interrupted.</span></span><br><span class="line">    fmt.Println(<span class="string">"TIMEOUT"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>Reference<br><a href="https://golang.org/pkg/os/exec/" target="_blank" rel="noopener">https://golang.org/pkg/os/exec/</a><br><a href="https://colobu.com/2017/06/19/advanced-command-execution-in-Go-with-os-exec/" target="_blank" rel="noopener">https://colobu.com/2017/06/19/advanced-command-execution-in-Go-with-os-exec/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>struct, map, and json</title>
      <link href="/posts/d8b7f59e/"/>
      <url>/posts/d8b7f59e/</url>
      
        <content type="html"><![CDATA[<ul><li>struct<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"encoding/json"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name   <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//轉換成JSON時，使用 age 代替 Age</span></span><br><span class="line">    Age    <span class="keyword">int</span>    <span class="string">`json:"age"`</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//轉換成JSON時，忽略此欄位</span></span><br><span class="line">    Gender <span class="keyword">string</span> <span class="string">`json:"-"`</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//轉換成JSON時，若此欄位為空，則忽略 (若int: 0 string: ""，則也會被忽略)</span></span><br><span class="line">    Phone  <span class="keyword">string</span> <span class="string">`json:",omitempty"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    data := Person &#123;</span><br><span class="line">        Name: <span class="string">"John"</span>,</span><br><span class="line">        Age: <span class="number">30</span>,</span><br><span class="line">        Gender: <span class="string">"male"</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fmt.Println(data)</span><br><span class="line">    <span class="comment">//&#123;John 30 male &#125;</span></span><br><span class="line"></span><br><span class="line">    fmt.Printf(<span class="string">"%+v\n"</span>, data)</span><br><span class="line">    <span class="comment">//&#123;Name:John Age:30 Gender:male Phone:&#125;</span></span><br><span class="line"></span><br><span class="line">    fmt.Printf(<span class="string">"%#v\n"</span>, data)</span><br><span class="line">    <span class="comment">//main.Person&#123;Name:"John", Age:30, Gender:"male", Phone:""&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>宣告<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">p1 := &amp;Person&#123;&#125;</span><br><span class="line">p1.Name = <span class="string">"John"</span></span><br><span class="line">p1.Age = <span class="number">20</span></span><br><span class="line">fmt.Println(*p1) <span class="comment">//&#123;John 20&#125;</span></span><br><span class="line"></span><br><span class="line">p2 := <span class="built_in">new</span>(Person)</span><br><span class="line">p2.Name = <span class="string">"John"</span></span><br><span class="line">p2.Age = <span class="number">20</span></span><br><span class="line">fmt.Println(*p2) <span class="comment">//&#123;John 20&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p3 Person</span><br><span class="line">p3.Name = <span class="string">"John"</span></span><br><span class="line">p3.Age = <span class="number">20</span></span><br><span class="line">fmt.Println(p3) <span class="comment">//&#123;John 20&#125;</span></span><br></pre></td></tr></table></figure></li><li>Call by pointer<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">modify</span><span class="params">(p *Person)</span></span> &#123;</span><br><span class="line">    p.Name = <span class="string">"Bob"</span></span><br><span class="line">&#125;</span><br><span class="line">modify(p1)</span><br><span class="line">fmt.Println(*p1) <span class="comment">//&#123;Bob 20&#125;</span></span><br><span class="line"></span><br><span class="line">modify(p2)</span><br><span class="line">fmt.Println(*p2) <span class="comment">//&#123;Bob 20&#125;</span></span><br><span class="line"></span><br><span class="line">modify(&amp;p3)</span><br><span class="line">fmt.Println(p3) <span class="comment">//&#123;Bob 20&#125;</span></span><br></pre></td></tr></table></figure></li><li>Append data into struct array<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    john := Person&#123;Name:<span class="string">"John"</span>,Age:<span class="number">20</span>&#125;</span><br><span class="line">    mary := Person&#123;Name:<span class="string">"Mary"</span>,Age:<span class="number">25</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> People []Person</span><br><span class="line">    People = <span class="built_in">append</span>(People, john)</span><br><span class="line">    People = <span class="built_in">append</span>(People, mary)</span><br><span class="line">    fmt.Println(People) <span class="comment">//[&#123;John 20&#125; &#123;Mary 25&#125;]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Access data in the struct array<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">dump</span><span class="params">(People []Person)</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> id, person := <span class="keyword">range</span> People &#123;</span><br><span class="line">        <span class="comment">//可以用person，也可以用People[id]來存取資料</span></span><br><span class="line">        <span class="comment">//0: Name: John, Age: 20</span></span><br><span class="line">        <span class="comment">//1: Name: Mary, Age: 25</span></span><br><span class="line">        fmt.Printf(<span class="string">"%d: Name: %s, Age: %d\n"</span>, id, person.Name, People[id].Age)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Delete elements in a array<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> id, person := <span class="keyword">range</span> People &#123;</span><br><span class="line">    <span class="keyword">if</span> person.Name == <span class="string">"John"</span> &#123;</span><br><span class="line">        People = <span class="built_in">append</span>(People[:id], People[id+<span class="number">1</span>:]...)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>序列化 struct to json string<ul><li>func Marshal(v interface{}) ([]byte, error)<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data_json, _ := json.MarshalIndent(data, <span class="string">""</span>, <span class="string">"  "</span>)</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data_json))</span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//  "Name": "John",</span></span><br><span class="line"><span class="comment">//  "age": 30</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure></li><li>func NewEncoder(w io.Writer) *Encoder</li><li>func (enc *Encoder) Encode(v interface{}) error<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> err := json.NewEncoder(os.Stdout).Encode(&amp;data); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//stdout: &#123;"Name":"John","age":30&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li><li>反序列化 json string to struct<ul><li>func Unmarshal(data []byte, v interface{}) error<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data := []<span class="keyword">byte</span>(<span class="string">`&#123;"name" : "John" , "age" : 30&#125;`</span>)</span><br><span class="line"><span class="keyword">var</span> person Person</span><br><span class="line">json.Unmarshal(data, &amp;person)</span><br><span class="line">fmt.Println(person) <span class="comment">//&#123;John 30&#125;</span></span><br></pre></td></tr></table></figure></li><li>func NewDecoder(r io.Reader) *Decoder</li><li>func (dec *Decoder) Decode(v interface{}) error<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data := <span class="string">`&#123;"name" : "John" , "age" : 30&#125;`</span></span><br><span class="line"><span class="keyword">var</span> person Person</span><br><span class="line"><span class="keyword">if</span> err := json.NewDecoder(strings.NewReader(data)).Decode(&amp;person); err == <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(person) <span class="comment">//&#123;John 30&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>pointer items in struct<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> A <span class="keyword">struct</span> &#123;</span><br><span class="line">    Enabled <span class="keyword">int</span></span><br><span class="line">    Name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> B <span class="keyword">struct</span> &#123;</span><br><span class="line">    Enabled <span class="keyword">int</span></span><br><span class="line">    Name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Services <span class="keyword">struct</span> &#123;</span><br><span class="line">    A *A <span class="string">`json:",omitempty"`</span></span><br><span class="line">    B *B <span class="string">`json:",omitempty"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contents := []<span class="keyword">byte</span>(<span class="string">`&#123;"A":&#123;"Enabled":1,"Name":"test"&#125;,"B":&#123;"Enabled":0,"Name":"test"&#125;&#125;`</span>)</span><br><span class="line"><span class="keyword">var</span> data Services </span><br><span class="line">json.Unmarshal(contents, &amp;data)</span><br><span class="line"><span class="keyword">if</span> data.A.Enabled == <span class="number">0</span> &#123; </span><br><span class="line">    data.A = <span class="literal">nil</span> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> data.B.Enabled == <span class="number">0</span> &#123; </span><br><span class="line">    data.B = <span class="literal">nil</span> </span><br><span class="line">&#125;</span><br><span class="line">data_json, _ := json.Marshal(data)</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data_json)) <span class="comment">//&#123;"A":&#123;"Enabled":1,"Name":"test"&#125;&#125;</span></span><br></pre></td></tr></table></figure></li><li>map<ul><li>如果有一串資料 {“Name”: “John”, “Gender”: “Male”}，可以使用 map 來儲存<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>)</span><br><span class="line">data[<span class="string">"Name"</span>] = <span class="string">"John"</span></span><br><span class="line">data[<span class="string">"Gender"</span>] = <span class="string">"Male"</span></span><br><span class="line">fmt.Println(data) <span class="comment">//map[Gender:Male Name:John]</span></span><br></pre></td></tr></table></figure></li><li>如果資料中有多種不同的型別 {“Name”: “John”, “Gender”: “Male”, “Age”: 20}，可以藉由 interface{} 來處理<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">data[<span class="string">"Name"</span>] = <span class="string">"John"</span></span><br><span class="line">data[<span class="string">"Gender"</span>] = <span class="string">"Male"</span></span><br><span class="line">data[<span class="string">"Age"</span>] = <span class="number">20</span></span><br><span class="line">fmt.Println(data) <span class="comment">//map[Age:20 Gender:Male Name:John]</span></span><br></pre></td></tr></table></figure></li><li>多層取值<ul><li>存取已知的 key<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data_json := []<span class="keyword">byte</span>(<span class="string">`&#123;"Name": "John", "Age": 20, "Friend": &#123;"Name": "Mary", "Age": 25&#125;&#125;`</span>)</span><br><span class="line"><span class="keyword">var</span> data <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">json.Unmarshal(data_json, &amp;data)</span><br><span class="line"></span><br><span class="line">fmt.Println(data) <span class="comment">//map[Age:20 Friend:map[Age:25 Name:Mary] Name:John]</span></span><br><span class="line">friend := data[<span class="string">"Friend"</span>].(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">fmt.Println(friend) <span class="comment">//map[Age:25 Name:Mary]</span></span><br><span class="line">fmt.Println(<span class="string">"friend: "</span> + friend[<span class="string">"Name"</span>].(<span class="keyword">string</span>)) <span class="comment">//friend: Mary</span></span><br></pre></td></tr></table></figure></li><li>列舉所有內容<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">data_json := []<span class="keyword">byte</span>(<span class="string">`&#123;"Name": "John", "Age": 20, "BestFriend": &#123;"Name": "Mary", "Age": 25&#125;, "Friends": ["Mark", "Mike"]&#125;`</span>)</span><br><span class="line"><span class="keyword">var</span> data <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">json.Unmarshal(data_json, &amp;data)</span><br><span class="line">m := data.(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> m &#123;</span><br><span class="line">    rt := reflect.TypeOf(v)</span><br><span class="line">    <span class="keyword">if</span> rt.Kind() == reflect.Slice &#123;</span><br><span class="line">        n := v.([]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">        <span class="keyword">for</span> i, u := <span class="keyword">range</span> n &#123; </span><br><span class="line">            fmt.Println(k, i, u)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> rt.Kind() == reflect.Map &#123;</span><br><span class="line">        n := v.(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">        <span class="keyword">for</span> i, u := <span class="keyword">range</span> n &#123; </span><br><span class="line">            fmt.Println(k, i, u)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fmt.Println(k ,v)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Name John</span><br><span class="line">Age 20</span><br><span class="line">BestFriend Name Mary</span><br><span class="line">BestFriend Age 25</span><br><span class="line">Friends 0 Mark</span><br><span class="line">Friends 1 Mike</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Periodic Task</title>
      <link href="/posts/812d43/"/>
      <url>/posts/812d43/</url>
      
        <content type="html"><![CDATA[<ul><li>General goroutine<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> <span class="literal">true</span> &#123;</span><br><span class="line">        <span class="comment">//do something...</span></span><br><span class="line">        time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure></li><li>time.Ticker<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ticker *time.Ticker</span><br><span class="line">ticker = time.NewTicker(<span class="number">1</span> * time.Second)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">range</span> ticker.C &#123;</span><br><span class="line">        <span class="comment">//do something...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">ticker.Stop()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sshpass</title>
      <link href="/posts/8b2c5d13/"/>
      <url>/posts/8b2c5d13/</url>
      
        <content type="html"><![CDATA[<p><code>export SSH_PASSWORD=1234</code><br><code>export REMOTE_SERVER=user@192.168.56.3</code></p><ul><li><p>執行遠端的 shell command</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER COMMAND</span><br><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER ls</span><br></pre></td></tr></table></figure></li><li><p>執行遠端需要 root 權限的 shell command</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo $SSH_PASSWORD | sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no -t $REMOTE_SERVER sudo -S &quot;apt update&quot;</span><br><span class="line">echo $SSH_PASSWORD | sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no -T $REMOTE_SERVER sudo -S &quot;apt update&quot;</span><br><span class="line">echo $SSH_PASSWORD | sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no -tt $REMOTE_SERVER sudo -S &quot;apt update&quot;</span><br></pre></td></tr></table></figure></li><li><p>執行遠端 docker command</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER &quot;docker exec mycontainer mysql -uroot -p1234 -e &apos;show databases&apos;&quot;</span><br><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER docker exec mycontainer &quot;mysql -uroot -p1234 -e &apos;show databases&apos;&quot;</span><br><span class="line"></span><br><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER docker exec mycontainer ls -al</span><br><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER &quot;docker exec mycontainer ls -al&quot;</span><br><span class="line">sshpass -p $SSH_PASSWORD ssh -o stricthostkeychecking=no $REMOTE_SERVER &quot;docker exec mycontainer sh -c &apos;ls -al&apos;&quot;</span><br></pre></td></tr></table></figure></li><li><p>遠端執行 sftp 動作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sshpass -p $SFTP_PASSWORD sftp -oBatchMode=no -ostricthostkeychecking=no -b - $ACCOUNT@$ADDRESS &lt;&lt; !</span><br><span class="line">ls</span><br><span class="line">cd /folder</span><br><span class="line">get file</span><br><span class="line">bye</span><br><span class="line">!</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Upload Operation</title>
      <link href="/posts/f3b1b78/"/>
      <url>/posts/f3b1b78/</url>
      
        <content type="html"><![CDATA[<ul><li>server<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">upload</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    code := <span class="number">200</span></span><br><span class="line">    res := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">    param1 := c.PostForm(<span class="string">"param1"</span>)</span><br><span class="line">    param2 := c.PostForm(<span class="string">"param2"</span>)</span><br><span class="line"></span><br><span class="line">    file, err := c.FormFile(<span class="string">"file"</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        code = <span class="number">401</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res[<span class="string">"param1"</span>] = param1</span><br><span class="line">    res[<span class="string">"param2"</span>] = param2</span><br><span class="line">    res[<span class="string">"filename"</span>] = file.Filename</span><br><span class="line">    res[<span class="string">"filesize"</span>] = file.Size</span><br><span class="line"></span><br><span class="line">    c.JSON(http.StatusOK, gin.H &#123;</span><br><span class="line">        <span class="string">"code"</span>:  code,</span><br><span class="line">        <span class="string">"data"</span>: res,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := gin.Default()</span><br><span class="line">    r.POST(<span class="string">"/upload"</span>, upload)</span><br><span class="line">    r.Run(<span class="string">":8888"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>client<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"bytes"</span></span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"io"</span></span><br><span class="line">    <span class="string">"io/ioutil"</span></span><br><span class="line">    <span class="string">"log"</span></span><br><span class="line">    <span class="string">"mime/multipart"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"os"</span></span><br><span class="line">    <span class="string">"path/filepath"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newfileUploadRequest</span><span class="params">(uri <span class="keyword">string</span>, params <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>, paramName, path <span class="keyword">string</span>)</span> <span class="params">(*http.Request, error)</span></span> &#123;</span><br><span class="line">    file, err := os.Open(path)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> file.Close()</span><br><span class="line"></span><br><span class="line">    body := &amp;bytes.Buffer&#123;&#125;</span><br><span class="line">    writer := multipart.NewWriter(body)</span><br><span class="line">    part, err := writer.CreateFormFile(paramName, filepath.Base(path))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    _, err = io.Copy(part, file)</span><br><span class="line">    <span class="comment">//we can also use string to fill the file content</span></span><br><span class="line">    <span class="comment">//part.Write([]byte("content_in_a_file"))</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> key, val := <span class="keyword">range</span> params &#123;</span><br><span class="line">        _ = writer.WriteField(key, val)</span><br><span class="line">    &#125;</span><br><span class="line">    err = writer.Close()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    req, err := http.NewRequest(<span class="string">"POST"</span>, uri, body)</span><br><span class="line">    req.Header.Set(<span class="string">"Content-Type"</span>, writer.FormDataContentType())</span><br><span class="line">    <span class="keyword">return</span> req, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    payload := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line">        <span class="string">"param1"</span>: <span class="string">"test1"</span>,</span><br><span class="line">        <span class="string">"param2"</span>: <span class="string">"test2"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    url := <span class="string">"http://192.168.56.3:8888/upload"</span></span><br><span class="line">    request, err := newfileUploadRequest(url, payload, <span class="string">"file"</span>, <span class="string">"/home/user/test.txt"</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    client := &amp;http.Client&#123;&#125;</span><br><span class="line">    resp, err := client.Do(request)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line">        body, err := ioutil.ReadAll(resp.Body)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Println(<span class="keyword">string</span>(body))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>output<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"code"</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"filename"</span>: <span class="string">"test.txt"</span>,</span><br><span class="line">    <span class="attr">"filesize"</span>: <span class="number">684</span>,</span><br><span class="line">    <span class="attr">"param1"</span>: <span class="string">"test1"</span>,</span><br><span class="line">    <span class="attr">"param2"</span>: <span class="string">"test2"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nsenter</title>
      <link href="/posts/b401a0da/"/>
      <url>/posts/b401a0da/</url>
      
        <content type="html"><![CDATA[<p>nsenter 可以用來進入 target process 所在的 Namespace 中執行命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ nsenter -h</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line"> nsenter [options] [&lt;program&gt; [&lt;argument&gt;...]]</span><br><span class="line"></span><br><span class="line">Run a program with namespaces of other processes.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"> -a, --all              enter all namespaces</span><br><span class="line"> -t, --target &lt;pid&gt;     target process to get namespaces from</span><br><span class="line"> -m, --mount[=&lt;file&gt;]   enter mount namespace</span><br><span class="line"> -u, --uts[=&lt;file&gt;]     enter UTS namespace (hostname etc)</span><br><span class="line"> -i, --ipc[=&lt;file&gt;]     enter System V IPC namespace</span><br><span class="line"> -n, --net[=&lt;file&gt;]     enter network namespace</span><br><span class="line"> -p, --pid[=&lt;file&gt;]     enter pid namespace</span><br><span class="line"> -C, --cgroup[=&lt;file&gt;]  enter cgroup namespace</span><br><span class="line"> -U, --user[=&lt;file&gt;]    enter user namespace</span><br><span class="line"> -S, --setuid &lt;uid&gt;     <span class="built_in">set</span> uid <span class="keyword">in</span> entered namespace</span><br><span class="line"> -G, --setgid &lt;gid&gt;     <span class="built_in">set</span> gid <span class="keyword">in</span> entered namespace</span><br><span class="line">     --preserve-credentials <span class="keyword">do</span> not touch uids or gids</span><br><span class="line"> -r, --root[=&lt;dir&gt;]     <span class="built_in">set</span> the root directory</span><br><span class="line"> -w, --wd[=&lt;dir&gt;]       <span class="built_in">set</span> the working directory</span><br><span class="line"> -F, --no-fork          <span class="keyword">do</span> not fork before executing &lt;program&gt;</span><br><span class="line"> -Z, --follow-context   <span class="built_in">set</span> SELinux context according to --target PID</span><br><span class="line"></span><br><span class="line"> -h, --<span class="built_in">help</span>             display this <span class="built_in">help</span></span><br><span class="line"> -V, --version          display version</span><br></pre></td></tr></table></figure><ol><li>在 host 中，下指令到 container 內<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ PID=$(docker inspect --format &#123;&#123;.State.Pid&#125;&#125; my_container)</span><br><span class="line">$ sudo nsenter -m -u -i -n -t <span class="variable">$PID</span> ls</span><br><span class="line">app  bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  requirements.txt  root  run  sbin  srv  sys  tmp  usr  var</span><br></pre></td></tr></table></figure></li><li>在 container 中，下指令到 host<br>必須先允許 container 存取 host namespace 的權限</li></ol><ul><li>透過 docker run 指令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --privileged --pid=host ...</span><br></pre></td></tr></table></figure></li><li>透過 docker compose<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privileged: true</span><br><span class="line">pid: &quot;host&quot;</span><br></pre></td></tr></table></figure></li><li>container 中，在 host 執行的 process 為 <code>PID=1</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it my_container bash</span><br><span class="line">root@5185b2a94319:~<span class="comment"># nsenter -m -u -i -n -t 1 ls</span></span><br><span class="line">bin  boot  cdrom  dev  etc  home  initrd.img  initrd.img.old  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  snap  srv  swap.img  sys  tmp  usr  var  vmlinuz  vmlinuz.old</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> nsenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>subprocess</title>
      <link href="/posts/b1b1ed69/"/>
      <url>/posts/b1b1ed69/</url>
      
        <content type="html"><![CDATA[<ul><li>run<br>was added in Python 3.5<br>execute a command and wait until it finishes<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">res = subprocess.run([<span class="string">"cat"</span>, <span class="string">"/etc/hostname"</span>], stdout=subprocess.PIPE)</span><br><span class="line">hostname = res.stdout.decode(<span class="string">"utf-8"</span>).strip()</span><br></pre></td></tr></table></figure></li></ul><p>call<br>ret=subprocess.call(‘cat /etc/machine-id’, shell=True, stdout=open(‘/dev/null’,’w’), stderr=subprocess.STDOUT)</p><p>popen<br>you can continue doing your stuff while the process finishes and then just repeatedly call subprocess.communicate yourself to pass and receive data to your process.</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Encrypt with RSA and Base64</title>
      <link href="/posts/ca690ff5/"/>
      <url>/posts/ca690ff5/</url>
      
        <content type="html"><![CDATA[<p>RSA 是非對稱性加密算法</p><ul><li>import<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"crypto/rand"</span></span><br><span class="line">    <span class="string">"crypto/rsa"</span></span><br><span class="line">    <span class="string">"crypto/sha256"</span></span><br><span class="line">    <span class="string">"crypto/x509"</span></span><br><span class="line">    <span class="string">"encoding/base64"</span></span><br><span class="line">    <span class="string">"encoding/gob"</span></span><br><span class="line">    <span class="string">"encoding/pem"</span></span><br><span class="line">    <span class="string">"errors"</span></span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"io/ioutil"</span></span><br><span class="line">    <span class="string">"os"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>生成公私鑰<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GenerateKeyPair</span><span class="params">(bits <span class="keyword">int</span>)</span> <span class="params">(*rsa.PrivateKey, *rsa.PublicKey, error)</span></span> &#123;</span><br><span class="line">    prikey, err := rsa.GenerateKey(rand.Reader, bits)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> prikey, &amp;prikey.PublicKey, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">privatekey, publickey, _ := GenerateKeyPair(<span class="number">2048</span>)</span><br><span class="line">fmt.Println(*privatekey) <span class="comment">// &#123;&#123;2003898272...5197615363 []&#125;&#125;</span></span><br><span class="line">fmt.Println(*publickey) <span class="comment">// &#123;2003898272...5007771639 65537&#125;</span></span><br></pre></td></tr></table></figure></li><li>將密鑰存入檔案<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">saveGobKey</span><span class="params">(fileName <span class="keyword">string</span>, key <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    outFile, _ := os.Create(fileName)</span><br><span class="line">    <span class="keyword">defer</span> outFile.Close()</span><br><span class="line"></span><br><span class="line">    encoder := gob.NewEncoder(outFile)</span><br><span class="line">    err = encoder.Encode(key)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">savePEMPrivateKey</span><span class="params">(fileName <span class="keyword">string</span>, key *rsa.PrivateKey)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    outFile, _ := os.Create(fileName)</span><br><span class="line">    <span class="keyword">defer</span> outFile.Close()</span><br><span class="line"></span><br><span class="line">    derStream:= x509.MarshalPKCS1PrivateKey(key)</span><br><span class="line">    <span class="keyword">var</span> privateKey = &amp;pem.Block&#123;</span><br><span class="line">        Type: <span class="string">"PRIVATE KEY"</span>,</span><br><span class="line">        Bytes: derStream,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    err = pem.Encode(outFile, privateKey)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">savePEMPublicKey</span><span class="params">(fileName <span class="keyword">string</span>, key *rsa.PublicKey)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    outFile, _ := os.Create(fileName)</span><br><span class="line">    <span class="keyword">defer</span> outFile.Close()</span><br><span class="line"></span><br><span class="line">    derPkix, _ := x509.MarshalPKIXPublicKey(key)</span><br><span class="line">    <span class="keyword">var</span> publicKey = &amp;pem.Block&#123;</span><br><span class="line">        Type: <span class="string">"PUBLIC KEY"</span>,</span><br><span class="line">        Bytes: derPkix,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    err = pem.Encode(outFile, publicKey)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//store key in binary format</span></span><br><span class="line">saveGobKey(<span class="string">"private.key"</span>, privatekey)</span><br><span class="line">saveGobKey(<span class="string">"public.key"</span>, publickey)</span><br><span class="line"></span><br><span class="line"><span class="comment">//store key in pem format</span></span><br><span class="line"><span class="comment">//-----BEGIN RSA PRIVATE KEY-----</span></span><br><span class="line"><span class="comment">//-----BEGIN PRIVATE KEY-----</span></span><br><span class="line"><span class="comment">//MIIEpQIBAAKCAQEAu/olT1++xi2cfQSF+DjgeEeiFurzhM2MtfTgdVeQngOmtfZh</span></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="comment">//23GiddwFvlm+Xbeu0bV8CVg+KLjMsD4UqSbZzqWXCDK/5vNE7fIeus8=</span></span><br><span class="line"><span class="comment">//-----END PRIVATE KEY-----</span></span><br><span class="line">savePEMPrivateKey(<span class="string">"private.pem"</span>, privatekey)</span><br><span class="line"></span><br><span class="line"><span class="comment">//-----BEGIN PUBLIC KEY-----</span></span><br><span class="line"><span class="comment">//MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu/olT1++xi2cfQSF+Djg</span></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="comment">//qwIDAQAB</span></span><br><span class="line"><span class="comment">//-----END PUBLIC KEY-----</span></span><br><span class="line">savePEMPublicKey(<span class="string">"public.pem"</span>, publickey)</span><br></pre></td></tr></table></figure></li><li>加解密<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Encrypt</span><span class="params">(message <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">    key, _ := LoadPEMPublicKey(<span class="string">"public.pem"</span>)</span><br><span class="line"></span><br><span class="line">    ciphertext, err := rsa.EncryptOAEP(sha256.New(), rand.Reader, key, []<span class="keyword">byte</span>(message), []<span class="keyword">byte</span>(<span class="string">""</span>))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> base64.StdEncoding.EncodeToString(ciphertext), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Decrypt</span><span class="params">(b64_message <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">    key, _ := LoadPEMPrivateKey(<span class="string">"private.pem"</span>)</span><br><span class="line"></span><br><span class="line">    message, err := base64.StdEncoding.DecodeString(b64_message)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    plaintext, err := rsa.DecryptOAEP(sha256.New(), rand.Reader, key, message, []<span class="keyword">byte</span>(<span class="string">""</span>))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">string</span>(plaintext), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//go only support encrypt by public key and decrypt by private key</span></span><br><span class="line"><span class="comment">//because public key is available to everyone</span></span><br><span class="line">data := <span class="string">"I'm a genius"</span></span><br><span class="line">encrypt_data, _ := Encrypt(data)</span><br><span class="line">decrypt_data, _ := Decrypt(encrypt_data)</span><br><span class="line">fmt.Println(decrypt_data) <span class="comment">//I'm a genius</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Encrypt with AES and Base64</title>
      <link href="/posts/d7f0b4a8/"/>
      <url>/posts/d7f0b4a8/</url>
      
        <content type="html"><![CDATA[<p>AES 是對稱性加密算法，AES key 長度可以設定為 16, 24, or 32 bytes，分別對應到 AES-128, AES-192, or AES-256</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"bytes"</span></span><br><span class="line">    <span class="string">"crypto/aes"</span></span><br><span class="line">    <span class="string">"crypto/cipher"</span></span><br><span class="line">    <span class="string">"crypto/rand"</span></span><br><span class="line">    <span class="string">"encoding/base64"</span></span><br><span class="line">    <span class="string">"errors"</span></span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"io"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Encrypt</span><span class="params">(key, text <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span> ,error)</span></span> &#123;</span><br><span class="line">    keyBytes := []<span class="keyword">byte</span>(key)</span><br><span class="line">    textBytes := []<span class="keyword">byte</span>(text)</span><br><span class="line"></span><br><span class="line">    block, err := aes.NewCipher(keyBytes)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(textBytes)%aes.BlockSize != <span class="number">0</span> &#123;</span><br><span class="line">        padding := aes.BlockSize - <span class="built_in">len</span>(textBytes)%aes.BlockSize</span><br><span class="line">        padText := bytes.Repeat([]<span class="keyword">byte</span>&#123;<span class="keyword">byte</span>(<span class="number">0</span>)&#125;, padding)</span><br><span class="line">        textBytes = <span class="built_in">append</span>(textBytes, padText...)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ciphertext := <span class="built_in">make</span>([]<span class="keyword">byte</span>, aes.BlockSize+<span class="built_in">len</span>(textBytes))</span><br><span class="line">    iv := ciphertext[:aes.BlockSize]</span><br><span class="line">    <span class="keyword">if</span> _, err := io.ReadFull(rand.Reader, iv); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err</span><br><span class="line">    &#125;   </span><br><span class="line">    cfb := cipher.NewCFBEncrypter(block, iv) </span><br><span class="line">    cfb.XORKeyStream(ciphertext[aes.BlockSize:], textBytes)</span><br><span class="line">    <span class="keyword">return</span> base64.StdEncoding.EncodeToString(ciphertext), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Decrypt</span><span class="params">(key, b64 <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">    keyBytes := []<span class="keyword">byte</span>(key)</span><br><span class="line"></span><br><span class="line">    block, err := aes.NewCipher(keyBytes)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err </span><br><span class="line">    &#125;</span><br><span class="line">    text, err := base64.StdEncoding.DecodeString(b64)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, err </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(text) &lt; aes.BlockSize &#123;</span><br><span class="line">        <span class="built_in">panic</span>(<span class="string">"ciphertext too short"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, errors.New(<span class="string">"ciphertext to short"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    iv := text[:aes.BlockSize]</span><br><span class="line">    text = text[aes.BlockSize:]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(text)%aes.BlockSize != <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>, errors.New(<span class="string">"ciphertext is not a multiple of the block size"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    cfb := cipher.NewCFBDecrypter(block, iv)</span><br><span class="line">    cfb.XORKeyStream(text, text)</span><br><span class="line">    text = bytes.TrimRight(text, <span class="string">"\x00"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">string</span>(text), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    AESEncryptionKey := <span class="string">"ABCDEFGHIJKLMNOP"</span></span><br><span class="line">    data := <span class="string">"I'm a genius"</span></span><br><span class="line"></span><br><span class="line">    encrypt, _ := Encrypt(AESEncryptionKey, data)</span><br><span class="line">    fmt.Println(encrypt) <span class="comment">//n3ZLEui2m9egZaNN1HcqcRYa6gYdMZIf6s7uUQnwvmw=</span></span><br><span class="line"></span><br><span class="line">    decrypt, _ := Decrypt(AESEncryptionKey, encrypt)</span><br><span class="line">    fmt.Println(decrypt)<span class="comment">//I'm a genius</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang notes</title>
      <link href="/posts/d5617b5e/"/>
      <url>/posts/d5617b5e/</url>
      
        <content type="html"><![CDATA[<ul><li>宣告byte variable<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">single := byte(&apos;A&apos;)</span><br><span class="line">array := []byte&#123;&apos;A&apos;, &apos;B&apos;, &apos;C&apos;&#125;</span><br></pre></td></tr></table></figure></li><li>package</li></ul><ol><li>package main 是程式入口，其餘的 package name 必須和所在的資料夾同名</li><li>同一個 package 內，互相調用的 variable or function，命名可以不分大小寫</li><li>跨 package 調用時，被使用的 variable or function，命名必須大寫開頭</li><li>編譯<br><code>go run a.go b.go</code><br><code>go run *.go</code><br><code>go build a.go b.go</code><br><code>go build .</code></li><li>多層目錄<ul><li>目錄結構<br>project<br>├── common<br>│   └── b.go<br>└── a.go</li><li>初始化 module<br><code>user@user:~/project$ go mod init project</code><br>執行之後會產生 go.mod 檔案</li><li>使用<br>在a.go中，<code>import (common &quot;project/common&quot;)</code><br>然後呼叫 <code>common.foo()</code></li></ul></li></ol><ul><li>初始化專案，當專案中有多個目錄結構時，需要建立 <code>go.mod</code> 來標示專案的根目錄，確保各個 module 在 import 時的相依性<br><code>$ go mod init project</code></li><li>release / debug mode<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[GIN-debug] [WARNING] Running <span class="keyword">in</span> <span class="string">"debug"</span> mode. Switch to <span class="string">"release"</span> mode <span class="keyword">in</span> production.</span><br><span class="line"> - using env:   <span class="built_in">export</span> GIN_MODE=release</span><br><span class="line"> - using code:  gin.SetMode(gin.ReleaseMode)</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="https://eddycjy.gitbook.io/golang/" target="_blank" rel="noopener">跟煎鱼学 Go</a><br><a href="https://ithelp.ithome.com.tw/articles/10205062" target="_blank" rel="noopener">學習Go</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加解密</title>
      <link href="/posts/d3181d19/"/>
      <url>/posts/d3181d19/</url>
      
        <content type="html"><![CDATA[<ul><li>對稱式加密 (Symmetric Encryption)<ul><li>加解密使用同一把 key</li><li><font color="#FF0000">傳送方(A)與接收方(B)在溝通加密方式與傳送 key 的過程時，有可能被第三方(C)攔截</font><ul><li>C 可以使用這把 key 來解密 A/B 傳送的訊息</li><li>C 可以使用這把 key 來加密攻擊訊息</li></ul></li></ul></li><li>非對稱式加密 (Asymmetric Encryption)<ul><li>加解密使用 pair key (public key + private key)<ul><li>使用其中一把 key 加密，只能用另一把 key 解密</li></ul></li><li>A 與 B 各自有兩把 key</li><li>A 與 B 在溝通加密方式時，會將自己的 public key 傳給對方<ul><li>A 會用 B 的 public key 加密訊息，B 再用自己的 private key 解密</li><li>B 會用A 的 public key 加密訊息，A 再用自己的 private key 解密</li></ul></li><li><font color="#FF0000">A 與 B 將 public key 傳給對方時，有可能被 C 攔截</font><ul><li>C 可以使用 A/B 的 public key 來加密攻擊內容</li></ul></li></ul></li><li>非對稱式加密 + 數位簽章 (Digital Signature)<ul><li>A 要傳訊息給 B<ul><li>A 先用 B 的 public key 加密</li><li>A 再用自己的 private key 加密<ul><li><font color="#FF6600">A 的 private key 不會洩漏</font></li></ul></li><li>B 收到訊息</li><li>B 先用 A 的 public key 解密<ul><li><font color="#FF6600">只有 A 發的訊息，在這裡才解的開</font></li></ul></li><li>B 再用自己的 private key 解密<ul><li><font color="#FF6600">就算 C 用 A 的 public key 解開了 A 傳送出來的訊息，也沒有 B 的 private key 繼續完全解密</font></li></ul></li></ul></li><li><font color="#FF0000">A 與 B 將 public key 傳給對方時，有可能被 C 攔截，然後 C 搞事情</font><ul><li>C 攔截了 A/B 的 public key</li><li>C 偽造了兩對 public key + private key(<font color="#0000FF">CApub+CApri</font>/<font color="#008000">CBpub+CBpri</font>)，再把 <font color="#0000FF">CApub</font>/<font color="#008000">CBpub</font> 分別傳給 B/A</li><li>A 要傳訊息給 B<ul><li>A 先用 <font color="#008000">CBpub</font> 加密</li><li>A 再用自己的 private key 加密</li><li>C 攔截到訊息後<ul><li>C 先用 A 的 public key 解密</li><li>C 再用 <font color="#008000">CBpri</font> 完全解密</li><li>C 先用 B 的 public key 加密</li><li>C 再用 <font color="#0000FF">CApri</font> 加密</li></ul></li><li>B 收到訊息後<ul><li>B 先用 <font color="#0000FF">CApub</font> 解密</li><li>B 再用自己的 private key 解密</li></ul></li></ul></li></ul></li></ul></li><li>A/B 在交換 public key 後，透過具有公信力的第三方，再確認一次拿到的真的是對方的 public key</li><li>AES (Advanced Encryption Standard)<ul><li>對稱式加密算法</li><li>allows 128, 192 or 256 bit (16, 24, 32 bytes) key length</li></ul></li><li>AEC</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Locust - API Server Load Testing</title>
      <link href="/posts/fd45e358/"/>
      <url>/posts/fd45e358/</url>
      
        <content type="html"><![CDATA[<ul><li>install<br><code>pip install locust</code></li><li>locustfile.py<br><code>@task</code> decorator可以指定執行的比重，若不指定則預設所有任務為同比重<br>For example, subject_list指定task(1) and corporation_list指定task(2)，代表subject_list跟corporation_list執行比例是1:2<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> locust <span class="keyword">import</span> HttpUser, TaskSet, task</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebsiteTasks</span><span class="params">(TaskSet)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent)</span>:</span></span><br><span class="line">        super().__init__(parent=parent)</span><br><span class="line">        self.token = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_start</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.login()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">on_stop</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self)</span>:</span></span><br><span class="line">        response = self.client.post(<span class="string">"/api/auth/login"</span>, data=&#123;<span class="string">"username"</span>:<span class="string">"admin"</span>, <span class="string">"password"</span>:<span class="string">"123456"</span>&#125;)</span><br><span class="line">        res_json = response.json()</span><br><span class="line">        self.token = res_json[<span class="string">'data'</span>][<span class="string">'token'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @task</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subject_list</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.client.get(<span class="string">"/api/subject/list"</span>, headers=&#123;<span class="string">"Authorization"</span>: self.token&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @task</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">corporation_list</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.client.get(<span class="string">"/api/corporation/list"</span>, headers=&#123;<span class="string">"Authorization"</span>: self.token&#125;)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebsiteUser</span><span class="params">(HttpUser)</span>:</span></span><br><span class="line">    tasks = [WebsiteTasks]</span><br><span class="line"></span><br><span class="line">    <span class="comment">#定義兩次任務間隔時間的隨機範圍 (1~2秒)</span></span><br><span class="line">    min_wait = <span class="number">1000</span></span><br><span class="line">    max_wait = <span class="number">2000</span></span><br></pre></td></tr></table></figure></li><li>執行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ locust -f locustfile.py -H http://192.168.56.3:18857</span><br><span class="line">[2020-07-01 15:13:10,675] user/WARNING/locust.main: System open file limit setting is not high enough for load testing, and the OS wouldnt allow locust to increase it by itself. See https://docs.locust.io/en/stable/installation.html#increasing-maximum-number-of-open-files-limit for more info.</span><br><span class="line">[2020-07-01 15:13:10,676] user/INFO/locust.main: Starting web interface at http://:8089</span><br><span class="line">[2020-07-01 15:13:10,684] user/INFO/locust.main: Starting Locust 1.1</span><br></pre></td></tr></table></figure></li><li>網頁<br>輸入 User 數量及 Hatch rate（多少秒達到預期使用者數量），若是設定 5 個 user，hatch rate 為 5，代表有 5 秒時間可以 warm up 到 5 使用者<br><img src="/posts/fd45e358/image01.jpg" alt><br><img src="/posts/fd45e358/image02.jpg" alt><br><img src="/posts/fd45e358/image03.jpg" alt></li><li>結果<br>terminal指令結束後，會有統計的資訊如下，也可以透過網頁中的Download Data，下載到這些數據<br><img src="/posts/fd45e358/image04.jpg" alt></li><li>Todo<br>補上怎麼–no-web執行</li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Locust </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Locust </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>API notes</title>
      <link href="/posts/258ef25c/"/>
      <url>/posts/258ef25c/</url>
      
        <content type="html"><![CDATA[<p>同源政策（Same-origin policy）意思就是說如果你現在這個網站的跟你要呼叫的 API 的網站「不同源」的時候，瀏覽器一樣會幫你發 Request，也會得到 Response，但是會把 Response 給擋下來，不讓你的 JavaScript 拿到並且傳回錯誤。什麼是不同源呢？只要是 Domain 不一樣就是不同源，或者是一個用http一個用https也是不同源，端口號不一樣也是不同源。</p><p>CORS 把 Request 分成兩種，一種是簡單請求（simple requests）。什麼是簡單請求呢？定義很多，但如果你沒有加任何自定義的 Header，而且又是 GET 的話，絕對是簡單請求；反之，如果你有加一些自定義的 Header，這個 Request 就絕對不是簡單請求。</p><p>非簡單請求可能會帶有一些使用者資料，因此會先透過預檢請求（Preflight Request）去確認後續的請求能否送出，如果這個預檢請求沒有過的話，真的 Request 也就不會發送了，這就是預檢請求的目的。在開發者選項或是後台可以發現，一個非簡單請求會有兩個 Requests，第一個 Request 的 Method 會是 OPTIONS，第二個 Request才會是真正的動作。</p><p>如果今天沒有預檢請求這個機制的話，使用者就可以在隨便一個 Domain 的網頁上面發送一個 DELETE 的 Request 給這個 API，瀏覽器的 CORS 機制，還是會幫你發送 Request，但只是 Response 被瀏覽器擋住而已。因此呢，儘管沒有 Response，但是 Server 端的確收到了這個 Request，因此就會把這筆資料給刪除。</p><p>摘錄自 <a href="https://blog.techbridge.cc/2017/05/20/api-ajax-cors-and-jsonp/" target="_blank" rel="noopener">https://blog.techbridge.cc/2017/05/20/api-ajax-cors-and-jsonp/</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kotlin notes</title>
      <link href="/posts/8a005c5e/"/>
      <url>/posts/8a005c5e/</url>
      
        <content type="html"><![CDATA[<ul><li>var vs val<br>variables defined with var are mutable(Read and Write)<br>variables defined with val are immutable(Read only)</li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in Python</title>
      <link href="/posts/af8f76b/"/>
      <url>/posts/af8f76b/</url>
      
        <content type="html"><![CDATA[<ul><li>package<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ pip install jaeger-client flask-opentracing</span><br></pre></td></tr></table></figure></li><li>example for multiprocess tracing<ul><li>reference from <a href="https://github.com/jaegertracing/jaeger-client-python/issues/210" target="_blank" rel="noopener">https://github.com/jaegertracing/jaeger-client-python/issues/210</a> @ <a href="https://github.com/illogikus" target="_blank" rel="noopener">illogikus</a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> opentracing</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> jaeger_client <span class="keyword">import</span> Config</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pidprint</span><span class="params">(s)</span>:</span></span><br><span class="line">    print(<span class="string">"[%s] %s"</span> % (os.getpid(),s))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pidlog</span><span class="params">(s)</span>:</span></span><br><span class="line">    active = opentracing.tracer.scope_manager.active</span><br><span class="line">    pidprint(s)</span><br><span class="line">    active.span.log_kv(&#123;os.getpid(): s&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x, context)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> opentracing.global_tracer().start_active_span(<span class="string">'span_%s'</span> % x, child_of=context):</span><br><span class="line">        pidlog(<span class="string">"Hello %s"</span> % x)</span><br><span class="line">        time.sleep(float(x)/<span class="number">10</span>)</span><br><span class="line">        pidlog(<span class="string">"Bye %s"</span> % x)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_jaeger_config</span><span class="params">()</span>:</span></span><br><span class="line">    config = Config(</span><br><span class="line">        config=&#123;</span><br><span class="line">            <span class="string">'sampler'</span>: &#123;</span><br><span class="line">                <span class="string">'type'</span>: <span class="string">'const'</span>,</span><br><span class="line">                <span class="string">'param'</span>: <span class="number">1</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">'local_agent'</span>: &#123;</span><br><span class="line">                <span class="string">'reporting_host'</span>: <span class="string">'192.168.56.5'</span>,</span><br><span class="line">                <span class="string">'reporting_port'</span>: <span class="number">6831</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">'logging'</span>: <span class="literal">True</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        service_name=<span class="string">'my-service'</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_jaeger_tracer</span><span class="params">()</span>:</span></span><br><span class="line">    logging.getLogger(<span class="string">''</span>).handlers = []</span><br><span class="line">    logging.basicConfig(format=<span class="string">'%(message)s'</span>, level=logging.DEBUG)</span><br><span class="line">    <span class="keyword">return</span> get_jaeger_config().initialize_tracer()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">subprocess_initializer</span><span class="params">()</span>:</span></span><br><span class="line">    config = get_jaeger_config()</span><br><span class="line">    Config._initialized = <span class="literal">False</span></span><br><span class="line">    config.initialize_tracer()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    tracer = init_jaeger_tracer()</span><br><span class="line">    pool = Pool(processes=<span class="number">4</span>, initializer=subprocess_initializer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> opentracing.global_tracer().start_active_span(<span class="string">'master_span'</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            pidprint(<span class="string">"Sending %s ..."</span> % x)</span><br><span class="line">            pool.apply_async(f,(x, scope.span.context))</span><br><span class="line"></span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line">    tracer.close()</span><br></pre></td></tr></table></figure><img src="/posts/af8f76b/multiprocessing_tracing.jpg" alt></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Jaeger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in Android Java</title>
      <link href="/posts/db4f4223/"/>
      <url>/posts/db4f4223/</url>
      
        <content type="html"><![CDATA[<ul><li>package in gapp.radle<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">implementation &apos;com.squareup.okhttp3:okhttp:4.7.2&apos;</span><br><span class="line"></span><br><span class="line">implementation group: &apos;io.opentracing&apos;, name: &apos;opentracing-api&apos;, version: &apos;0.33.0&apos;</span><br><span class="line">implementation group: &apos;io.jaegertracing&apos;, name: &apos;jaeger-client&apos;, version: &apos;1.2.0&apos;</span><br></pre></td></tr></table></figure></li><li>Tracing main class<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.jaegertracing.Configuration;</span><br><span class="line"><span class="keyword">import</span> io.jaegertracing.Configuration.ReporterConfiguration;</span><br><span class="line"><span class="keyword">import</span> io.jaegertracing.Configuration.SamplerConfiguration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.jaegertracing.internal.JaegerTracer;</span><br><span class="line"><span class="keyword">import</span> io.jaegertracing.internal.samplers.ConstSampler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tracing</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer JAEGER_UDP_DEFAULT_PORT=<span class="number">6831</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JaegerTracer tracer;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">terminate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tracer.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(String service, String hostname)</span> </span>&#123;</span><br><span class="line">        SamplerConfiguration samplerConfig = SamplerConfiguration.fromEnv()</span><br><span class="line">                .withType(ConstSampler.TYPE)</span><br><span class="line">                .withParam(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        ReporterConfiguration reporterConfig;</span><br><span class="line"></span><br><span class="line">        reporterConfig = <span class="keyword">new</span> ReporterConfiguration()</span><br><span class="line">                .withSender(<span class="keyword">new</span> Configuration.SenderConfiguration()</span><br><span class="line">                        .withAgentHost(hostname)</span><br><span class="line">                        .withAgentPort(JAEGER_UDP_DEFAULT_PORT))</span><br><span class="line">                .withLogSpans(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        Configuration config = <span class="keyword">new</span> Configuration(service)</span><br><span class="line">                .withSampler(samplerConfig)</span><br><span class="line">                .withReporter(reporterConfig);</span><br><span class="line"></span><br><span class="line">        tracer = config.getTracer();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>http headers carrier<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestBuilderCarrier</span> <span class="keyword">implements</span> <span class="title">io</span>.<span class="title">opentracing</span>.<span class="title">propagation</span>.<span class="title">TextMap</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Request.Builder builder;</span><br><span class="line"></span><br><span class="line">    RequestBuilderCarrier(Request.Builder builder) &#123;</span><br><span class="line">        <span class="keyword">this</span>.builder = builder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator() &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"carrier is write-only"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(String key, String value)</span> </span>&#123;</span><br><span class="line">        builder.addHeader(key, value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>MainActivity<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.opentracing.Span;</span><br><span class="line"><span class="keyword">import</span> io.opentracing.propagation.Format;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Call;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Callback;</span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Response;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                Tracing.init(<span class="string">"TracingSample"</span>, <span class="string">"192.168.56.5"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">        doTracing();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        Tracing.terminate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">doTracing</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Span span = Tracing.tracer.buildSpan(<span class="string">"api_request"</span>).start();</span><br><span class="line"></span><br><span class="line">        OkHttpClient client = <span class="keyword">new</span> OkHttpClient().newBuilder().build();</span><br><span class="line">        Request.Builder requestbuilder = <span class="keyword">new</span> Request.Builder();</span><br><span class="line">        Tracing.tracer.inject(</span><br><span class="line">                span.context(),</span><br><span class="line">                Format.Builtin.HTTP_HEADERS,</span><br><span class="line">                <span class="keyword">new</span> RequestBuilderCarrier(requestbuilder));</span><br><span class="line"></span><br><span class="line">        Request request = requestbuilder.url(<span class="string">"http://ip:port/api/"</span>).build();</span><br><span class="line">        Call call = client.newCall(request);</span><br><span class="line"></span><br><span class="line">        call.enqueue(<span class="keyword">new</span> Callback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                String result = response.body().string();</span><br><span class="line">                Log.d(<span class="string">"TEST"</span>, result);</span><br><span class="line">                span.finish();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line">                Log.d(<span class="string">"TEST"</span>, e.toString());</span><br><span class="line">                span.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>use span simplily<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Span span = Tracing.tracer.buildSpan(&quot;do_something&quot;).start();</span><br><span class="line">span.finish();</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Jaeger </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Multiprocessing Pool in Python</title>
      <link href="/posts/91c6bb0e/"/>
      <url>/posts/91c6bb0e/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(x)</span>:</span></span><br><span class="line">    print(<span class="string">"[%s] Hello %s"</span> % (os.getpid(), x))</span><br><span class="line">    time.sleep(random.uniform(<span class="number">0.5</span>, <span class="number">2</span>))</span><br><span class="line">    print(<span class="string">"[%s] Bye %s"</span> % (os.getpid(), x))</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">(result)</span>:</span></span><br><span class="line">    print(<span class="string">"[%s] %s"</span> % (os.getpid(), result))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">subprocess_initializer</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"[%s] init"</span> % os.getpid())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    pool = Pool(processes=<span class="number">2</span>, initializer=subprocess_initializer)</span><br><span class="line">    print(<span class="string">"Before ..."</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        pool.apply_async(foo, (x,))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 因為map是block的，所以用result來接return value能直接有正確的結果</span></span><br><span class="line">    result = pool.map(foo, range(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># map_async可以使用callback function來處理結果</span></span><br><span class="line">    <span class="comment"># 也可以使用result.get()，get()會將main process block住，等待map_async執行完畢</span></span><br><span class="line">    result = pool.map_async(foo, range(<span class="number">3</span>), callback=bar)</span><br><span class="line">    print(result.get())</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"After ..."</span>)</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br></pre></td></tr></table></figure><ul><li><p>class multiprocessing.pool.Pool([processes[, initializer[, initargs[, maxtasksperchild[, context]]]]])</p><ul><li>processes<br>The number of worker processes to use. If processes is None then the number returned by os.cpu_count() is used.</li><li>initializer<br>each worker process will call initializer(*initargs) when it starts.</li><li>maxtasksperchild<br>The number of tasks a worker process can complete before it will exit and be replaced with a fresh worker process, to enable unused resources to be freed. The default maxtasksperchild is None, which means worker processes will live as long as the pool.<br>當work process完成了一定數量的執行次數後，會自動重啟該work process</li></ul></li><li><p>map(func, iterable[, chunksize])<br>main process會被block住，整個map指令完成之後才往下<br><code>chunksize</code>=1 by default，每次work process可以接收到的任務數量，當iterables很大時，將chunksize設定的越大，總執行效率越好，但耗費的記憶體越多</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Before ...</span><br><span class="line">[25832] Hello 0</span><br><span class="line">[25833] Hello 1</span><br><span class="line">[25832] Bye 0</span><br><span class="line">[25832] Hello 2</span><br><span class="line">[25833] Bye 1</span><br><span class="line">[25832] Bye 2</span><br><span class="line">After ...</span><br></pre></td></tr></table></figure></li><li><p>map_async(func, iterable[, chunksize[, callback[, error_callback]]])<br>main process不會被block住，且可以指定callback function</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Before ...</span><br><span class="line">After ...</span><br><span class="line">[25851] Hello 0</span><br><span class="line">[25852] Hello 1</span><br><span class="line">[25851] Bye 0</span><br><span class="line">[25851] Hello 2</span><br><span class="line">[25852] Bye 1</span><br><span class="line">[25851] Bye 2</span><br></pre></td></tr></table></figure></li><li><p>imap(func, iterable[, chunksize])<br>A lazier version of map(). <code>imap</code> returns an iterator and <code>map</code> returns a list.<br>假設參數為[1, 2, 3]，執行結果不論誰先完成，return value還是會按照[1, 2, 3]的順序</p></li><li><p>imap_unordered(func, iterable[, chunksize])<br>The same as imap() except that the ordering of the results from the returned iterator should be considered arbitrary.<br>假設參數為[1, 2, 3]，return value會根據執行完成的順序，e.g. [2, 1, 3]</p></li><li><p>starmap(func, iterable[, chunksize])</p></li><li><p>starmap_async(func, iterable[, chunksize[, callback[, error_callback]]])<br>效果相同於map，但是可傳入多個參數<br><code>pool.map(foo, [0, 1, 2, 4])</code><br><code>pool.starmap(foo, [(1, 2), (3, 4)])</code></p></li><li><p>apply(func[, args[, kwds]])<br>參數不同於map，因為每一個apply指令都是block的，所以0, 1, 2是循序執行的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Before ...</span><br><span class="line">[26201] Hello 0</span><br><span class="line">[26201] Bye 0</span><br><span class="line">[26202] Hello 1</span><br><span class="line">[26202] Bye 1</span><br><span class="line">[26201] Hello 2</span><br><span class="line">[26201] Bye 2</span><br><span class="line">After ...</span><br></pre></td></tr></table></figure></li><li><p>apply_async(func[, args[, kwds[, callback[, error_callback]]]])</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Before ...</span><br><span class="line">After ...</span><br><span class="line">[29118] Hello 0</span><br><span class="line">[29119] Hello 1</span><br><span class="line">[29119] Bye 1</span><br><span class="line">[29119] Hello 2</span><br><span class="line">[29118] Bye 0</span><br><span class="line">[29119] Bye 2</span><br></pre></td></tr></table></figure></li><li><p>close()<br>Prevents any more tasks from being submitted to the pool. Once all the tasks have been completed the worker processes will exit.</p></li><li><p>terminate()<br>Stops the worker processes immediately without completing outstanding work.</p></li><li><p>join()<br>Wait for the worker processes to exit. One must call close() or terminate() before using join().</p></li><li><p>callback function<br>由main process執行</p></li><li><p>Reference<br><a href="https://docs.python.org/3/library/multiprocessing.html" target="_blank" rel="noopener">https://docs.python.org/3/library/multiprocessing.html</a></p></li><li><p>ThreadPool vs Pool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from multiprocessing import Pool</span><br><span class="line">ppool = Pool(workers)</span><br><span class="line"></span><br><span class="line">from multiprocessing.pool import ThreadPool</span><br><span class="line">tpool = ThreadPool(workers)</span><br></pre></td></tr></table></figure><p>兩種pool的使用方式一模一樣，差異在於由thread or process實作<br>IO bound jobs -&gt; multiprocessing.pool.ThreadPool<br>CPU bound jobs -&gt; multiprocessing.Pool</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in C++</title>
      <link href="/posts/18b7c14f/"/>
      <url>/posts/18b7c14f/</url>
      
        <content type="html"><![CDATA[<ul><li>Preparation<br>下載jaeger-client-cpp專案，並編譯<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/jaegertracing/jaeger-client-cpp.git</span><br><span class="line">$ <span class="built_in">cd</span> jaeger-client-cpp</span><br><span class="line">$ mkdir build</span><br><span class="line">$ cmake ..</span><br><span class="line">$ make</span><br></pre></td></tr></table></figure><ul><li>將所需的library跟header file，從下列地方取出<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/home/user/jaeger-client-app/build</span><br><span class="line">/home/user/jaeger-client-app/src</span><br><span class="line">/home/user/.hunter/_Base/d45d77d/924bcec/3b7ee27/Install</span><br></pre></td></tr></table></figure></li><li>library (並建立symbolic link)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">libjaegertracing.so -&gt; libjaegertracing.so.0*</span><br><span class="line">libjaegertracing.so.0 -&gt; libjaegertracing.so.0.6.1*</span><br><span class="line">libjaegertracing.so.0.6.1*</span><br><span class="line">libyaml-cpp.so -&gt; libyaml-cpp.so.0.6*</span><br><span class="line">libyaml-cpp.so.0.6 -&gt; libyaml-cpp.so.0.6.2*</span><br><span class="line">libyaml-cpp.so.0.6.2*</span><br></pre></td></tr></table></figure></li><li>headers<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/home/user/jaeger-client-cpp/build/src/jaegertracing/Constants.h</span><br><span class="line">/home/user/jaeger-client-cpp/src/jaegertracing/*.h</span><br><span class="line">/home/user/jaeger-client-cpp/src/jaegertracing/*/*.h</span><br><span class="line">/home/user/jaeger-client-cpp/src/jaegertracing/*/*/*.h</span><br><span class="line">/home/user/.hunter/_Base/d45d77d/924bcec/3b7ee27/Install/include/yaml-cpp</span><br><span class="line">/home/user/.hunter/_Base/d45d77d/924bcec/3b7ee27/Install/include/opentracing</span><br><span class="line">/home/user/.hunter/_Base/d45d77d/924bcec/3b7ee27/Install/include/thrift</span><br><span class="line">/home/user/.hunter/_Base/d45d77d/924bcec/3b7ee27/Install/include/boost</span><br></pre></td></tr></table></figure></li></ul></li><li>compile<br><code>g++ -std=c++11 -L/home/user/jaeger/lib -I/home/user/jaeger/include App.cpp -o test -ljaegertracing -lyaml-cpp</code></li><li>execute<br><code>LD_LIBRARY_PATH=/home/user/jaeger/lib ./test config.yml</code></li><li>App.cpp<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;yaml-cpp/yaml.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jaegertracing/Tracer.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setUpTracer</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* configFilePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> configYAML = YAML::LoadFile(configFilePath);</span><br><span class="line">    <span class="keyword">auto</span> config = jaegertracing::Config::parse(configYAML);</span><br><span class="line">    <span class="keyword">auto</span> tracer = jaegertracing::Tracer::make(</span><br><span class="line">        <span class="string">"example-service"</span>, config, jaegertracing::logging::consoleLogger());</span><br><span class="line">    opentracing::Tracer::InitGlobal(</span><br><span class="line">        <span class="built_in">std</span>::static_pointer_cast&lt;opentracing::Tracer&gt;(tracer));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tracedSubroutine</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">unique_ptr</span>&lt;opentracing::Span&gt;&amp; parentSpan)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> span = opentracing::Tracer::Global()-&gt;StartSpan(</span><br><span class="line">        <span class="string">"tracedSubroutine"</span>, &#123; opentracing::ChildOf(&amp;parentSpan-&gt;context()) &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tracedFunction</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> span = opentracing::Tracer::Global()-&gt;StartSpan(<span class="string">"tracedFunction"</span>);</span><br><span class="line">    tracedSubroutine(span);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// anonymous namespace</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (argc &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">"usage: "</span> &lt;&lt; argv[<span class="number">0</span>] &lt;&lt; <span class="string">" &lt;config-yaml-path&gt;\n"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    setUpTracer(argv[<span class="number">1</span>]);</span><br><span class="line">    tracedFunction();</span><br><span class="line">    <span class="comment">// Not stricly necessary to close tracer, but might flush any buffered</span></span><br><span class="line">    <span class="comment">// spans. See more details in opentracing::Tracer::Close() documentation.</span></span><br><span class="line">    opentracing::Tracer::Global()-&gt;Close();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>inject and extract<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CustomCarrierWriter</span> :</span> opentracing::TextMapWriter &#123;</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">CustomCarrierWriter</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="built_in">std</span>::<span class="built_in">unordered_map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="built_in">std</span>::<span class="built_in">string</span>&gt;&amp; data_)</span></span></span><br><span class="line">        : data&#123;data_&#125; &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// OpenTracing uses opentracing::expected for error handling.</span></span><br><span class="line">    opentracing::expected&lt;<span class="keyword">void</span>&gt; Set(</span><br><span class="line">        opentracing::string_view key,</span><br><span class="line">        opentracing::string_view value) <span class="keyword">const</span> override &#123;</span><br><span class="line">        <span class="comment">// for more background.</span></span><br><span class="line">        opentracing::expected&lt;<span class="keyword">void</span>&gt; result;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">auto</span> was_successful = data.emplace(key, value);</span><br><span class="line">        <span class="keyword">if</span> (was_successful.second) &#123;</span><br><span class="line">        <span class="comment">// Use a default constructed opentracing::expected&lt;void&gt; to indicate success.</span></span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// `key` clashes with existing data, so the span context can't be encoded</span></span><br><span class="line">            <span class="comment">// successfully; set opentracing::expected&lt;void&gt; to an std::error_code.</span></span><br><span class="line">            <span class="keyword">return</span> opentracing::make_unexpected(</span><br><span class="line">                <span class="built_in">std</span>::make_error_code(<span class="built_in">std</span>::errc::not_supported));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">unordered_map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="built_in">std</span>::<span class="built_in">string</span>&gt;&amp; data;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inject</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> span = opentracing::Tracer::Global()-&gt;StartSpan(<span class="string">"websocket event"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">unordered_map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>, <span class="built_in">std</span>::<span class="built_in">string</span>&gt; text_map;</span><br><span class="line">    <span class="function">CustomCarrierWriter <span class="title">carrier</span><span class="params">(text_map)</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> err = opentracing::Tracer::Global()-&gt;Inject(span-&gt;context(), carrier);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; t : carrier.data)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"key: "</span> &lt;&lt; t.first &lt;&lt; <span class="string">", value: "</span> &lt;&lt; t.second &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// do something...</span></span><br><span class="line">    span-&gt;Finish();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extract</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>config.yaml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">disabled: false</span><br><span class="line">reporter:</span><br><span class="line">    logSpans: true</span><br><span class="line">    localAgentHostPort: &quot;192.168.56.5:6831&quot;</span><br><span class="line">sampler:</span><br><span class="line">  type: const</span><br><span class="line">  param: 1</span><br></pre></td></tr></table></figure></li><li>config by code<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> disabled = <span class="literal">false</span>;</span><br><span class="line">jaegertracing::samplers::Config sampler &#123;<span class="string">"const"</span>, <span class="number">1</span>, <span class="string">""</span>, <span class="number">0</span>, <span class="built_in">std</span>::chrono::seconds(<span class="number">0</span>)&#125;;</span><br><span class="line">jaegertracing::reporters::Config reporter &#123;<span class="number">0</span>, <span class="built_in">std</span>::chrono::seconds(<span class="number">0</span>), <span class="literal">true</span>, <span class="string">"192.168.56.5:6831"</span>, <span class="string">""</span>&#125;;</span><br><span class="line">jaegertracing::Config config &#123;disabled, sampler, reporter&#125;;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> Jaeger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>middleware for golang(mux)</title>
      <link href="/posts/1509988e/"/>
      <url>/posts/1509988e/</url>
      
        <content type="html"><![CDATA[<ul><li>main.go<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"github.com/gorilla/mux"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">before</span><span class="params">(h http.Handler)</span> <span class="title">http</span>.<span class="title">Handler</span></span> &#123;</span><br><span class="line">    fn := <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"before"</span>)</span><br><span class="line">        h.ServeHTTP(w, r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> http.HandlerFunc(fn)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">after</span><span class="params">(h http.Handler)</span> <span class="title">http</span>.<span class="title">Handler</span></span> &#123;</span><br><span class="line">    fn := <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        h.ServeHTTP(w, r)</span><br><span class="line">        fmt.Println(<span class="string">"after"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> http.HandlerFunc(fn)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := mux.NewRouter()</span><br><span class="line">    r.HandleFunc(<span class="string">"/"</span>, Hello)</span><br><span class="line">    http.ListenAndServe(<span class="string">":8888"</span>, after(before(r)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Hello</span><span class="params">(w http.ResponseWriter, req *http.Request)</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"do something..."</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//w.Write([]byte("Hello World!"))</span></span><br><span class="line">    fmt.Fprintln(w, <span class="string">"Hello World!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>result<br><code>curl -X GET http://127.0.0.1:8888</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">before</span><br><span class="line"><span class="keyword">do</span> something...</span><br><span class="line">after</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>middleware for golang(gin)</title>
      <link href="/posts/a3df554/"/>
      <url>/posts/a3df554/</url>
      
        <content type="html"><![CDATA[<ul><li>c.Next()<br>It means that after middleware is done executing, we can pass on request handler to the next function in the chain.</li><li>main.go<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">before</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"before"</span>)</span><br><span class="line">    c.Next()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">after</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"after"</span>)</span><br><span class="line">    c.Next()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := gin.Default()</span><br><span class="line"></span><br><span class="line">    r.Use(before)</span><br><span class="line">    r.GET(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"do something..."</span>)</span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World"</span>)</span><br><span class="line">    &#125;, after)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    r.Run(<span class="string">":8888"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>result<br><code>curl -X GET http://127.0.0.1:8888</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[GIN-debug] GET    /                         --&gt; main.after (5 handlers)</span><br><span class="line">[GIN-debug] Listening and serving HTTP on :8888</span><br><span class="line">before</span><br><span class="line"><span class="keyword">do</span> something...</span><br><span class="line">after</span><br><span class="line">[GIN] 2020/06/12 - 11:12:52 | 200 |     262.611µs |    192.168.56.5 | GET      <span class="string">"/"</span></span><br></pre></td></tr></table></figure></li><li>middleware function can be written in another way<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">before</span><span class="params">()</span> <span class="title">gin</span>.<span class="title">HandlerFunc</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"do something here..."</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"before"</span>)</span><br><span class="line">        c.Next()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    r.Use(before())</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Information of flask.request</title>
      <link href="/posts/f4d5bb19/"/>
      <url>/posts/f4d5bb19/</url>
      
        <content type="html"><![CDATA[<ul><li><p>GET api request<br><code>curl -X GET http://127.0.0.1:5000/api/test?x=abc</code></p></li><li><p>Information of flask.request</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">request.method:              GET</span><br><span class="line">request.url:                 http://127.0.0.1:5000/api/test?x=abc</span><br><span class="line">request.base_url:            http://127.0.0.1:5000/api/test</span><br><span class="line">request.url_charset:         utf-8</span><br><span class="line">request.url_root:            http://127.0.0.1:5000/</span><br><span class="line">str(request.url_rule):       /api/test</span><br><span class="line">request.host_url:            http://127.0.0.1:5000/</span><br><span class="line">request.host:                127.0.0.1:5000</span><br><span class="line">request.script_root:</span><br><span class="line">request.path:                /api/test</span><br><span class="line">request.full_path:           /api/test?x=abc</span><br><span class="line">request.args:                ImmutableMultiDict([(&apos;x&apos;, &apos;abc&apos;)])</span><br><span class="line">request.args.get(&apos;x&apos;):       abc</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in golang(gin)</title>
      <link href="/posts/1306a70/"/>
      <url>/posts/1306a70/</url>
      
        <content type="html"><![CDATA[<ul><li>package<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ go get -u github.com/uber/jaeger-client-go/</span><br><span class="line">$ go get -u github.com/pkg/errors</span><br><span class="line">$ go get -u go.uber.org/atomic</span><br></pre></td></tr></table></figure></li><li>main.go<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"io"</span></span><br><span class="line">    <span class="string">"time"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">    <span class="string">"github.com/opentracing/opentracing-go"</span></span><br><span class="line">    <span class="string">"github.com/uber/jaeger-client-go"</span></span><br><span class="line">    <span class="string">"github.com/uber/jaeger-client-go/config"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func initTracer() (opentracing.Tracer, io.Closer) &#123;</span><br><span class="line">    cfg := &amp;config.Configuration&#123;</span><br><span class="line">        ServiceName: <span class="string">"golang"</span>,</span><br><span class="line">        Sampler: &amp;config.SamplerConfig &#123;</span><br><span class="line">            Type: <span class="string">"const"</span>,</span><br><span class="line">            Param: <span class="number">1</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        Reporter: &amp;config.ReporterConfig &#123;</span><br><span class="line">            LogSpans: <span class="literal">true</span>,</span><br><span class="line">            LocalAgentHostPort:<span class="string">"192.168.56.5:6831"</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    tracer, closer, <span class="attr">err</span> := cfg.NewTracer(config.Logger(jaeger.StdLogger))</span><br><span class="line">    <span class="keyword">if</span> err != nil &#123;</span><br><span class="line">        fmt.Sprintf(<span class="string">"ERROR: cannot init Jaeger: %v\n"</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tracer, closer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    tracer, <span class="attr">closer</span> := initTracer()</span><br><span class="line">    defer closer.Close()</span><br><span class="line">    opentracing.SetGlobalTracer(tracer)</span><br><span class="line"></span><br><span class="line">    r := gin.Default()</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">"/"</span>, func(c *gin.Context) &#123;</span><br><span class="line">        span := tracer.StartSpan(c.Request.URL.Path)</span><br><span class="line">        defer span.Finish()</span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">"/extract"</span>, func(c *gin.Context) &#123;</span><br><span class="line">        spanCtx, <span class="attr">_</span> := opentracing.GlobalTracer().Extract(opentracing.HTTPHeaders, opentracing.HTTPHeadersCarrier(c.Request.Header))</span><br><span class="line">        span := opentracing.StartSpan(c.Request.URL.Path, opentracing.ChildOf(spanCtx))</span><br><span class="line">        defer span.Finish()</span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">"/inject"</span>, func(c *gin.Context) &#123;</span><br><span class="line">        span := tracer.StartSpan(c.Request.URL.Path)</span><br><span class="line">        defer span.Finish()</span><br><span class="line"></span><br><span class="line">        client := &amp;http.Client &#123; <span class="attr">Timeout</span>: time.Second * <span class="number">5</span> &#125;</span><br><span class="line">        req, <span class="attr">err</span> := http.NewRequest(<span class="string">"GET"</span>, <span class="string">"http://192.168.56.5:5000/extract"</span>, nil)</span><br><span class="line">        <span class="keyword">if</span> err != nil &#123;</span><br><span class="line">            fmt.Println(err)</span><br><span class="line">        &#125;</span><br><span class="line">        injectErr := opentracing.GlobalTracer().Inject(span.Context(), opentracing.HTTPHeaders, opentracing.HTTPHeadersCarrier(req.Header))</span><br><span class="line">        <span class="keyword">if</span> injectErr != nil &#123;</span><br><span class="line">            fmt.Println(<span class="string">"%s: Couldn't inject headers"</span>, err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        resp, <span class="attr">err</span> := client.Do(req)</span><br><span class="line">        <span class="keyword">if</span> err != nil &#123;</span><br><span class="line">            fmt.Println(err)</span><br><span class="line">        &#125;</span><br><span class="line">        defer resp.Body.Close()</span><br><span class="line"></span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.Run(<span class="string">":8888"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>tag and log<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">span.LogKV(<span class="string">"key"</span>, <span class="string">"value"</span>)</span><br><span class="line">span.SetTag(<span class="string">"key"</span>, <span class="string">"value"</span>)</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="https://juejin.im/post/5d8f5cd2f265da5b62533852" target="_blank" rel="noopener">https://juejin.im/post/5d8f5cd2f265da5b62533852</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jaeger </tag>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World for Golnag</title>
      <link href="/posts/2ac2687f/"/>
      <url>/posts/2ac2687f/</url>
      
        <content type="html"><![CDATA[<ul><li>安裝 Golang in 開發環境<br>go version 1.11+ is required for gin<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:longsleep/golang-backports</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install golang-go</span><br></pre></td></tr></table></figure></li><li>Without any framework<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"log"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">index</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span>&#123;</span><br><span class="line">    fmt.Fprintf(w, <span class="string">"Hello World!"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">"/"</span>, index)</span><br><span class="line">    http.HandleFunc(<span class="string">"/api"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        res := <span class="string">"Hello World!"</span></span><br><span class="line">        fmt.Fprintf(w, <span class="string">"%s"</span>, res)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    log.Fatal(http.ListenAndServe(<span class="string">":8888"</span>, <span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Using gin</li></ul><ol><li>安裝gin套件<br><code>go get -u github.com/gin-gonic/gin</code></li><li>app.go<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := gin.Default()</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        c.String(http.StatusOK, <span class="string">"Hello World!"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.Run(<span class="string">":8888"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>start server<br><code>go run app.go</code></li><li>compile<br><code>go build</code><br><code>go build -o app</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in Node.js</title>
      <link href="/posts/9a34aaf2/"/>
      <url>/posts/9a34aaf2/</url>
      
        <content type="html"><![CDATA[<ul><li>package<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install express --save</span><br><span class="line">$ npm install opentracing jaeger-client --save</span><br></pre></td></tr></table></figure></li><li>server.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="keyword">var</span> initJaegerTracer = <span class="built_in">require</span>(<span class="string">'jaeger-client'</span>).initTracer;</span><br><span class="line"><span class="keyword">var</span> opentracing = <span class="built_in">require</span>(<span class="string">'opentracing'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initTracer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> config = &#123;</span><br><span class="line">    serviceName: <span class="string">'nodejs'</span>,</span><br><span class="line">    sampler: &#123;<span class="attr">type</span>: <span class="string">'const'</span>, <span class="attr">param</span>: <span class="number">1</span>&#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">const</span> options = &#123;</span><br><span class="line">    logger: &#123;</span><br><span class="line">      info(msg) &#123;<span class="built_in">console</span>.log(<span class="string">'INFO '</span>, msg);&#125;,</span><br><span class="line">      error(msg) &#123;<span class="built_in">console</span>.log(<span class="string">'ERROR'</span>, msg);&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> initJaegerTracer(config, options);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tracer = initTracer();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> span = tracer.startSpan(req.url);</span><br><span class="line">  res.send(<span class="string">'Hello World!'</span>);</span><br><span class="line">  span.finish();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/extract'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> parentSpanContext = tracer.extract(opentracing.FORMAT_HTTP_HEADERS, req.headers);</span><br><span class="line">  <span class="keyword">const</span> span = tracer.startSpan(req.url, &#123; <span class="attr">childOf</span>: parentSpanContext &#125;);</span><br><span class="line">  res.send(<span class="string">'Hello World!'</span>);</span><br><span class="line">  span.finish();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/inject'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.send(<span class="string">'Hello World!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">9527</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Example app listening on port 9527!'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>tag<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">span.setTag(<span class="string">"key"</span>, <span class="string">"value"</span>)</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="https://rainmakerho.github.io/2019/01/15/2019004/" target="_blank" rel="noopener">https://rainmakerho.github.io/2019/01/15/2019004/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> Jaeger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger in Flask</title>
      <link href="/posts/cbe29751/"/>
      <url>/posts/cbe29751/</url>
      
        <content type="html"><![CDATA[<ul><li>package<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ pip install flask flask-sqlalchemy redis</span><br><span class="line">(venv) $ pip install opentracing_instrumentation jaeger-client flask-opentracing</span><br></pre></td></tr></table></figure></li><li>app.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> opentracing</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">from</span> flask_opentracing <span class="keyword">import</span> FlaskTracing</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"><span class="keyword">from</span> jaeger_client <span class="keyword">import</span> Config</span><br><span class="line"><span class="keyword">from</span> opentracing_instrumentation.client_hooks <span class="keyword">import</span> install_all_patches</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initTracer</span><span class="params">()</span>:</span></span><br><span class="line">  config = Config(</span><br><span class="line">      config=&#123;</span><br><span class="line">          <span class="string">'sampler'</span>: &#123;<span class="string">'type'</span>: <span class="string">'const'</span>, <span class="string">'param'</span>: <span class="number">1</span>&#125;,</span><br><span class="line">          <span class="string">'local_agent'</span>: &#123;</span><br><span class="line">              <span class="string">'reporting_host'</span>: <span class="string">'192.168.56.5'</span>,</span><br><span class="line">              <span class="string">'reporting_port'</span>: <span class="number">6831</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      service_name=<span class="string">'flask'</span>)</span><br><span class="line">  <span class="keyword">return</span> config.initialize_tracer()</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">conn = redis.Redis(host=<span class="string">'192.168.56.5'</span>, port=<span class="number">6379</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Trace MySQL and Redis automatically</span></span><br><span class="line">install_all_patches()</span><br><span class="line"></span><br><span class="line"><span class="comment">#Trace all api requests automatically, it's not necessary to create span manually</span></span><br><span class="line">tracer = FlaskTracing(initTracer, trace_all_requests=<span class="literal">True</span>, app=app)</span><br><span class="line"></span><br><span class="line">pjdir = os.path.abspath(os.path.dirname(__file__))</span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_TRACK_MODIFICATIONS'</span>] = <span class="literal">True</span></span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_DATABASE_URI'</span>] = <span class="string">'sqlite:///'</span> + os.path.join(pjdir, <span class="string">'data.sqlite'</span>)</span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">'users'</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = db.Column(db.String(<span class="number">20</span>))</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">db.create_all()</span><br><span class="line">db.session.commit()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> opentracing.tracer.start_active_span(request.path) <span class="keyword">as</span> span:</span><br><span class="line">        print(<span class="string">"do something..."</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!!'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/extract')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extract</span><span class="params">()</span>:</span></span><br><span class="line">    span_context = opentracing.tracer.extract(</span><br><span class="line">                       format=opentracing.Format.HTTP_HEADERS,</span><br><span class="line">                       carrier=request.headers)</span><br><span class="line">    span = opentracing.tracer.start_span(request.path, child_of=span_context)</span><br><span class="line">    print(<span class="string">"do something..."</span>)</span><br><span class="line">    span.finish()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!!'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/inject')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inject</span><span class="params">()</span>:</span></span><br><span class="line">    span = tracer.get_span(request)</span><br><span class="line">    http_header_carrier = &#123;&#125;</span><br><span class="line">    opentracing.global_tracer().inject(span_context=span,</span><br><span class="line">                                       format=opentracing.Format.HTTP_HEADERS,</span><br><span class="line">                                       carrier=http_header_carrier)</span><br><span class="line">    requests.get(<span class="string">'http://192.168.56.5:8888/extract'</span>, headers=http_header_carrier)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!!'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/get')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">()</span>:</span></span><br><span class="line">    redis_data = conn.get(<span class="string">'test'</span>)</span><br><span class="line">    user = User.query.filter_by(name=<span class="string">'test'</span>).first()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'GET'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/set')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set</span><span class="params">()</span>:</span></span><br><span class="line">    conn.set(name=<span class="string">'test'</span>, value=<span class="string">'data'</span>)</span><br><span class="line">    user = User(name=<span class="string">'test'</span>)</span><br><span class="line">    db.session.add(user)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'SET'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></li><li>tag and log<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">span.set_tag(<span class="string">'key'</span>, <span class="string">'value'</span>)</span><br><span class="line">span.log_kv(&#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>, <span class="string">'key2'</span>: value2&#125;)</span><br></pre></td></tr></table></figure></li><li>建立一個單純tracing api功能的server<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_opentracing <span class="keyword">import</span> FlaskTracing</span><br><span class="line"><span class="keyword">from</span> jaeger_client <span class="keyword">import</span> Config</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initTracer</span><span class="params">()</span>:</span></span><br><span class="line">  config = Config(</span><br><span class="line">      config=&#123;</span><br><span class="line">          <span class="string">'sampler'</span>: &#123;<span class="string">'type'</span>: <span class="string">'const'</span>, <span class="string">'param'</span>: <span class="number">1</span>&#125;,</span><br><span class="line">          <span class="string">'local_agent'</span>: &#123;</span><br><span class="line">              <span class="string">'reporting_host'</span>: <span class="string">'192.168.56.5'</span>,</span><br><span class="line">              <span class="string">'reporting_port'</span>: <span class="number">6831</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      service_name=<span class="string">'flask'</span>)</span><br><span class="line">  <span class="keyword">return</span> config.initialize_tracer()</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">tracer = FlaskTracing(initTracer, trace_all_requests=<span class="literal">True</span>, app=app)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!!'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Jaeger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jaeger Deployment</title>
      <link href="/posts/bfd5d971/"/>
      <url>/posts/bfd5d971/</url>
      
        <content type="html"><![CDATA[<p><img src="/posts/bfd5d971/architecture-v1.png" alt></p><ul><li>cassandra DB</li><li>jarger-query</li><li>jaeger-collector</li><li>jaeger-agent</li><li>spark</li></ul><ol><li>建立cassandra數據庫<br><a href="https://hub.docker.com/_/cassandra/" target="_blank" rel="noopener">https://hub.docker.com/_/cassandra/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name cassandra \</span><br><span class="line">  -p9042:9042 \</span><br><span class="line">  -v /opt/docker-software/cassandra/data:/var/lib/cassandra \</span><br><span class="line">  -v /opt/docker-software/cassandra/log:/var/log/cassandra \</span><br><span class="line">  cassandra</span><br></pre></td></tr></table></figure></li><li>建立數據庫中Jaeger table schema (僅需建立一次)<br><a href="https://hub.docker.com/r/jaegertracing/jaeger-cassandra-schema/" target="_blank" rel="noopener">https://hub.docker.com/r/jaegertracing/jaeger-cassandra-schema/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm --name cassandra-schema \</span><br><span class="line">  --link cassandra \</span><br><span class="line">  jaegertracing/jaeger-cassandra-schema:1.18</span><br></pre></td></tr></table></figure>執行結果如下<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Generating the schema <span class="keyword">for</span> the keyspace jaeger_v1_dc1 and datacenter dc1</span><br><span class="line">Using template file /cassandra-schema/v003.cql.tmpl with parameters:</span><br><span class="line">    mode = <span class="built_in">test</span></span><br><span class="line">    datacenter = dc1</span><br><span class="line">    keyspace = jaeger_v1_dc1</span><br><span class="line">    replication = &#123;<span class="string">'class'</span>: <span class="string">'SimpleStrategy'</span>, <span class="string">'replication_factor'</span>: <span class="string">'1'</span>&#125;</span><br><span class="line">    trace_ttl = 172800</span><br><span class="line">    dependencies_ttl = 0</span><br></pre></td></tr></table></figure></li><li>setup jaeger-query<br><a href="https://hub.docker.com/r/jaegertracing/jaeger-query/" target="_blank" rel="noopener">https://hub.docker.com/r/jaegertracing/jaeger-query/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name jaeger-query \</span><br><span class="line">  --link cassandra \</span><br><span class="line">  -p16686:16686 \</span><br><span class="line">  -p16687 \</span><br><span class="line">  -e CASSANDRA_KEYSPACE=jaeger_v1_dc1 \</span><br><span class="line">  -e CASSANDRA_SERVERS=cassandra \</span><br><span class="line">  jaegertracing/jaeger-query:1.18</span><br></pre></td></tr></table></figure></li><li>setup jaeger-collector<br><a href="https://hub.docker.com/r/jaegertracing/jaeger-collector/" target="_blank" rel="noopener">https://hub.docker.com/r/jaegertracing/jaeger-collector/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name jaeger-collector \</span><br><span class="line">  --link cassandra \</span><br><span class="line">  -p9411:9411 \</span><br><span class="line">  -p14250 \</span><br><span class="line">  -p14268:14268 \</span><br><span class="line">  -p14269 \</span><br><span class="line">  -e CASSANDRA_KEYSPACE=jaeger_v1_dc1 \</span><br><span class="line">  -e CASSANDRA_SERVERS=cassandra \</span><br><span class="line">  jaegertracing/jaeger-collector:1.18</span><br></pre></td></tr></table></figure></li><li>setup jaeger-agent<br><a href="https://hub.docker.com/r/jaegertracing/jaeger-agent/" target="_blank" rel="noopener">https://hub.docker.com/r/jaegertracing/jaeger-agent/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name jaeger-agent \</span><br><span class="line">  --link jaeger-collector \</span><br><span class="line">  -p5775:5775/udp \</span><br><span class="line">  -p5778:5778 \</span><br><span class="line">  -p6831:6831/udp \</span><br><span class="line">  -p6832:6832/udp \</span><br><span class="line">  jaegertracing/jaeger-agent:1.18 \</span><br><span class="line">  --reporter.grpc.host-port=jaeger-collector:14250</span><br></pre></td></tr></table></figure></li><li>spark<br><a href="https://hub.docker.com/r/jaegertracing/spark-dependencies/" target="_blank" rel="noopener">https://hub.docker.com/r/jaegertracing/spark-dependencies/</a><br>每執行一次僅會計算一次<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name spark \</span><br><span class="line">  -e STORAGE=cassandra \</span><br><span class="line">  -e CASSANDRA_CONTACT_POINTS=192.168.56.5:9042 \</span><br><span class="line">  jaegertracing/spark-dependencies</span><br></pre></td></tr></table></figure></li><li>docker-compose.yml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;2&apos;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">    cassandra:</span><br><span class="line">      image: cassandra</span><br><span class="line">      container_name: cassandra</span><br><span class="line">      ports:</span><br><span class="line">        - &quot;9042:9042&quot;</span><br><span class="line">      restart: always</span><br><span class="line">      volumes:</span><br><span class="line">        - /opt/docker-software/cassandra/data:/var/lib/cassandra</span><br><span class="line">        - /opt/docker-software/cassandra/log:/var/log/cassandra</span><br><span class="line"></span><br><span class="line">    cassandra-schema:</span><br><span class="line">      image: jaegertracing/jaeger-cassandra-schema:1.18</span><br><span class="line">      container_name: cassandra-schema</span><br><span class="line">      depends_on:</span><br><span class="line">        - cassandra</span><br><span class="line"></span><br><span class="line">    jaeger-query:</span><br><span class="line">      image: jaegertracing/jaeger-query:1.18</span><br><span class="line">      container_name: jaeger-query</span><br><span class="line">      command: [&quot;--cassandra.keyspace=jaeger_v1_dc1&quot;, &quot;--cassandra.servers=cassandra&quot;]</span><br><span class="line">      ports:</span><br><span class="line">        - &quot;16686:16686&quot;</span><br><span class="line">        - &quot;16687&quot;</span><br><span class="line">      restart: always</span><br><span class="line">      depends_on:</span><br><span class="line">        - cassandra-schema</span><br><span class="line"></span><br><span class="line">    jaeger-collector:</span><br><span class="line">      image: jaegertracing/jaeger-collector:1.18</span><br><span class="line">      container_name: jaeger-collector</span><br><span class="line">      command: [&quot;--cassandra.keyspace=jaeger_v1_dc1&quot;, &quot;--cassandra.servers=cassandra&quot;, &quot;--collector.zipkin.http-port=9411&quot;]</span><br><span class="line">      ports:</span><br><span class="line">        - &quot;14269&quot;</span><br><span class="line">        - &quot;14268:14268&quot;</span><br><span class="line">        - &quot;14250&quot;</span><br><span class="line">        - &quot;9411:9411&quot;</span><br><span class="line">      restart: always</span><br><span class="line">      depends_on:</span><br><span class="line">        - cassandra-schema</span><br><span class="line"></span><br><span class="line">    jaeger-agent:</span><br><span class="line">      image: jaegertracing/jaeger-agent:1.18</span><br><span class="line">      container_name: jaeger-agent</span><br><span class="line">      command: [&quot;--reporter.grpc.host-port=jaeger-collector:14250&quot;]</span><br><span class="line">      ports:</span><br><span class="line">        - &quot;5775:5775/udp&quot;</span><br><span class="line">        - &quot;5778:5778&quot;</span><br><span class="line">        - &quot;6831:6831/udp&quot;</span><br><span class="line">        - &quot;6832:6832/udp&quot;</span><br><span class="line">      restart: always</span><br><span class="line">      depends_on:</span><br><span class="line">        - jaeger-collector</span><br><span class="line"></span><br><span class="line">    spark:</span><br><span class="line">      image: jaegertracing/spark-dependencies</span><br><span class="line">      container_name: spark</span><br><span class="line">      environments:</span><br><span class="line">        - STORAGE=cassandra</span><br><span class="line">        - CASSANDRA_CONTACT_POINTS=192.168.56.5:9042</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Jaeger </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jaeger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python pexpect</title>
      <link href="/posts/c7bdd75f/"/>
      <url>/posts/c7bdd75f/</url>
      
        <content type="html"><![CDATA[<p>expect(“xxx”)=&gt;等待”xxx”字串出現</p><ul><li>Sample 1<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pexpect</span><br><span class="line"></span><br><span class="line">c = pexpect.spawn(<span class="string">'sudo su'</span>)</span><br><span class="line">c.expect(<span class="string">'nick: '</span>)</span><br><span class="line">c.sendline(<span class="string">'123456'</span>)</span><br><span class="line">c.sendline(<span class="string">'mkdir test_folder'</span>)</span><br></pre></td></tr></table></figure></li><li>Sample 2<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pexpect</span><br><span class="line"></span><br><span class="line">c = pexpect.spawn(<span class="string">'git push'</span>)</span><br><span class="line">c.expect(<span class="string">'.ssh/id_rsa\':'</span>)</span><br><span class="line">c.sendline(<span class="string">'123456'</span>)</span><br><span class="line">c.expect(<span class="string">'master -&gt; master'</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> shell script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Server for Download in Node.js</title>
      <link href="/posts/c3baede7/"/>
      <url>/posts/c3baede7/</url>
      
        <content type="html"><![CDATA[<ul><li>setup server<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm init</span><br><span class="line">$ npm install express --save</span><br><span class="line">$ node server.js</span><br></pre></td></tr></table></figure></li><li>server.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app     = express();</span><br><span class="line"><span class="keyword">var</span> port    = process.env.PORT || <span class="number">1234</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//files in the public folder(and sub-folders in the public) can be downloaded via url directly</span></span><br><span class="line">app.use(express.static(__dirname + <span class="string">'/public'</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//or you can add any subpath</span></span><br><span class="line"><span class="comment">//app.use('/static', express.static(__dirname + '/public'));</span></span><br><span class="line"></span><br><span class="line">app.listen(port);</span><br></pre></td></tr></table></figure></li><li>目錄結構<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── public</span><br><span class="line">│   ├── image</span><br><span class="line">│   │   └── test.jpg</span><br><span class="line">│   ├── test.txt</span><br><span class="line">│   └── video</span><br><span class="line">│       └── test.mp4</span><br><span class="line">└── server.js</span><br></pre></td></tr></table></figure></li><li>下載網址：<br><a href="http://127.0.0.1:1234/test.txt" target="_blank" rel="noopener">http://127.0.0.1:1234/test.txt</a><br><a href="http://127.0.0.1:1234/video/test.mp4" target="_blank" rel="noopener">http://127.0.0.1:1234/video/test.mp4</a><br><a href="http://127.0.0.1:1234/image/test.jpg" target="_blank" rel="noopener">http://127.0.0.1:1234/image/test.jpg</a><br>如果有設定subpath：<br><a href="http://127.0.0.1:1234/static/test.txt" target="_blank" rel="noopener">http://127.0.0.1:1234/static/test.txt</a><br><a href="http://127.0.0.1:1234/static/video/test.mp4" target="_blank" rel="noopener">http://127.0.0.1:1234/static/video/test.mp4</a><br><a href="http://127.0.0.1:1234/static/image/test.jpg" target="_blank" rel="noopener">http://127.0.0.1:1234/static/image/test.jpg</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Server for Upload in Node.js</title>
      <link href="/posts/ee140a30/"/>
      <url>/posts/ee140a30/</url>
      
        <content type="html"><![CDATA[<ul><li>setup server<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm init</span><br><span class="line">$ npm install express multer --save</span><br><span class="line">$ node server.js</span><br></pre></td></tr></table></figure></li><li>server.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">var</span> multer  = <span class="built_in">require</span>(<span class="string">'multer'</span>);</span><br><span class="line"><span class="keyword">var</span> path    = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">var</span> app     = express();</span><br><span class="line"><span class="keyword">var</span> port    = process.env.PORT || <span class="number">1234</span>;</span><br><span class="line"><span class="keyword">var</span> storage = multer.diskStorage(&#123;</span><br><span class="line">    destination: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">        cb(<span class="literal">null</span>, __dirname + <span class="string">'/uploads/'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    filename: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">const</span> extension = path.extname(file.originalname)</span><br><span class="line">        <span class="keyword">const</span> basename = path.basename(file.originalname, extension)</span><br><span class="line">        cb(<span class="literal">null</span>, basename + <span class="string">'-'</span> + <span class="built_in">Date</span>.now() + extension)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> upload  = multer(&#123; <span class="attr">storage</span>: storage &#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    res.sendFile(__dirname + <span class="string">"/index.html"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/upload'</span>, upload.any(), <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.files)</span><br><span class="line">    res.redirect(<span class="string">'/'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(port);</span><br></pre></td></tr></table></figure></li><li>index.html<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>This is title<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>      =  <span class="string">"uploadForm"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">enctype</span> =  <span class="string">"multipart/form-data"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">action</span>  =  <span class="string">"/upload"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">method</span>  =  <span class="string">"post"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">value</span>=<span class="string">"Choose Files"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>目錄結構<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── uploads</span><br><span class="line">└── server.js</span><br></pre></td></tr></table></figure></li><li>Android HttpClient<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">HttpPost httpPost = new HttpPost(&quot;http://127.0.0.1:1234/upload&quot;);</span><br><span class="line">MultipartEntityBuilder builder = MultipartEntityBuilder.create();</span><br><span class="line">builder.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);</span><br><span class="line"></span><br><span class="line">final File file = new File(&quot;/sdcard/filename&quot;);</span><br><span class="line">FileBody fb = new FileBody(file);</span><br><span class="line">builder.addPart(&quot;file&quot;, fb);</span><br><span class="line"></span><br><span class="line">final HttpEntity entity = builder.build();</span><br><span class="line">httpPost.setEntity(entity);</span><br><span class="line"></span><br><span class="line">HttpResponse httpResponse = httpClient.execute(httpPost);</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="http://expressjs.com/en/resources/middleware/multer.html" target="_blank" rel="noopener">http://expressjs.com/en/resources/middleware/multer.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis in Flask</title>
      <link href="/posts/602ee73a/"/>
      <url>/posts/602ee73a/</url>
      
        <content type="html"><![CDATA[<ol><li>setup redis server in ubuntu<br><code>$ sudo apt install redis-server</code></li><li>redis package for python<br><code>$ pip install redis</code></li><li>Hello World for redis<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">conn = redis.Redis(host=<span class="string">'192.168.56.5'</span>, port=<span class="number">6379</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/get')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_get</span><span class="params">()</span>:</span></span><br><span class="line">    data = conn.get(<span class="string">'key'</span>)</span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'no data found'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/set')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_set</span><span class="params">()</span>:</span></span><br><span class="line">    conn.set(name=<span class="string">'key'</span>, value=<span class="string">'value'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'OK'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ curl -X GET http://192.168.56.5:5000/get</span><br><span class="line">no data found</span><br><span class="line">(venv) $ curl -X GET http://192.168.56.5:5000/<span class="built_in">set</span></span><br><span class="line">OK</span><br><span class="line">(venv) $ curl -X GET http://192.168.56.5:5000/get</span><br><span class="line">value</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ping and nc in Python</title>
      <link href="/posts/dfaf3d8a/"/>
      <url>/posts/dfaf3d8a/</url>
      
        <content type="html"><![CDATA[<p>linux與windows中，ping的參數不一樣</p><ul><li><p>the ping will stop afer 1 package is replied</p><ul><li>in linux<br><code>-c</code></li><li>in windows<br><code>-n</code></li></ul></li><li><p>timeout</p><ul><li>in linux<br><code>-W</code> 單位為秒</li><li>in windows<br><code>-w</code> 單位為毫秒</li></ul></li><li><p>ping</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ping</span><span class="params">(ip)</span>:</span></span><br><span class="line">    ping = subprocess.call([<span class="string">"ping"</span>, <span class="string">"-c"</span>, <span class="string">"1"</span>, ip])</span><br><span class="line">    <span class="keyword">if</span> ping == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">"ping to "</span> + ip + <span class="string">" OK"</span>)</span><br><span class="line">    <span class="keyword">elif</span> ping == <span class="number">2</span>:</span><br><span class="line">        print(<span class="string">"no response from "</span> + ip)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"ping to "</span> + ip + <span class="string">" failed"</span>)</span><br></pre></td></tr></table></figure></li><li><p>netcat</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">netcat</span><span class="params">(ip, port)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        s.connect((ip, int(port)))</span><br><span class="line">        s.shutdown(socket.SHUT_WR)</span><br><span class="line">        s.close()</span><br><span class="line">        print(ip + <span class="string">":"</span> + str(port) + <span class="string">" can be connected"</span>)</span><br><span class="line">    <span class="keyword">except</span> ConnectionRefusedError:</span><br><span class="line">        print(ip + <span class="string">":"</span> + str(port) + <span class="string">" cannot be connected"</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>API Request in Node.js</title>
      <link href="/posts/c81ebda3/"/>
      <url>/posts/c81ebda3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> request = <span class="built_in">require</span>(<span class="string">'request'</span>);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/api'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> payload = &#123;<span class="string">"name"</span>:req.body.name, <span class="string">"password"</span>:req.body.password&#125;</span><br><span class="line">    request.post(&#123;<span class="attr">url</span>:<span class="string">'http://192.168.21.84:8080/api'</span>, <span class="attr">form</span>:payload&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, response, body</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!err &amp;&amp; response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(body);</span><br><span class="line">            res.send(body);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/api'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    request(<span class="string">'http://192.168.21.84:8080/api?abc=123'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error, response, body</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!err &amp;&amp; response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(body);</span><br><span class="line">            res.send(body);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thread in C++11</title>
      <link href="/posts/f5b96866/"/>
      <url>/posts/f5b96866/</url>
      
        <content type="html"><![CDATA[<p>On GCC, compile with -std=c++0x -pthread</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The function we want to execute on the new thread.</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">task1</span><span class="params">(<span class="built_in">string</span> msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"task1 says: "</span> &lt;&lt; msg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Constructs the new thread and runs it. Does not block execution.</span></span><br><span class="line">    <span class="function">thread <span class="title">t1</span><span class="params">(task1, <span class="string">"Hello"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do other things...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Makes the main thread wait for the new thread to finish execution, therefore blocks its own execution.</span></span><br><span class="line">    t1.join();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Calculate FPS</title>
      <link href="/posts/6e72c2d5/"/>
      <url>/posts/6e72c2d5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> imutils.video <span class="keyword">import</span> FPS</span><br><span class="line">fps = FPS().start()</span><br><span class="line"><span class="comment">#do something...</span></span><br><span class="line">fps.update()</span><br><span class="line">fps.stop()</span><br><span class="line">logging.info(<span class="string">"[INFO] elapsed time: &#123;:.3f&#125;"</span>.format(fps.elapsed()))</span><br><span class="line">logging.info(<span class="string">"[INFO] approx. FPS: &#123;:.2f&#125;"</span>.format(fps.fps()))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debug Mode in Python</title>
      <link href="/posts/641ef2a2/"/>
      <url>/posts/641ef2a2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __debug__:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"In debug mode"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Not in debug mode"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ python main.py</span><br><span class="line">In debug mode</span><br><span class="line">$ python -O main.py</span><br><span class="line">Not <span class="keyword">in</span> debug mode</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World for Rust</title>
      <link href="/posts/bfb3e384/"/>
      <url>/posts/bfb3e384/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Install Rust using rustup</p><ul><li>in windows<br><code>https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe</code></li><li>in linux<br><code>curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh</code></li></ul></li><li><p>Hello World</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// This is the main function</span></span><br><span class="line"><span class="function"><span class="keyword">fn</span> <span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="comment">// Statements here are executed when the compiled binary is called</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Print text to the console</span></span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">"Hello World!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ rustc hello.rs</span><br><span class="line">$ ./hello</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Rust </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rust </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World for React</title>
      <link href="/posts/991d0773/"/>
      <url>/posts/991d0773/</url>
      
        <content type="html"><![CDATA[<ol><li>install react installation package<br><code>$ sudo npm install -g create-react-app</code></li><li>create react app<br><code>$ create-react-app hello-world</code></li><li>start react server on port 3000<br><code>$ cd hello-world</code><br><code>$ npm start</code></li><li>install json server<br><code>$ npm install -g json-server</code></li><li>start json server<br>到當前的 project folder<br><code>--watch</code>可以監控當 data 有修改時，會自動 reload server<br><code>$ json-server.cmd --watch --port 3004 ./src/db.json</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask sqlalchemy</title>
      <link href="/posts/9d490f81/"/>
      <url>/posts/9d490f81/</url>
      
        <content type="html"><![CDATA[<ul><li>Preparation<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ pip install flask flask-sqlalchemy</span><br></pre></td></tr></table></figure></li><li>edit main.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">pjdir = os.path.abspath(os.path.dirname(__file__))</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_TRACK_MODIFICATIONS'</span>] = <span class="literal">True</span></span><br><span class="line">app.config[<span class="string">'SQLALCHEMY_DATABASE_URI'</span>] = <span class="string">'sqlite:///'</span> + os.path.join(pjdir, <span class="string">'data.sqlite'</span>)</span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">'users'</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = db.Column(db.String(<span class="number">20</span>))</span><br><span class="line">    username = db.Column(db.String(<span class="number">20</span>), unique=<span class="literal">True</span>, nullable=<span class="literal">False</span>)</span><br><span class="line">    password = db.Column(db.String(<span class="number">20</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, username, password)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.username = username</span><br><span class="line">        self.password = hashlib.sha1(password).hexdigest()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User('&#123;&#125;','&#123;&#125;', '&#123;&#125;')"</span>.format(</span><br><span class="line">            self.name,</span><br><span class="line">            self.username,</span><br><span class="line">            self.password</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">db.create_all()</span><br><span class="line">db.session.commit()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;h1&gt;Hello World!&lt;/h1&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></li><li>Test using flask shell<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ flask shell</span><br><span class="line">Python 3.6.9 (default, Apr 18 2020, 01:56:04) </span><br><span class="line">[GCC 8.4.0] on linux</span><br><span class="line">App: main [production]</span><br><span class="line">Instance: /home/user/data/sqlalchemy/instance</span><br><span class="line">&gt;&gt;&gt; from main import db</span><br><span class="line">&gt;&gt;&gt; db.create_all() # 執行完後，就會建立data.sqlite</span><br><span class="line">&gt;&gt;&gt; from main import User</span><br><span class="line">&gt;&gt;&gt; user_1 = User(&apos;user1&apos;, &apos;username1&apos;, &apos;password_1&apos;.encode(&apos;utf-8&apos;))</span><br><span class="line">&gt;&gt;&gt; user_2 = User(&apos;user2&apos;, &apos;username2&apos;, &apos;password_2&apos;.encode(&apos;utf-8&apos;))</span><br><span class="line">&gt;&gt;&gt; user_3 = User(&apos;user3&apos;, &apos;username3&apos;, &apos;password_3&apos;.encode(&apos;utf-8&apos;))</span><br><span class="line">&gt;&gt;&gt; db.session.add_all([user_1, user_2, user_3])</span><br><span class="line">&gt;&gt;&gt; db.session.commit()</span><br><span class="line">&gt;&gt;&gt; db.session.query(User)</span><br><span class="line">&lt;flask_sqlalchemy.BaseQuery object at 0x05389DB0&gt;</span><br><span class="line">&gt;&gt;&gt; db.session.query(User).all()</span><br><span class="line">[User(&apos;user1&apos;,&apos;username1&apos;, &apos;3833b3a1c69cf71a31d86cb5bb4d3866789b4d1e&apos;), User(&apos;user2&apos;,&apos;username2&apos;, &apos;148dfdc3c539d35004cb808ca84e17ff962af744&apos;), User(&apos;user3&apos;,&apos;username3&apos;, &apos;2f508abdcc1da55a452e2436b47e9a860cdbdcc6&apos;)]</span><br><span class="line">&gt;&gt;&gt; User.query.all()</span><br><span class="line">[User(&apos;user1&apos;,&apos;username1&apos;, &apos;3833b3a1c69cf71a31d86cb5bb4d3866789b4d1e&apos;), User(&apos;user2&apos;,&apos;username2&apos;, &apos;148dfdc3c539d35004cb808ca84e17ff962af744&apos;), User(&apos;user3&apos;,&apos;username3&apos;, &apos;2f508abdcc1da55a452e2436b47e9a860cdbdcc6&apos;)]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask cors</title>
      <link href="/posts/22884ce3/"/>
      <url>/posts/22884ce3/</url>
      
        <content type="html"><![CDATA[<ul><li>document<br><a href="https://flask-cors.readthedocs.io/en/latest/" target="_blank" rel="noopener">https://flask-cors.readthedocs.io/en/latest/</a></li><li>install<br><code>pip install flask_cors</code></li><li>全域設定<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_cors <span class="keyword">import</span> CORS</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">CORS(app)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello, cross-origin-world!"</span></span><br></pre></td></tr></table></figure></li><li>api個別設定<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_cors <span class="keyword">import</span> cross_origin</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="meta">@cross_origin()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello, cross-origin-world!"</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Threading in Python</title>
      <link href="/posts/828ababc/"/>
      <url>/posts/828ababc/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子執行緒的工作函數</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">job</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    print(<span class="string">"Child thread:"</span>, i)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立一個子執行緒</span></span><br><span class="line">t = threading.Thread(target = job)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 執行該子執行緒</span></span><br><span class="line">t.start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主執行緒繼續執行自己的工作</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">  print(<span class="string">"Main thread:"</span>, i)</span><br><span class="line">  time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待 t 這個子執行緒結束</span></span><br><span class="line">t.join()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Done."</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Child thread: 0</span><br><span class="line">Main thread: 0</span><br><span class="line">Main thread: 1</span><br><span class="line">Child thread: 1</span><br><span class="line">Main thread: 2</span><br><span class="line">Child thread: 2</span><br><span class="line">Child thread: 3</span><br><span class="line">Child thread: 4</span><br><span class="line">Done.</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子執行緒的工作函數</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">job</span><span class="params">(num)</span>:</span></span><br><span class="line">  print(<span class="string">"Thread"</span>, num)</span><br><span class="line">  time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立 5 個子執行緒</span></span><br><span class="line">threads = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">  threads.append(threading.Thread(target = job, args = (i,)))</span><br><span class="line">  threads[i].start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主執行緒繼續執行自己的工作</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待所有子執行緒結束</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">  threads[i].join()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Done."</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子執行緒類別</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, num)</span>:</span></span><br><span class="line">    threading.Thread.__init__(self)</span><br><span class="line">    self.num = num</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">    print(<span class="string">"Thread"</span>, self.num)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立 5 個子執行緒</span></span><br><span class="line">threads = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">  threads.append(MyThread(i))</span><br><span class="line">  threads[i].start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主執行緒繼續執行自己的工作</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待所有子執行緒結束</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">  threads[i].join()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Done."</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Thread 0</span><br><span class="line">Thread 1</span><br><span class="line">Thread 2</span><br><span class="line">Thread 3</span><br><span class="line">Thread 4</span><br><span class="line">Done.</span><br></pre></td></tr></table></figure><ul><li>reference<br><a href="https://blog.gtwang.org/programming/python-threading-multithreaded-programming-tutorial/" target="_blank" rel="noopener">https://blog.gtwang.org/programming/python-threading-multithreaded-programming-tutorial/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World for Flask</title>
      <link href="/posts/d5faf89c/"/>
      <url>/posts/d5faf89c/</url>
      
        <content type="html"><![CDATA[<ol><li>setup virtual environment<br><code>$ virtualenv venv</code><br><code>$ source venv/bin/activate</code></li><li>install flask<br><code>(venv)$ pip install flask</code></li><li>edit main.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure></li><li>start server<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> FLASK_APP=main.py</span><br><span class="line">$ flask run --host 0.0.0.0 --port 3000</span><br></pre></td></tr></table></figure></li><li>在debug模式下，有任何修改都會自動reload server<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(venv) $ <span class="built_in">set</span> FLASK_APP=main.py</span><br><span class="line">(venv) $ <span class="built_in">set</span> FLASK_DEBUG=1</span><br><span class="line">(venv) $ flask run --host 0.0.0.0 --port 3000</span><br><span class="line"> * Environment: production</span><br><span class="line">   WARNING: This is a development server. Do not use it <span class="keyword">in</span> a production deployment.</span><br><span class="line">   Use a production WSGI server instead.</span><br><span class="line"> * Debug mode: on</span><br><span class="line"> * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)</span><br><span class="line"> * Restarting with <span class="built_in">stat</span></span><br><span class="line"> * Debugger is active!</span><br><span class="line"> * Debugger PIN: 369-389-049</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World for Node.js</title>
      <link href="/posts/3bd1d4df/"/>
      <url>/posts/3bd1d4df/</url>
      
        <content type="html"><![CDATA[<ol><li>建立project，過程中一直Enter即可<br><code>$ npm init</code></li><li>安裝Express<br><code>$ npm install express --save</code></li><li>edit index.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.send(<span class="string">'Hello World!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">9527</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Example app listening on port 9527!'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>執行server<br><code>$ node index.js</code></li><li>建立<code>server</code> folder (後端代碼通常都寫在該目錄下)</li><li>用JSON模擬後台數據，create <code>data</code> folder<br>edit server/data/getMessage.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> MessageList = [</span><br><span class="line">    &#123; <span class="string">"Message"</span>:<span class="string">"Hello React"</span>&#125;,</span><br><span class="line">    &#123; <span class="string">"Message"</span>:<span class="string">"Hello Webpack"</span>&#125;,</span><br><span class="line">    &#123; <span class="string">"Message"</span>:<span class="string">"Hello Nodejs"</span>&#125;,</span><br><span class="line">    &#123; <span class="string">"Message"</span>:<span class="string">"Hello Express"</span>&#125;</span><br><span class="line">];</span><br><span class="line">exports.getMessageList = <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>) </span>&#123;</span><br><span class="line">    callback(MessageList);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>封裝接口<br>edit server/action/data/getMessage.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> getMessageList = <span class="built_in">require</span>(<span class="string">'../../data/getMessage'</span>);</span><br><span class="line"></span><br><span class="line">exports.execute = <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">     getMessageList.getMessageList(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">         res.send(data);</span><br><span class="line">     &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>定義接口並修改路由配置<br>edit index.js<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新增接口路由</span></span><br><span class="line">app.get(<span class="string">'/data/:module'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c_path = req.params.module;</span><br><span class="line">    <span class="keyword">var</span> Action = <span class="built_in">require</span>(<span class="string">'./server/action/data/'</span> + c_path);</span><br><span class="line">    Action.execute(req, res);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>api<br><a href="http://ip:9527/" target="_blank" rel="noopener">http://ip:9527/</a><br><a href="http://ip:9527/data/getMessage" target="_blank" rel="noopener">http://ip:9527/data/getMessage</a></li></ol><ul><li>nodemon，監控server，當有資料修改時，會自動重啟server<br><code>$ sudo npm install -g nodemon --save</code><br><code>$ nodemon index.js</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask csrf</title>
      <link href="/posts/5a69f21c/"/>
      <url>/posts/5a69f21c/</url>
      
        <content type="html"><![CDATA[<p>csrf: Cross-Site Request Forgery, 跨站請求攻擊或跨站偽造請求<br>在使用者不知情的情況下，讓使用者的瀏覽器自動送出請求給目標網站，利用使用者當前的身份去做一些未經過授權的操作以達攻擊目的<br>開啟csrf的配置，可以確保request是由網頁中的form送出的 而不是hacker自己偽造的<br><code>pip install flask-wtf</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask_wtf.csrf <span class="keyword">import</span> CsrfProtect</span><br><span class="line"></span><br><span class="line">csrf = CsrfProtect()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_app</span><span class="params">()</span>:</span></span><br><span class="line">    app = Flask(__name__)</span><br><span class="line">    app.config[<span class="string">'SECRET_KEY'</span>] = <span class="string">'...'</span></span><br><span class="line">    csrf.init_app(app)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Requests</title>
      <link href="/posts/7b85d651/"/>
      <url>/posts/7b85d651/</url>
      
        <content type="html"><![CDATA[<ul><li>Overview<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://ip:port/api'</span></span><br><span class="line">headers = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json;'</span>&#125;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    res = requests.get(url, headers=headers, timeout=<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">        res_json = res.json()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(traceback.format_exc())</span><br></pre></td></tr></table></figure></li><li>Client side<ul><li>GET<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</span><br><span class="line">payload = &#123; </span><br><span class="line">    <span class="string">'username'</span>: <span class="string">'user'</span>,</span><br><span class="line">    <span class="string">'password'</span>: <span class="string">'1234'</span></span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">'http://ip:port/api?'</span> + urlencode(payload)</span><br><span class="line">res = requests.get(url)</span><br></pre></td></tr></table></figure></li><li>POST<br>payload可分為form/json兩種type<br>form: 透過<code>data=payload</code>傳遞<br>json: 透過<code>json=payload</code>傳遞，且headers必須設定<code>Content-Type</code>為<code>application/json;</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">payload = &#123; </span><br><span class="line">    <span class="string">'username'</span>: <span class="string">'user'</span>,</span><br><span class="line">    <span class="string">'password'</span>: <span class="string">'1234'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'image.png'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    res = requests.post(url, data=payload, files=&#123;<span class="string">'image'</span>: f&#125;)</span><br></pre></td></tr></table></figure>files 參數也可以直接帶入 string<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = requests.post(url, data=payload, files=&#123;<span class="string">'file'</span>: <span class="string">'content_in_a_file'</span>&#125;)</span><br></pre></td></tr></table></figure></li><li>PUT<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = requests.put(url)</span><br></pre></td></tr></table></figure></li><li>DELETE<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = requests.delete(url)</span><br></pre></td></tr></table></figure></li></ul></li><li>Server side<ul><li>GET<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">params = request.args</span><br><span class="line">username = params.get(<span class="string">'username'</span>)</span><br><span class="line">password = params.get(<span class="string">'password'</span>)</span><br></pre></td></tr></table></figure></li><li>POST<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">params = request.form <span class="keyword">or</span> request.get_json()</span><br><span class="line">username = params.get(<span class="string">'username'</span>)</span><br><span class="line">password = params.get(<span class="string">'password'</span>)</span><br><span class="line">upload_file = request.files[<span class="string">'image'</span>]</span><br></pre></td></tr></table></figure></li></ul></li><li>Get params and transfer to dict for GET/POST(form, json) requests<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">params = request.args.to_dict() <span class="keyword">or</span> request.form.to_dict() <span class="keyword">or</span> request.get_json()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pywebview</title>
      <link href="/posts/e8087d33/"/>
      <url>/posts/e8087d33/</url>
      
        <content type="html"><![CDATA[<ul><li>Installation<br><code>pip install pywebview</code></li><li>Hello World<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> webview</span><br><span class="line">webview.create_window(<span class="string">'Hello world'</span>, <span class="string">'https://pywebview.flowrl.com/'</span>)</span><br><span class="line">webview.start()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>try-except in Python</title>
      <link href="/posts/2abc1d30/"/>
      <url>/posts/2abc1d30/</url>
      
        <content type="html"><![CDATA[<p>else: 如果沒有發生例外，執行<br>finally: 無論有沒有發生例外，都會執行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(<span class="string">"Normal execution block"</span>)</span><br><span class="line"><span class="keyword">except</span> A:</span><br><span class="line">    print(<span class="string">"Exception A handle"</span>)</span><br><span class="line"><span class="keyword">except</span> B:</span><br><span class="line">    print(<span class="string">"Exception B handle"</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"Other exception handle"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"if no exception, get here"</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    print(<span class="string">"finally"</span>)</span><br></pre></td></tr></table></figure><p><code>Exception</code>會獲得除了SystemExit，KeyboardInterrupt和GeneratorExit之外的所有異常<br>如果想捕獲這三個異常，將Exception改成<code>BaseException</code>即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   ...</span><br><span class="line"><span class="keyword">except</span> BaseException <span class="keyword">as</span> e:</span><br><span class="line">   ...</span><br><span class="line">   print(<span class="string">'Reason:'</span>, e)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Class Variable in Python</title>
      <link href="/posts/78834cdd/"/>
      <url>/posts/78834cdd/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span><span class="params">(object)</span>:</span></span><br><span class="line">    abc = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">A</span><span class="params">(cls)</span>:</span></span><br><span class="line">         cls.abc = <span class="number">2</span></span><br><span class="line">         print(cls.abc)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">B</span><span class="params">(cls)</span>:</span></span><br><span class="line">         print(cls.abc)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">C</span><span class="params">(cls)</span>:</span></span><br><span class="line">         print(cls.abc) <span class="comment">#還沒建立instance前，cls.abc是class variable</span></span><br><span class="line">         cls.abc = <span class="number">3</span>    <span class="comment">#建立instance variable</span></span><br><span class="line">         print(cls.abc) <span class="comment">#cls.abc是instance variable</span></span><br></pre></td></tr></table></figure><ul><li>sample 1<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">test.B()         <span class="comment">#1</span></span><br><span class="line">print(test.abc)  <span class="comment">#1</span></span><br><span class="line"></span><br><span class="line">test.A()         <span class="comment">#2</span></span><br><span class="line">test.B()         <span class="comment">#2</span></span><br><span class="line">print(test.abc)  <span class="comment">#2</span></span><br><span class="line"></span><br><span class="line">obj = test()</span><br><span class="line">obj.A()          <span class="comment">#2</span></span><br><span class="line">obj.C()          <span class="comment">#2 3</span></span><br><span class="line">test.A()         <span class="comment">#2</span></span><br><span class="line">test.B()         <span class="comment">#2</span></span><br><span class="line">print(test.abc)  <span class="comment">#2</span></span><br><span class="line">obj.C()          <span class="comment">#3 3</span></span><br></pre></td></tr></table></figure></li><li>sample 2<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">obj = test()</span><br><span class="line">obj.C()           <span class="comment">#1 3</span></span><br><span class="line">obj.B()           <span class="comment">#1</span></span><br><span class="line">obj.C()           <span class="comment">#3 3</span></span><br><span class="line"></span><br><span class="line">obj = test()</span><br><span class="line">obj.A()           <span class="comment">#2</span></span><br><span class="line">obj.C()           <span class="comment">#2 3</span></span><br><span class="line">obj.B()           <span class="comment">#2</span></span><br><span class="line">obj.C()           <span class="comment">#3 3</span></span><br></pre></td></tr></table></figure></li><li>sample 3<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">obj = test()</span><br><span class="line">obj.C()           <span class="comment">#1 3</span></span><br><span class="line">obj.B()           <span class="comment">#1</span></span><br><span class="line">obj.C()           <span class="comment">#3 3</span></span><br><span class="line">obj.A()           <span class="comment">#2</span></span><br><span class="line"></span><br><span class="line">obj2 = test()</span><br><span class="line">obj2.C()          <span class="comment">#2 3</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sftp</title>
      <link href="/posts/fc2aa32/"/>
      <url>/posts/fc2aa32/</url>
      
        <content type="html"><![CDATA[<p><code>pip install paramiko</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sftp_upload_file</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        t = paramiko.Transport((<span class="string">"192.168.56.5"</span>, <span class="number">22</span>))</span><br><span class="line">        t.connect(username=<span class="string">"user"</span>, password=<span class="string">"123456"</span>)</span><br><span class="line">        sftp = paramiko.SFTPClient.from_transport(t)</span><br><span class="line">        sftp.put(source, dest)</span><br><span class="line">        t.close()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    sftp_upload_file()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>list Operation in Python</title>
      <link href="/posts/ccc82893/"/>
      <url>/posts/ccc82893/</url>
      
        <content type="html"><![CDATA[<ul><li>List<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = [1, 2, 3, 4]</span><br><span class="line">b = [1, 4, 5, 6]</span><br></pre></td></tr></table></figure></li><li>交集<br>[法一]<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = [val for val in a if val in b] # [1, 4]</span><br></pre></td></tr></table></figure>[法二]<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = list(set(a).intersection(set(b))) # [1, 4]</span><br></pre></td></tr></table></figure></li><li>合集<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = list(set(a).union(set(b))) # [1, 2, 3, 4, 5, 6]</span><br></pre></td></tr></table></figure></li><li>差集<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result_a = list(set(a).difference(set(b))) # [2, 3]</span><br><span class="line">result_b = list(set(b).difference(set(a))) # [5, 6]</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kivy Sample</title>
      <link href="/posts/dad94859/"/>
      <url>/posts/dad94859/</url>
      
        <content type="html"><![CDATA[<p>A type of python GUI</p><ul><li>Installation on windows<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install docutils pygments pypiwin32 kivy_deps.sdl2==0.1.* kivy_deps.glew==0.1.* kivy_deps.gstreamer==0.1.* kivy_deps.angle==0.1.* kivy==1.11.1</span><br></pre></td></tr></table></figure></li><li>Example<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pip install kivy_examples==1.11.1</span><br><span class="line">$ python venv\share\kivy-examples\demo\showcase\main.py</span><br></pre></td></tr></table></figure></li><li>Hello World<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from kivy.app import App</span><br><span class="line">from kivy.uix.button import Button</span><br><span class="line"></span><br><span class="line">class TestApp(App):</span><br><span class="line">    def build(self):</span><br><span class="line">        return Button(text=&apos;Hello World&apos;)</span><br><span class="line"></span><br><span class="line">TestApp().run()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> kivy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Samba in ubuntu</title>
      <link href="/posts/d6bbfdfc/"/>
      <url>/posts/d6bbfdfc/</url>
      
        <content type="html"><![CDATA[<ol><li><p>install samba<br><code>sudo apt install samba</code></p></li><li><p>samba service<br><code>sudo service smbd stop</code><br><code>sudo service smbd start</code></p></li><li><p>samba config</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/samba/smb.conf</span><br><span class="line">[share]</span><br><span class="line">   path = /home/user</span><br><span class="line">   writeable = yes</span><br><span class="line">   browseable = yes</span><br><span class="line"></span><br><span class="line">// optional config</span><br><span class="line">valid users = user</span><br><span class="line"><span class="built_in">read</span> only = no</span><br><span class="line">create mask = 0644         ;檔案遮罩</span><br><span class="line">directory mask = 0755      ;資料夾遮罩</span><br><span class="line">public = yes               ;guest也可存取</span><br><span class="line">guess account = root       ;用samba登入預設是root權限</span><br><span class="line">force user = root          ;用samba登入預設是root權限</span><br><span class="line">force group = root         ;用samba登入預設是root權限</span><br><span class="line">guest ok = yes</span><br></pre></td></tr></table></figure></li><li><p>create account<br><code>sudo smbpasswd -a $USER</code></p></li><li><p>activate account<br><code>sudo smbpasswd -a $USER -e</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Notes</title>
      <link href="/posts/106b04cc/"/>
      <url>/posts/106b04cc/</url>
      
        <content type="html"><![CDATA[<ul><li>change image format<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install imagemagick</span><br><span class="line">//change png files to jpg</span><br><span class="line">$ mogrify -format jpg *.png</span><br><span class="line">//change bmp files to jpg</span><br><span class="line">$ mogrify -format jpg *.bmp</span><br></pre></td></tr></table></figure></li><li>deb files<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dpkg -i 軟體套件名稱.deb</span><br><span class="line">$ sudo apt-get remove 軟體套件名稱</span><br></pre></td></tr></table></figure></li><li>check connection status<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ping ip</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"hello"</span> | nc ip port</span><br></pre></td></tr></table></figure></li><li>file format<br>dos格式文件傳輸到unix系統時，會在每行的結尾多一個<code>^M</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//<span class="keyword">in</span> vim</span><br><span class="line">//查詢file format</span><br><span class="line">:<span class="built_in">set</span> ff</span><br><span class="line"></span><br><span class="line">//  設定file format</span><br><span class="line">:<span class="built_in">set</span> ff=dos</span><br><span class="line">:<span class="built_in">set</span> ff=unix</span><br></pre></td></tr></table></figure></li><li>add-apt-repository<br>透過add-apt-repository新增的資訊，會存在<br><code>/etc/apt/sources.list.d</code></li><li>查詢一個process在執行期間，context switch的次數<ul><li>voluntary_ctxt_switches: 自願  </li><li>nonvoluntary_ctxt_switches: 強制  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ grep ctxt /proc/6415/status</span><br><span class="line">voluntary_ctxt_switches:        80757</span><br><span class="line">nonvoluntary_ctxt_switches:     805</span><br></pre></td></tr></table></figure></li></ul></li><li>查看process切换的每秒統計值<br><code>pidstat -w 1</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install sysstat</span><br><span class="line">$ pidstat -w 1</span><br><span class="line">Linux 4.4.0-131-generic (vm-docker)     04/02/2019      _x86_64_        (4 CPU)</span><br><span class="line"></span><br><span class="line">05:14:06 PM   UID       PID   cswch/s nvcswch/s  Command</span><br><span class="line">05:14:07 PM     0         7     38.61      0.00  rcu_sched</span><br><span class="line">05:14:07 PM     0        23     19.80      0.00  ksoftirqd/3</span><br><span class="line">05:14:07 PM     0        29      0.99      0.00  khungtaskd</span><br></pre></td></tr></table></figure></li><li>useful tools<ul><li>landscape-common<br>Show system information when ssh logging<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">System information as of Fri Jun 12 16:37:37 CST 2020</span><br><span class="line"></span><br><span class="line">System load:                    0.24</span><br><span class="line">Usage of /:                     25.7% of 97.93GB</span><br><span class="line">Memory usage:                   78%</span><br><span class="line">Swap usage:                     71%</span><br><span class="line">Processes:                      310</span><br><span class="line">Users logged <span class="keyword">in</span>:                1</span><br><span class="line">IP address <span class="keyword">for</span> enp0s3:          10.0.2.15</span><br><span class="line">IP address <span class="keyword">for</span> enp0s8:          192.168.56.5</span><br></pre></td></tr></table></figure></li></ul></li><li>Boot Information<ul><li>boot-id, 每次重開機都會自動生成一組unique uuid<br><code>cat /proc/sys/kernel/random/boot_id</code></li><li>Bootup Identifier History<br><code>journalctl --list-boots</code></li></ul></li><li>Machine Identifier<br><code>cat /etc/machine-id</code></li><li>Hard Drive Block ID<br><code>sudo blkid | grep -oP &#39;UUID=&quot;\K[^&quot;]+&#39;</code></li><li>Drive Identifiers<br><code>sudo fdisk -l | grep -i &quot;Disk identifier&quot; | awk &#39;{print $3}&#39;</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>設定時間 in ubuntu</title>
      <link href="/posts/5a578a77/"/>
      <url>/posts/5a578a77/</url>
      
        <content type="html"><![CDATA[<ul><li>config ntp on/off<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ timedatectl set-ntp 0</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.timedate1.set-ntp ===</span><br><span class="line">Authentication is required to control whether network time synchronization shall be enabled.</span><br><span class="line">Authenticating as: user,,, (user)</span><br><span class="line">Password: </span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br><span class="line"></span><br><span class="line">$ timedatectl set-ntp 1</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.timedate1.set-ntp ===</span><br><span class="line">Authentication is required to control whether network time synchronization shall be enabled.</span><br><span class="line">Authenticating as: user,,, (user)</span><br><span class="line">Password: </span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br></pre></td></tr></table></figure></li><li>set time<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo timedatectl set-time &quot;2019-8-20 18:59:40&quot;</span><br><span class="line">$ sudo date -s &quot;Thu Dec 31 16:33:14 CST 2020&quot;</span><br></pre></td></tr></table></figure></li><li>set timezone<ul><li>Ubuntu<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dpkg-reconfigure tzdata</span><br></pre></td></tr></table></figure></li><li>Centos<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ timedatectl list-timezones</span><br><span class="line">$ sudo timedatectl set-timezone Asia/Taipei</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速建立 Docker Image</title>
      <link href="/posts/6a707551/"/>
      <url>/posts/6a707551/</url>
      
        <content type="html"><![CDATA[<ul><li>Dockerfile<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.6-alpine</span><br><span class="line"></span><br><span class="line">RUN apk update &amp;&amp; \</span><br><span class="line">    apk add bash &amp;&amp; \</span><br><span class="line">    pip install --no-cache-dir docker &amp;&amp; \</span><br><span class="line">    rm -rf /var/cache/apk/*</span><br><span class="line"></span><br><span class="line">CMD tail -f /dev/null</span><br></pre></td></tr></table></figure></li><li>build &amp; run<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker build --no-cache -t myimage .</span><br><span class="line">$ docker images</span><br><span class="line">REPOSITORY                  TAG                  IMAGE ID                  CREATED                  SIZE</span><br><span class="line">myimage                     latest               2afb69df98d1              27 minutes ago           79MB</span><br><span class="line">$ docker run -d --name mycontainer -v /var/run/docker.sock:/var/run/docker.sock myimage</span><br><span class="line">$ docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                  COMMAND                  CREATED                  STATUS                  PORTS                  NAMES</span><br><span class="line">9a2daa815404        myimage                <span class="string">"/bin/sh -c 'tail -f…"</span>   18 minutes ago           Up 18 minutes                                  mycontainer</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Client</title>
      <link href="/posts/20536423/"/>
      <url>/posts/20536423/</url>
      
        <content type="html"><![CDATA[<p>在container的程式中，獲取docker information</p><ul><li>安裝docker module<br><code>pip install docker</code><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(venv) user@vm-docker:~$ pip freeze</span><br><span class="line">certifi==2019.3.9</span><br><span class="line">chardet==3.0.4</span><br><span class="line">docker==3.7.2</span><br><span class="line">docker-pycreds==0.4.0</span><br><span class="line">idna==2.8</span><br><span class="line">requests==2.21.0</span><br><span class="line">six==1.12.0</span><br><span class="line">urllib3==1.24.1</span><br><span class="line">websocket-client==0.56.0</span><br></pre></td></tr></table></figure></li><li>container執行時，必須要建立以下volume<br><code>-v /var/run/docker.sock:/var/run/docker.sock</code></li><li>讀取container的image information<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> docker</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"/etc/hostname"</span>, <span class="string">"r"</span>, encoding=<span class="string">'utf8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    container_id = f.read()</span><br><span class="line">container_id = container_id.strip()</span><br><span class="line">client = docker.from_env()</span><br><span class="line">container = client.containers.get(str(container_id))</span><br><span class="line">image_info = container.attrs[<span class="string">'Config'</span>][<span class="string">'Image'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#container_id = 12220ad7e446</span></span><br><span class="line"><span class="comment">#info = myimage:1.0.2</span></span><br></pre></td></tr></table></figure></li><li>讀取cpu info及memory info<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> docker</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"/etc/hostname"</span>, <span class="string">"r"</span>, encoding=<span class="string">'utf8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    container_id = f.read()</span><br><span class="line">container_id = container_id.strip()</span><br><span class="line">client = docker.from_env()</span><br><span class="line">container = client.containers.get(str(container_id))</span><br><span class="line">stats = container.stats(stream=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">cpuDelta = int(stats[<span class="string">'cpu_stats'</span>][<span class="string">'cpu_usage'</span>][<span class="string">'total_usage'</span>]) - int(stats[<span class="string">'precpu_stats'</span>][<span class="string">'cpu_usage'</span>][<span class="string">'total_usage'</span>])</span><br><span class="line">systemDelta = int(stats[<span class="string">'cpu_stats'</span>][<span class="string">'system_cpu_usage'</span>]) - int(stats[<span class="string">'precpu_stats'</span>][<span class="string">'system_cpu_usage'</span>])</span><br><span class="line">usage = int(stats[<span class="string">'memory_stats'</span>][<span class="string">'usage'</span>])</span><br><span class="line">total = int(stats[<span class="string">'memory_stats'</span>][<span class="string">'limit'</span>])</span><br><span class="line"></span><br><span class="line">core = int(stats[<span class="string">'cpu_stats'</span>][<span class="string">'online_cpus'</span>])</span><br><span class="line">cpu_usage = (cpuDelta / systemDelta) * len(stats[<span class="string">'cpu_stats'</span>][<span class="string">'cpu_usage'</span>][<span class="string">'percpu_usage'</span>]) * <span class="number">100.0</span></span><br><span class="line">mem_usage = float(usage/(<span class="number">1024.0</span>*<span class="number">1024.0</span>))</span><br><span class="line">mem_total = float(total/(<span class="number">1024.0</span>*<span class="number">1024.0</span>))</span><br></pre></td></tr></table></figure></li><li>container.attrs內容，也可以經由docker inspect container_id得到<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">'Id'</span>: <span class="string">'9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454'</span>,</span><br><span class="line">    <span class="string">'Created'</span>: <span class="string">'2020-05-25T06: 01: 15.047049798Z'</span>,</span><br><span class="line">    <span class="string">'Path'</span>: <span class="string">'/bin/sh'</span>,</span><br><span class="line">    <span class="string">'Args'</span>: [<span class="string">'-c'</span>,</span><br><span class="line">    <span class="string">'tail-f/dev/null'</span>],</span><br><span class="line">    <span class="string">'State'</span>: &#123;</span><br><span class="line">        <span class="string">'Status'</span>: <span class="string">'running'</span>,</span><br><span class="line">        <span class="string">'Running'</span>: True,</span><br><span class="line">        <span class="string">'Paused'</span>: False,</span><br><span class="line">        <span class="string">'Restarting'</span>: False,</span><br><span class="line">        <span class="string">'OOMKilled'</span>: False,</span><br><span class="line">        <span class="string">'Dead'</span>: False,</span><br><span class="line">        <span class="string">'Pid'</span>: 18810,</span><br><span class="line">        <span class="string">'ExitCode'</span>: 0,</span><br><span class="line">        <span class="string">'Error'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'StartedAt'</span>: <span class="string">'2020-05-25T06: 01: 15.690055067Z'</span>,</span><br><span class="line">        <span class="string">'FinishedAt'</span>: <span class="string">'0001-01-01T00: 00: 00Z'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'Image'</span>: <span class="string">'sha256: 2afb69df98d14bd72295d3b5f61877879c35b2c1ba1300289f9f4ba3b9e54749'</span>,</span><br><span class="line">    <span class="string">'ResolvConfPath'</span>: <span class="string">'/var/lib/docker/containers/9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454/resolv.conf'</span>,</span><br><span class="line">    <span class="string">'HostnamePath'</span>: <span class="string">'/var/lib/docker/containers/9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454/hostname'</span>,</span><br><span class="line">    <span class="string">'HostsPath'</span>: <span class="string">'/var/lib/docker/containers/9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454/hosts'</span>,</span><br><span class="line">    <span class="string">'LogPath'</span>: <span class="string">'/var/lib/docker/containers/9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454/9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454-json.log'</span>,</span><br><span class="line">    <span class="string">'Name'</span>: <span class="string">'/mycontainer'</span>,</span><br><span class="line">    <span class="string">'RestartCount'</span>: 0,</span><br><span class="line">    <span class="string">'Driver'</span>: <span class="string">'overlay2'</span>,</span><br><span class="line">    <span class="string">'Platform'</span>: <span class="string">'linux'</span>,</span><br><span class="line">    <span class="string">'MountLabel'</span>: <span class="string">''</span>,</span><br><span class="line">    <span class="string">'ProcessLabel'</span>: <span class="string">''</span>,</span><br><span class="line">    <span class="string">'AppArmorProfile'</span>: <span class="string">'docker-default'</span>,</span><br><span class="line">    <span class="string">'ExecIDs'</span>: [<span class="string">'404b508dfb4fad457a7683f18fe2a96e6917c604261c35f8f3ba053c8ef64eb4'</span>],</span><br><span class="line">    <span class="string">'HostConfig'</span>: &#123;</span><br><span class="line">        <span class="string">'Binds'</span>: [<span class="string">'/var/run/docker.sock: /var/run/docker.sock'</span>],</span><br><span class="line">        <span class="string">'ContainerIDFile'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'LogConfig'</span>: &#123;</span><br><span class="line">            <span class="string">'Type'</span>: <span class="string">'json-file'</span>,</span><br><span class="line">            <span class="string">'Config'</span>: &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'NetworkMode'</span>: <span class="string">'default'</span>,</span><br><span class="line">        <span class="string">'PortBindings'</span>: &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'RestartPolicy'</span>: &#123;</span><br><span class="line">            <span class="string">'Name'</span>: <span class="string">'no'</span>,</span><br><span class="line">            <span class="string">'MaximumRetryCount'</span>: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'AutoRemove'</span>: False,</span><br><span class="line">        <span class="string">'VolumeDriver'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'VolumesFrom'</span>: None,</span><br><span class="line">        <span class="string">'CapAdd'</span>: None,</span><br><span class="line">        <span class="string">'CapDrop'</span>: None,</span><br><span class="line">        <span class="string">'Capabilities'</span>: None,</span><br><span class="line">        <span class="string">'Dns'</span>: [],</span><br><span class="line">        <span class="string">'DnsOptions'</span>: [],</span><br><span class="line">        <span class="string">'DnsSearch'</span>: [],</span><br><span class="line">        <span class="string">'ExtraHosts'</span>: None,</span><br><span class="line">        <span class="string">'GroupAdd'</span>: None,</span><br><span class="line">        <span class="string">'IpcMode'</span>: <span class="string">'private'</span>,</span><br><span class="line">        <span class="string">'Cgroup'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'Links'</span>: None,</span><br><span class="line">        <span class="string">'OomScoreAdj'</span>: 0,</span><br><span class="line">        <span class="string">'PidMode'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'Privileged'</span>: False,</span><br><span class="line">        <span class="string">'PublishAllPorts'</span>: False,</span><br><span class="line">        <span class="string">'ReadonlyRootfs'</span>: False,</span><br><span class="line">        <span class="string">'SecurityOpt'</span>: None,</span><br><span class="line">        <span class="string">'UTSMode'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'UsernsMode'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'ShmSize'</span>: 67108864,</span><br><span class="line">        <span class="string">'Runtime'</span>: <span class="string">'runc'</span>,</span><br><span class="line">        <span class="string">'ConsoleSize'</span>: [0,</span><br><span class="line">        0],</span><br><span class="line">        <span class="string">'Isolation'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'CpuShares'</span>: 0,</span><br><span class="line">        <span class="string">'Memory'</span>: 0,</span><br><span class="line">        <span class="string">'NanoCpus'</span>: 0,</span><br><span class="line">        <span class="string">'CgroupParent'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'BlkioWeight'</span>: 0,</span><br><span class="line">        <span class="string">'BlkioWeightDevice'</span>: [],</span><br><span class="line">        <span class="string">'BlkioDeviceReadBps'</span>: None,</span><br><span class="line">        <span class="string">'BlkioDeviceWriteBps'</span>: None,</span><br><span class="line">        <span class="string">'BlkioDeviceReadIOps'</span>: None,</span><br><span class="line">        <span class="string">'BlkioDeviceWriteIOps'</span>: None,</span><br><span class="line">        <span class="string">'CpuPeriod'</span>: 0,</span><br><span class="line">        <span class="string">'CpuQuota'</span>: 0,</span><br><span class="line">        <span class="string">'CpuRealtimePeriod'</span>: 0,</span><br><span class="line">        <span class="string">'CpuRealtimeRuntime'</span>: 0,</span><br><span class="line">        <span class="string">'CpusetCpus'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'CpusetMems'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'Devices'</span>: [],</span><br><span class="line">        <span class="string">'DeviceCgroupRules'</span>: None,</span><br><span class="line">        <span class="string">'DeviceRequests'</span>: None,</span><br><span class="line">        <span class="string">'KernelMemory'</span>: 0,</span><br><span class="line">        <span class="string">'KernelMemoryTCP'</span>: 0,</span><br><span class="line">        <span class="string">'MemoryReservation'</span>: 0,</span><br><span class="line">        <span class="string">'MemorySwap'</span>: 0,</span><br><span class="line">        <span class="string">'MemorySwappiness'</span>: None,</span><br><span class="line">        <span class="string">'OomKillDisable'</span>: False,</span><br><span class="line">        <span class="string">'PidsLimit'</span>: None,</span><br><span class="line">        <span class="string">'Ulimits'</span>: None,</span><br><span class="line">        <span class="string">'CpuCount'</span>: 0,</span><br><span class="line">        <span class="string">'CpuPercent'</span>: 0,</span><br><span class="line">        <span class="string">'IOMaximumIOps'</span>: 0,</span><br><span class="line">        <span class="string">'IOMaximumBandwidth'</span>: 0,</span><br><span class="line">        <span class="string">'MaskedPaths'</span>: [<span class="string">'/proc/asound'</span>,</span><br><span class="line">        <span class="string">'/proc/acpi'</span>,</span><br><span class="line">        <span class="string">'/proc/kcore'</span>,</span><br><span class="line">        <span class="string">'/proc/keys'</span>,</span><br><span class="line">        <span class="string">'/proc/latency_stats'</span>,</span><br><span class="line">        <span class="string">'/proc/timer_list'</span>,</span><br><span class="line">        <span class="string">'/proc/timer_stats'</span>,</span><br><span class="line">        <span class="string">'/proc/sched_debug'</span>,</span><br><span class="line">        <span class="string">'/proc/scsi'</span>,</span><br><span class="line">        <span class="string">'/sys/firmware'</span>],</span><br><span class="line">        <span class="string">'ReadonlyPaths'</span>: [<span class="string">'/proc/bus'</span>,</span><br><span class="line">        <span class="string">'/proc/fs'</span>,</span><br><span class="line">        <span class="string">'/proc/irq'</span>,</span><br><span class="line">        <span class="string">'/proc/sys'</span>,</span><br><span class="line">        <span class="string">'/proc/sysrq-trigger'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'GraphDriver'</span>: &#123;</span><br><span class="line">        <span class="string">'Data'</span>: &#123;</span><br><span class="line">            <span class="string">'LowerDir'</span>: <span class="string">'/var/lib/docker/overlay2/88b48830bb0194f5b8f508e2b477a6a6daaa79efa4875c7e595ed20ec49456b3-init/diff: /var/lib/docker/overlay2/6152ebc3b355019c9cb78069a1d4fef7ce334efe5228778b0325f8ec8b947cfe/diff: /var/lib/docker/overlay2/eb4051b611cab6a92f5d437d641b1aa67c586e1ba756502f5d756b48ed8a38da/diff: /var/lib/docker/overlay2/9d82a25654ecc29f794a0b640c030d491b15f342b163306cb1155ae74065471f/diff: /var/lib/docker/overlay2/509403a386d5a3e7a7fac3b528c9d1353bd204cfc9af0632190afd1565776bd8/diff: /var/lib/docker/overlay2/519ff85e86fcc2feb97debfba7652b01325e5ee797bee0ede9e7052c4f98477e/diff: /var/lib/docker/overlay2/29d4cbdb840f8f5aad65fda1260fddadcfcde3b89d3a0621cdd96331f94ff4f5/diff'</span>,</span><br><span class="line">            <span class="string">'MergedDir'</span>: <span class="string">'/var/lib/docker/overlay2/88b48830bb0194f5b8f508e2b477a6a6daaa79efa4875c7e595ed20ec49456b3/merged'</span>,</span><br><span class="line">            <span class="string">'UpperDir'</span>: <span class="string">'/var/lib/docker/overlay2/88b48830bb0194f5b8f508e2b477a6a6daaa79efa4875c7e595ed20ec49456b3/diff'</span>,</span><br><span class="line">            <span class="string">'WorkDir'</span>: <span class="string">'/var/lib/docker/overlay2/88b48830bb0194f5b8f508e2b477a6a6daaa79efa4875c7e595ed20ec49456b3/work'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'Name'</span>: <span class="string">'overlay2'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'Mounts'</span>: [&#123;</span><br><span class="line">        <span class="string">'Type'</span>: <span class="string">'bind'</span>,</span><br><span class="line">        <span class="string">'Source'</span>: <span class="string">'/var/run/docker.sock'</span>,</span><br><span class="line">        <span class="string">'Destination'</span>: <span class="string">'/var/run/docker.sock'</span>,</span><br><span class="line">        <span class="string">'Mode'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'RW'</span>: True,</span><br><span class="line">        <span class="string">'Propagation'</span>: <span class="string">'rprivate'</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">'Config'</span>: &#123;</span><br><span class="line">        <span class="string">'Hostname'</span>: <span class="string">'9a2daa815404'</span>,</span><br><span class="line">        <span class="string">'Domainname'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'User'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'AttachStdin'</span>: False,</span><br><span class="line">        <span class="string">'AttachStdout'</span>: False,</span><br><span class="line">        <span class="string">'AttachStderr'</span>: False,</span><br><span class="line">        <span class="string">'Tty'</span>: False,</span><br><span class="line">        <span class="string">'OpenStdin'</span>: False,</span><br><span class="line">        <span class="string">'StdinOnce'</span>: False,</span><br><span class="line">        <span class="string">'Env'</span>: [<span class="string">'PATH=/usr/local/bin: /usr/local/sbin: /usr/local/bin: /usr/sbin: /usr/bin: /sbin: /bin'</span>,</span><br><span class="line">        <span class="string">'LANG=C.UTF-8'</span>,</span><br><span class="line">        <span class="string">'GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D'</span>,</span><br><span class="line">        <span class="string">'PYTHON_VERSION=3.6.10'</span>,</span><br><span class="line">        <span class="string">'PYTHON_PIP_VERSION=20.1.1'</span>,</span><br><span class="line">        <span class="string">'PYTHON_GET_PIP_URL=https: //github.com/pypa/get-pip/raw/eff16c878c7fd6b688b9b4c4267695cf1a0bf01b/get-pip.py'</span>,</span><br><span class="line">        <span class="string">'PYTHON_GET_PIP_SHA256=b3153ec0cf7b7bbf9556932aa37e4981c35dc2a2c501d70d91d2795aa532be79'</span>],</span><br><span class="line">        <span class="string">'Cmd'</span>: [<span class="string">'/bin/sh'</span>,</span><br><span class="line">        <span class="string">'-c'</span>,</span><br><span class="line">        <span class="string">'tail-f/dev/null'</span>],</span><br><span class="line">        <span class="string">'Image'</span>: <span class="string">'myimage'</span>,</span><br><span class="line">        <span class="string">'Volumes'</span>: None,</span><br><span class="line">        <span class="string">'WorkingDir'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'Entrypoint'</span>: None,</span><br><span class="line">        <span class="string">'OnBuild'</span>: None,</span><br><span class="line">        <span class="string">'Labels'</span>: &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'NetworkSettings'</span>: &#123;</span><br><span class="line">        <span class="string">'Bridge'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'SandboxID'</span>: <span class="string">'d8e855fbadd1f3fc1633aa7478beb01fbfcca89bfddcd58cd5636b74f0791362'</span>,</span><br><span class="line">        <span class="string">'HairpinMode'</span>: False,</span><br><span class="line">        <span class="string">'LinkLocalIPv6Address'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'LinkLocalIPv6PrefixLen'</span>: 0,</span><br><span class="line">        <span class="string">'Ports'</span>: &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'SandboxKey'</span>: <span class="string">'/var/run/docker/netns/d8e855fbadd1'</span>,</span><br><span class="line">        <span class="string">'SecondaryIPAddresses'</span>: None,</span><br><span class="line">        <span class="string">'SecondaryIPv6Addresses'</span>: None,</span><br><span class="line">        <span class="string">'EndpointID'</span>: <span class="string">'303b3ffdbb01586ea6319d1cfeb7c68839c1b8986dfdc212d1888aea9af52797'</span>,</span><br><span class="line">        <span class="string">'Gateway'</span>: <span class="string">'172.17.0.1'</span>,</span><br><span class="line">        <span class="string">'GlobalIPv6Address'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'GlobalIPv6PrefixLen'</span>: 0,</span><br><span class="line">        <span class="string">'IPAddress'</span>: <span class="string">'172.17.0.2'</span>,</span><br><span class="line">        <span class="string">'IPPrefixLen'</span>: 16,</span><br><span class="line">        <span class="string">'IPv6Gateway'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'MacAddress'</span>: <span class="string">'02: 42: ac: 11: 00: 02'</span>,</span><br><span class="line">        <span class="string">'Networks'</span>: &#123;</span><br><span class="line">            <span class="string">'bridge'</span>: &#123;</span><br><span class="line">                <span class="string">'IPAMConfig'</span>: None,</span><br><span class="line">                <span class="string">'Links'</span>: None,</span><br><span class="line">                <span class="string">'Aliases'</span>: None,</span><br><span class="line">                <span class="string">'NetworkID'</span>: <span class="string">'7a6b48661c84f84e7abff76b99a0bdcdedca5e791aee328263ab4f446c4358db'</span>,</span><br><span class="line">                <span class="string">'EndpointID'</span>: <span class="string">'303b3ffdbb01586ea6319d1cfeb7c68839c1b8986dfdc212d1888aea9af52797'</span>,</span><br><span class="line">                <span class="string">'Gateway'</span>: <span class="string">'172.17.0.1'</span>,</span><br><span class="line">                <span class="string">'IPAddress'</span>: <span class="string">'172.17.0.2'</span>,</span><br><span class="line">                <span class="string">'IPPrefixLen'</span>: 16,</span><br><span class="line">                <span class="string">'IPv6Gateway'</span>: <span class="string">''</span>,</span><br><span class="line">                <span class="string">'GlobalIPv6Address'</span>: <span class="string">''</span>,</span><br><span class="line">                <span class="string">'GlobalIPv6PrefixLen'</span>: 0,</span><br><span class="line">                <span class="string">'MacAddress'</span>: <span class="string">'02: 42: ac: 11: 00: 02'</span>,</span><br><span class="line">                <span class="string">'DriverOpts'</span>: None</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>container.stats內容<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">'read'</span>: <span class="string">'2020-05-25T06: 01: 26.458566764Z'</span>,</span><br><span class="line">    <span class="string">'preread'</span>: <span class="string">'2020-05-25T06: 01: 25.443024014Z'</span>,</span><br><span class="line">    <span class="string">'pids_stats'</span>: &#123;</span><br><span class="line">        <span class="string">'current'</span>: 3</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'blkio_stats'</span>: &#123;</span><br><span class="line">        <span class="string">'io_service_bytes_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_serviced_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_queue_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_service_time_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_wait_time_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_merged_recursive'</span>: [],</span><br><span class="line">        <span class="string">'io_time_recursive'</span>: [],</span><br><span class="line">        <span class="string">'sectors_recursive'</span>: []</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'num_procs'</span>: 0,</span><br><span class="line">    <span class="string">'storage_stats'</span>: &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'cpu_stats'</span>: &#123;</span><br><span class="line">        <span class="string">'cpu_usage'</span>: &#123;</span><br><span class="line">            <span class="string">'total_usage'</span>: 748089610,</span><br><span class="line">            <span class="string">'percpu_usage'</span>: [174746977,</span><br><span class="line">            1024708,</span><br><span class="line">            366764419,</span><br><span class="line">            205553506],</span><br><span class="line">            <span class="string">'usage_in_kernelmode'</span>: 100000000,</span><br><span class="line">            <span class="string">'usage_in_usermode'</span>: 640000000</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'system_cpu_usage'</span>: 3451400000000,</span><br><span class="line">        <span class="string">'online_cpus'</span>: 4,</span><br><span class="line">        <span class="string">'throttling_data'</span>: &#123;</span><br><span class="line">            <span class="string">'periods'</span>: 0,</span><br><span class="line">            <span class="string">'throttled_periods'</span>: 0,</span><br><span class="line">            <span class="string">'throttled_time'</span>: 0</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'precpu_stats'</span>: &#123;</span><br><span class="line">        <span class="string">'cpu_usage'</span>: &#123;</span><br><span class="line">            <span class="string">'total_usage'</span>: 748024997,</span><br><span class="line">            <span class="string">'percpu_usage'</span>: [174746977,</span><br><span class="line">            1024708,</span><br><span class="line">            366764419,</span><br><span class="line">            205488893],</span><br><span class="line">            <span class="string">'usage_in_kernelmode'</span>: 100000000,</span><br><span class="line">            <span class="string">'usage_in_usermode'</span>: 640000000</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'system_cpu_usage'</span>: 3447470000000,</span><br><span class="line">        <span class="string">'online_cpus'</span>: 4,</span><br><span class="line">        <span class="string">'throttling_data'</span>: &#123;</span><br><span class="line">            <span class="string">'periods'</span>: 0,</span><br><span class="line">            <span class="string">'throttled_periods'</span>: 0,</span><br><span class="line">            <span class="string">'throttled_time'</span>: 0</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'memory_stats'</span>: &#123;</span><br><span class="line">        <span class="string">'usage'</span>: 17653760,</span><br><span class="line">        <span class="string">'max_usage'</span>: 17756160,</span><br><span class="line">        <span class="string">'stats'</span>: &#123;</span><br><span class="line">            <span class="string">'active_anon'</span>: 15409152,</span><br><span class="line">            <span class="string">'active_file'</span>: 0,</span><br><span class="line">            <span class="string">'cache'</span>: 0,</span><br><span class="line">            <span class="string">'dirty'</span>: 0,</span><br><span class="line">            <span class="string">'hierarchical_memory_limit'</span>: 9223372036854771712,</span><br><span class="line">            <span class="string">'hierarchical_memsw_limit'</span>: 0,</span><br><span class="line">            <span class="string">'inactive_anon'</span>: 0,</span><br><span class="line">            <span class="string">'inactive_file'</span>: 0,</span><br><span class="line">            <span class="string">'mapped_file'</span>: 0,</span><br><span class="line">            <span class="string">'pgfault'</span>: 6699,</span><br><span class="line">            <span class="string">'pgmajfault'</span>: 0,</span><br><span class="line">            <span class="string">'pgpgin'</span>: 6072,</span><br><span class="line">            <span class="string">'pgpgout'</span>: 2285,</span><br><span class="line">            <span class="string">'rss'</span>: 15372288,</span><br><span class="line">            <span class="string">'rss_huge'</span>: 0,</span><br><span class="line">            <span class="string">'total_active_anon'</span>: 15409152,</span><br><span class="line">            <span class="string">'total_active_file'</span>: 0,</span><br><span class="line">            <span class="string">'total_cache'</span>: 0,</span><br><span class="line">            <span class="string">'total_dirty'</span>: 0,</span><br><span class="line">            <span class="string">'total_inactive_anon'</span>: 0,</span><br><span class="line">            <span class="string">'total_inactive_file'</span>: 0,</span><br><span class="line">            <span class="string">'total_mapped_file'</span>: 0,</span><br><span class="line">            <span class="string">'total_pgfault'</span>: 6699,</span><br><span class="line">            <span class="string">'total_pgmajfault'</span>: 0,</span><br><span class="line">            <span class="string">'total_pgpgin'</span>: 6072,</span><br><span class="line">            <span class="string">'total_pgpgout'</span>: 2285,</span><br><span class="line">            <span class="string">'total_rss'</span>: 15372288,</span><br><span class="line">            <span class="string">'total_rss_huge'</span>: 0,</span><br><span class="line">            <span class="string">'total_unevictable'</span>: 0,</span><br><span class="line">            <span class="string">'total_writeback'</span>: 0,</span><br><span class="line">            <span class="string">'unevictable'</span>: 0,</span><br><span class="line">            <span class="string">'writeback'</span>: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'limit'</span>: 4126978048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'/mycontainer'</span>,</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">'9a2daa815404a4e90aea70645ea06f0d2f742d8a6c629403c1e03e1a5c78f454'</span>,</span><br><span class="line">    <span class="string">'networks'</span>: &#123;</span><br><span class="line">        <span class="string">'eth0'</span>: &#123;</span><br><span class="line">            <span class="string">'rx_bytes'</span>: 2710,</span><br><span class="line">            <span class="string">'rx_packets'</span>: 21,</span><br><span class="line">            <span class="string">'rx_errors'</span>: 0,</span><br><span class="line">            <span class="string">'rx_dropped'</span>: 0,</span><br><span class="line">            <span class="string">'tx_bytes'</span>: 0,</span><br><span class="line">            <span class="string">'tx_packets'</span>: 0,</span><br><span class="line">            <span class="string">'tx_errors'</span>: 0,</span><br><span class="line">            <span class="string">'tx_dropped'</span>: 0</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>crontab in Docker</title>
      <link href="/posts/f9ddbed/"/>
      <url>/posts/f9ddbed/</url>
      
        <content type="html"><![CDATA[<p>設定週期性要執行的指令<br>第一次執行會先讓user選擇editor</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br><span class="line">no crontab <span class="keyword">for</span> root - using an empty one</span><br><span class="line"></span><br><span class="line">Select an editor.  To change later, run <span class="string">'select-editor'</span>.</span><br><span class="line">  1. /bin/nano        &lt;---- easiest</span><br><span class="line">  2. /usr/bin/vim.basic</span><br><span class="line">  3. /usr/bin/vim.tiny</span><br><span class="line">  4. /bin/ed</span><br><span class="line"></span><br><span class="line">Choose 1-4 [1]:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Edit this file to introduce tasks to be run by cron.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Each task to run has to be defined through a single line</span></span><br><span class="line"><span class="comment"># indicating with different fields when the task will be run</span></span><br><span class="line"><span class="comment"># and what command to run for the task</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># To define the time you can provide concrete values for</span></span><br><span class="line"><span class="comment"># minute (m), hour (h), day of month (dom), month (mon),</span></span><br><span class="line"><span class="comment"># and day of week (dow) or use '*' in these fields (for 'any').#</span></span><br><span class="line"><span class="comment"># Notice that tasks will be started based on the cron's system</span></span><br><span class="line"><span class="comment"># daemon's notion of time and timezones.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Output of the crontab jobs (including errors) is sent through</span></span><br><span class="line"><span class="comment"># email to the user the crontab file belongs to (unless redirected).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For example, you can run a backup of all your user accounts</span></span><br><span class="line"><span class="comment"># at 5 a.m every week with:</span></span><br><span class="line"><span class="comment"># 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For more information see the manual pages of crontab(5) and cron(8)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># m h  dom mon dow   command</span></span><br></pre></td></tr></table></figure><p>如果要執行的指令需要下sudo，可以編輯root權限的crontab<br><code>$ sudo crontab -e</code></p><p>在 Linux 裡面執行 crontab 時，log 會被記錄在 syslog 裡面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ grep CRON /var/<span class="built_in">log</span>/syslog</span><br><span class="line">May 22 08:00:01 ubuntu CRON[9527]: (user) CMD (python /home/user/backup.py)</span><br><span class="line">May 22 08:17:01 ubuntu CRON[9851]: (root) CMD (   <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly)</span><br></pre></td></tr></table></figure><p>For example</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每天下午17:00都執行backup.sh這個script，並把log存到output.log</span></span><br><span class="line">00 17 * * * /home/user/backup.sh &gt;&gt; /home/user/output.log 2&gt;&amp;1</span><br><span class="line"><span class="comment"># 每分鐘執行</span></span><br><span class="line">*/1 * * * * do_something</span><br><span class="line"><span class="comment"># 每隔30秒執行</span></span><br><span class="line">*/1 * * * * do_something_A</span><br><span class="line">*/1 * * * * sleep 30; do_something_B</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ftplib in Python</title>
      <link href="/posts/741b618f/"/>
      <url>/posts/741b618f/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Connection</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ftplib <span class="keyword">import</span> FTP</span><br><span class="line"></span><br><span class="line">ftp = FTP()</span><br><span class="line">ftp.set_debuglevel(<span class="number">2</span>)</span><br><span class="line">ftp.connect(<span class="string">'192.168.56.3'</span>, <span class="number">21</span>)</span><br><span class="line">ftp.login(<span class="string">'account'</span>, <span class="string">'password'</span>)</span><br><span class="line">print(ftp.getwelcome())</span><br><span class="line">ftp.quit()</span><br></pre></td></tr></table></figure></li><li><p>General Operation</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set the current directory on the server.</span></span><br><span class="line">ftp.cwd(pathname)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a new directory on the server.</span></span><br><span class="line">ftp.mkd(pathname)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Return the pathname of the current directory on the server.</span></span><br><span class="line">ftp.pwd()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove the directory named dirname on the server.</span></span><br><span class="line">ftp.rmd(dirname)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Rename file fromname on the server to toname.</span></span><br><span class="line">ftp.rename(fromname, toname)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove the file named filename from the server.</span></span><br><span class="line">ftp.delete(filename)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Request the size of the file named filename on the server.</span></span><br><span class="line">ftp.size(filename)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Produce a directory listing as returned by the LIST command.</span></span><br><span class="line">ftp.dir()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Return a list of file names as returned by the NLST command.</span></span><br><span class="line">ftp.nlst()</span><br></pre></td></tr></table></figure></li><li><p>Upload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(local_filename,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ftp.storbinary(<span class="string">'STOR %s'</span> % server_filename, f, <span class="number">1024</span>)</span><br></pre></td></tr></table></figure></li><li><p>Download</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(local_filename, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ftp.retrbinary(<span class="string">'RETR %s'</span> % server_filename, f.write, <span class="number">1024</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Payload in pytest</title>
      <link href="/posts/b7198fcc/"/>
      <url>/posts/b7198fcc/</url>
      
        <content type="html"><![CDATA[<ul><li>在pytest中，若參數為file，直接放在data payload裡，不可以用files參數<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_recognize</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'avatar.png'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="string">'file'</span>: f,</span><br><span class="line">            <span class="string">'screen_token'</span>: <span class="string">'123'</span></span><br><span class="line">        &#125;</span><br><span class="line">        ret = test_app.post(<span class="string">'/recognize'</span>, data=payload)</span><br></pre></td></tr></table></figure></li><li>一般的post request<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recognize</span><span class="params">(self)</span>:</span></span><br><span class="line">    payload = &#123; </span><br><span class="line">        <span class="string">'screen_token'</span>: <span class="string">'123'</span></span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">'http://ip:port/recognize'</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'avatar.png'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        ret = requests.post(url, data=payload, files=&#123;<span class="string">'file'</span>: f&#125;)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Example for video.js</title>
      <link href="/posts/b57b0f6a/"/>
      <url>/posts/b57b0f6a/</url>
      
        <content type="html"><![CDATA[<p>使用video.js在瀏覽器上播放影片<br><a href="https://videojs.com/" target="_blank" rel="noopener">https://videojs.com/</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>VideoJS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://vjs.zencdn.net/7.3.0/video-js.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://vjs.zencdn.net/7.3.0/video.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.video-js</span> <span class="selector-class">.vjs-time-control</span>&#123;<span class="attribute">display</span>:block;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.video-js</span> <span class="selector-class">.vjs-remaining-time</span>&#123;<span class="attribute">display</span>:none;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"my-video"</span> <span class="attr">class</span>=<span class="string">"video-js vjs-big-play-centered"</span>&gt;</span><span class="tag">&lt;<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> player = videojs(<span class="string">'my-video'</span>,&#123;</span></span><br><span class="line"><span class="actionscript">            sources:[&#123; src: <span class="string">"http://192.168.56.3:8081/mv.mp4"</span>&#125;],</span></span><br><span class="line">            playbackRates: [0.5, 1, 2, 4],</span><br><span class="line"><span class="actionscript">            loop:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">            muted:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">            width:<span class="string">"1280"</span>,</span></span><br><span class="line"><span class="actionscript">            height:<span class="string">"720"</span>,</span></span><br><span class="line"><span class="actionscript">            controls:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">            autoplay: <span class="literal">true</span></span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        player.on(<span class="string">"playing"</span>,()=&gt;&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'playing'</span>);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Setup a File Server Quickly</title>
      <link href="/posts/dbaaf77f/"/>
      <url>/posts/dbaaf77f/</url>
      
        <content type="html"><![CDATA[<p>透過nodejs，在ubuntu中快速建立一個File server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install nodejs</span><br><span class="line">$ sudo apt install npm</span><br><span class="line">$ sudo npm install http-server -g</span><br><span class="line">$ http-server</span><br><span class="line">Starting up http-server, serving ./</span><br><span class="line">Available on:</span><br><span class="line">  http://127.0.0.1:8080</span><br><span class="line">  http://10.0.2.15:8080</span><br><span class="line">  http://192.168.96.4:8080</span><br><span class="line">Hit CTRL-C to stop the server</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTSP Player on Web Page</title>
      <link href="/posts/b9c5d30/"/>
      <url>/posts/b9c5d30/</url>
      
        <content type="html"><![CDATA[<ul><li>git source: <a href="https://github.com/qcycp/SampleCode/tree/master/HTML_RTSP_Player" target="_blank" rel="noopener">https://github.com/qcycp/SampleCode/tree/master/HTML_RTSP_Player</a></li><li>reference: <a href="https://my.oschina.net/chengpengvb/blog/1832469?p=4" target="_blank" rel="noopener">https://my.oschina.net/chengpengvb/blog/1832469?p=4</a></li></ul><p>包含三個部份</p><ol><li><p>NodeJS: contains a http server to receive content from ffmpeg and send out these data via websocket<br><code>$ node websocket.js secret 8081 8082</code></p></li><li><p>FFmpeg: decode rtsp streaming and encode to mpeg1, then send to a http streaming<br><code>$ ffmpeg -rtsp_transport tcp -i rtsp://10.60.6.28:8554/CH001.sdp -r 20 -q 0 -f mpegts -codec:v mpeg1video -codec:a mp2 -s 1280x720 http://127.0.0.1:8081/secret/rtsp</code></p></li><li><p>JSMpeg: receive video content via websocket and do MPEG1 video &amp; MP2 audio decode in JavaScript</p></li></ol><ul><li><p>FFmpeg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-rtsp_transport tcp: receive rtsp streaming input via tcp</span><br><span class="line">-i rtsp://10.60.6.28:8554/CH001.sdp: rtsp streaming input</span><br><span class="line">-r 20: set output frame rate, MPEG-1/2 does not support 15/1 fps</span><br><span class="line">-q 0: use fixed quality scale</span><br><span class="line">-f mpegts: set force output format</span><br><span class="line">-codec:v mpeg1video: set output video codec</span><br><span class="line">-codec:a mp2:  set output audio codec</span><br><span class="line">-s 1280x720: set output frame size</span><br></pre></td></tr></table></figure></li><li><p>JSMpeg</p></li></ul><ol><li><a href="https://github.com/phoboslab/jsmpeg" target="_blank" rel="noopener">https://github.com/phoboslab/jsmpeg</a></li><li>MPEG1 Video &amp; MP2 Audio Decoder in JavaScript<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"video"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"jsmpeg.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'video'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> url = <span class="string">'ws://127.0.0.1:8082/rtsp'</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> player = <span class="keyword">new</span> JSMpeg.Player(url, &#123;canvas: canvas&#125;);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JSMpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FFmpeg 常用指令</title>
      <link href="/posts/2ffce39e/"/>
      <url>/posts/2ffce39e/</url>
      
        <content type="html"><![CDATA[<ul><li><p>show video information<br><code>$ ffprobe -show_format -i input.mp4</code></p></li><li><p>play local video<br><code>$ ffplay input.mp4</code></p></li><li><p>play rtsp streaming<br><code>$ ffplay rtsp://10.60.6.28:8554/CH001.sdp</code><br><code>$ ffplay -rtsp_transport tcp rtsp://10.60.6.28:8554/CH001.sdp</code></p></li><li><p>speed up the video by 2x<br><code>$ ffmpeg -i input.mp4 -filter:v &quot;setpts=PTS/2&quot; output.mp4</code><br>Note that: if original fps is 30 and play by 2x speed up, we can set fps to 60 to prevent frame loss<br><code>$ ffmpeg -i input.mp4 -r 60 -filter:v &quot;setpts=PTS/2&quot; output.mp4</code></p></li><li><p>slow down the video by 1/2x<br><code>$ ffmpeg -i input.mp4 -filter:v &quot;setpts=PTS*2&quot; output.mp4</code></p></li><li><p>modify the frame rate to 15<br><code>$ ffmpeg -i input.mp4 -r 15 output.mp4</code></p></li><li><p>modify the frame size to 1920x1080<br><code>$ ffmpeg -i input.mp4 -s 1920x1080 output.mp4</code></p></li><li><p>record rtsp streaming to file without video and audio decode/encode<br><code>$ ffmpeg -rtsp_transport tcp -i rtsp://10.60.6.28:8554/CH001.sdp -acodec copy -vcodec copy output.mp4</code><br><code>$ ffmpeg -rtsp_transport tcp -i rtsp://10.60.6.28:8554/CH001.sdp -codec copy output.mp4</code></p></li><li><p>cut the video from 00:00:10 to 00:00:35<br><code>$ ffmpeg -i input.mp4 -ss 00:00:10 -t 00:00:25 output.mp4</code><br>You can do the following operation(change all frames to key frame) at first to do precise cutting<br><code>$ ffmpeg -i output.mp4 -strict -2  -qscale 0 -intra keyoutput.mp4</code></p></li><li><p>concate two video file<br><code>$ ffmpeg -f concat -safe 0 -i list.txt -c copy concat.mp4</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat list.txt</span><br><span class="line">file part1.mp4</span><br><span class="line">file part2.mp4</span><br></pre></td></tr></table></figure></li><li><p>capture screenshot at 00:00:10<br><code>$ ffmpeg -i input.mp4 -ss 00:00:10 -vframes 1 screenshot.jpg</code></p></li><li><p>capture 20 screenshots from 00:00:42 by 10 images per second<br><code>$ ffmpeg -i abc.mp4 -ss 00:00:42 -r 10 -vframes 20 %d.jpg</code></p></li><li><p>translate between video and images<br><code>$ ffmpeg -i output.mp4 image%d.jpg</code><br><code>$ ffmpeg -f image2 -i image%d.jpg output.mp4</code></p></li><li><p>flip and rotate video<br><code>$ ffmpeg -i input.mp4 -vf hflip output.mp4</code><br><code>$ ffmpeg -i input.mp4 -vf vflip output.mp4</code><br><code>$ ffmpeg -i input.mp4 -vf transpose=1 output.mp4</code></p></li><li><p>extract audio<br><code>$ ffmpeg -i input.mp4 -acodec copy -vn out.aac</code></p></li><li><p>extract video<br><code>$ ffmpeg -i input.mp4 -vcodec copy -an out.h264</code></p></li><li><p>merge audo and video<br><code>$ ffmpeg -i out.h264 -i out.aac -vcodec copy -acodec copy out.mp4</code></p></li><li><p>crop video<br>crop format: crop=out_w:out_h:x:y<br>if x, y are missing, crop the video base on center<br>if x, y are set to be 0, 0, crop the video base on left top corner<br><code>$ ffmpeg -i input.mp4 -vf crop=in_w-400:in_h-200 -c:v libx264 -c:a copy -video_size 1280x720 output.mp4</code></p></li><li><p>以下寫法相同</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-codec:v</span><br><span class="line">-c:v</span><br><span class="line">-vcodec</span><br><span class="line"></span><br><span class="line">-frames:v</span><br><span class="line">-vframes</span><br></pre></td></tr></table></figure></li><li><p>note</p></li></ul><p>-crf is parameter for x264, 0 代表無損壓縮<br>-re: Read input at native frame rate. Mainly used to simulate a grab device. i.e. if you wanted to stream a video file, then you would want to use this, otherwise it might stream it too fast.</p><ul><li><p>轉流<br>ffmpeg -rtsp_transport tcp -i rtsp://10.60.6.28:8554/CH001.sdp -q 0 -f mpegts -codec:v mpeg1video -s 1280x720 <a href="http://192.168.56.3:8081/secret/live" target="_blank" rel="noopener">http://192.168.56.3:8081/secret/live</a></p></li><li><p>推流<br>ffmpeg -re -i input.mp4 -q 0 -f mpegts -codec:v mpeg1video -s 1280x720 <a href="http://192.168.56.3:8081/secret/live" target="_blank" rel="noopener">http://192.168.56.3:8081/secret/live</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FFmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Execute MySQL Commands in shell script</title>
      <link href="/posts/7bd7c7e8/"/>
      <url>/posts/7bd7c7e8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 10000)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    mysql --user=root --password=1234 db_name -e <span class="string">"INSERT INTO table_name (id, date) VALUES (<span class="variable">$i</span>, <span class="variable">$(date +%s)</span>);"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MySQL </tag>
            
            <tag> shell script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uuid Generator in Linux</title>
      <link href="/posts/fa21d003/"/>
      <url>/posts/fa21d003/</url>
      
        <content type="html"><![CDATA[<p>透過系統中的uuid檔案，生成UUID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat /proc/sys/kernel/random/uuid</span><br><span class="line">371a8e69-d35c-4eb1-bc3c-36accca6a6a0</span><br><span class="line">$ cat /proc/sys/kernel/random/uuid</span><br><span class="line">0c1f3448-a089-4f4a-aaca-a7dc817f6cea</span><br><span class="line">$ cat /proc/sys/kernel/random/uuid</span><br><span class="line">8fff67aa-093d-441d-ae57-277ae5fb1bde</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Crontab in Docker</title>
      <link href="/posts/ca10b1f5/"/>
      <url>/posts/ca10b1f5/</url>
      
        <content type="html"><![CDATA[<h4 id="手動執行cron-task，並查看目前系統中執行的cron-task"><a href="#手動執行cron-task，並查看目前系統中執行的cron-task" class="headerlink" title="手動執行cron task，並查看目前系統中執行的cron task"></a>手動執行cron task，並查看目前系統中執行的cron task</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ docker cp cron-task container:/etc/cron.d/</span><br><span class="line">root@847d0eb77dfe:/<span class="comment"># cd /etc/cron.d/</span></span><br><span class="line">root@847d0eb77dfe:/etc/cron.d<span class="comment"># crontab cron-task</span></span><br><span class="line">root@847d0eb77dfe:/etc/cron.d<span class="comment"># cd /var/spool/cron/crontabs/</span></span><br><span class="line">root@847d0eb77dfe:/var/spool/cron/crontabs<span class="comment"># cat root</span></span><br><span class="line"><span class="comment"># DO NOT EDIT THIS FILE - edit the master and reinstall.</span></span><br><span class="line"><span class="comment"># (parse-log-cron installed on Wed May  1 14:55:42 2019)</span></span><br><span class="line"><span class="comment"># (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)</span></span><br><span class="line">00 * * * * run-one /usr/bin/python3.6 /app.py</span><br></pre></td></tr></table></figure><h4 id="在Dockerfile中設定cron-task"><a href="#在Dockerfile中設定cron-task" class="headerlink" title="在Dockerfile中設定cron task"></a>在Dockerfile中設定cron task</h4><ol><li><p>create cron-task</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00 * * * * run-one /usr/bin/python3.6 /app.py</span><br></pre></td></tr></table></figure></li><li><p>in Dockerfile</p></li></ol><ul><li>apt-get install cron run-one</li><li>add cron tasks script<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">RUN apt-get update &amp;&amp; \</span><br><span class="line">    apt-get install --no-install-recommends -y cron run-one &amp;&amp; \</span><br><span class="line">ADD cron_task /etc/cron.d/cron-task</span><br><span class="line">RUN chmod 0644 /etc/cron.d/cron-task &amp;&amp; \</span><br><span class="line">    crontab /etc/cron.d/cron-task</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li>in supervisord.conf<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[program:cron]</span><br><span class="line"><span class="built_in">command</span>=/usr/sbin/cron -f</span><br><span class="line"></span><br><span class="line">stdout_logfile_maxbytes = 0</span><br><span class="line">stdout_logfile = /dev/stdout</span><br><span class="line">stderr_logfile_maxbytes = 0</span><br><span class="line">stderr_logfile = /dev/stderr</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> cron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell script Notes</title>
      <link href="/posts/dd240c9a/"/>
      <url>/posts/dd240c9a/</url>
      
        <content type="html"><![CDATA[<ul><li>get the folder where the shell script is<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DIR=`dirname $0`</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://www.tutorialspoint.com/unix/shell_scripting.htm" target="_blank" rel="noopener">https://www.tutorialspoint.com/unix/shell_scripting.htm</a><br>!   This is logical negation. This inverts a true condition into false and vice versa. [ ! false ] is true.<br>-o  This is logical OR. If one of the operands is true, then the condition becomes true. [ $a -lt 20 -o $b -gt 100 ] is true.<br>-a  This is logical AND. If both the operands are true, then the condition becomes true otherwise false. [ $a -lt 20 -a $b -gt 100 ] is false.<br>-z  Checks if the given string operand size is zero; if it is zero length, then it returns true. [ -z $a ] is not true.<br>-n  Checks if the given string operand size is non-zero; if it is nonzero length, then it returns true. [ -n $a ] is not false.<br>=   Checks if the value of two operands are equal or not; if yes, then the condition becomes true. [ $a = $b ] is not true.<br>!=  Checks if the value of two operands are equal or not; if values are not equal then the condition becomes true. [ $a != $b ] is true.<br>-f file Checks if file is an ordinary file as opposed to a directory or special file; if yes, then the condition becomes true. [ -f $file ] is true.<br>-d file Checks if file is a directory; if yes, then the condition becomes true. [ -d $file ] is not true.</p><ul><li><p>check symbolic link</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">lrwxrwxrwx. 1 root root 22 Dec 31 16:26 bbu_cli -&gt; /home/user/bbu_cli</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -L bbu_cli ] ; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"This is a symbolic link"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>除了stdout，把所有output也導一份到test.log去<br>set -x: 把執行的command也印出來</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">NOW=$(date +<span class="string">"%Y-%m-%d-%H:%M:%S"</span>)</span><br><span class="line"><span class="built_in">exec</span> &amp;&gt; &gt;(tee <span class="built_in">test</span>-<span class="variable">$NOW</span>.<span class="built_in">log</span>)</span><br><span class="line"><span class="built_in">set</span> -x</span><br></pre></td></tr></table></figure></li><li><p>字串處理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">result=$(echo $msg | grep xxx)</span><br><span class="line">if [ -z &quot;$result&quot; ]; then</span><br><span class="line">    echo &quot;msg中找不到xxx內容&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>如果script中有多個block commands利用&amp;進行背景執行，透過wait可以不退出script，直到直到執行Ctrl+C，並且，透過trap signal可以將所有背景執行的command也終止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">trap</span> <span class="string">"exit"</span> INT TERM ERR</span><br><span class="line"><span class="built_in">trap</span> <span class="string">"kill 0"</span> EXIT</span><br><span class="line"></span><br><span class="line">tail -F test.log &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">wait</span></span><br></pre></td></tr></table></figure></li><li><p>echo -n 不換行輸出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$echo</span> -n <span class="string">"123"</span></span><br><span class="line"><span class="variable">$echo</span> <span class="string">"456"</span></span><br><span class="line"></span><br><span class="line">output: </span><br><span class="line">123456</span><br></pre></td></tr></table></figure></li><li><p>echo -e 處理特殊字符<br>若字符串中出現字符，則特别加以處理，不會將它當成一般文字輸出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">\a 發出警告聲；</span><br><span class="line">\b 删除前一个字符；</span><br><span class="line">\c 最後不加上换行符號；</span><br><span class="line">\f 换行但光标仍舊停留在原来的位置；</span><br><span class="line">\n 换行且光标移至行首；</span><br><span class="line">\r 光标移至行首，但不换行；</span><br><span class="line">\t 插入tab；</span><br><span class="line">\v 与\f相同；</span><br><span class="line">\\ 插入\字符；</span><br><span class="line">\nnn 插入nnn（八进制）所代表的ASCII字符；</span><br></pre></td></tr></table></figure></li><li><p>大小寫轉換</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NAME=&quot;NaMe&quot;</span><br><span class="line">echo $&#123;NAME^&#125; =&gt; Name</span><br><span class="line">echo $&#123;NAME^^&#125; =&gt; NAME</span><br><span class="line">echo $&#123;NAME,&#125; =&gt; naMe</span><br><span class="line">echo $&#123;NAME,,&#125; =&gt; name</span><br></pre></td></tr></table></figure></li><li><p>stdin/stdout/stderr<br>0: stdin<br>1: stdout<br>2: stderr</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; /dev/null 2&gt;&amp;1 =&gt; stdout 跟 stderr 都丟掉</span><br><span class="line">2&gt;&amp;1 =&gt; 把 stderr 導到 stdout</span><br><span class="line">&gt; 等同於 1&gt;</span><br><span class="line">&amp;&gt; file =&gt; 把 stdout 跟 stderr 都導向 file</span><br></pre></td></tr></table></figure></li></ul><h1 id="Close-STDOUT-file-descriptor"><a href="#Close-STDOUT-file-descriptor" class="headerlink" title="Close STDOUT file descriptor"></a>Close STDOUT file descriptor</h1><p>exec 1&lt;&amp;-</p><h1 id="Close-STDERR-FD"><a href="#Close-STDERR-FD" class="headerlink" title="Close STDERR FD"></a>Close STDERR FD</h1><p>exec 2&lt;&amp;-</p><h1 id="Open-STDOUT-as-LOG-FILE-file-for-read-and-write"><a href="#Open-STDOUT-as-LOG-FILE-file-for-read-and-write" class="headerlink" title="Open STDOUT as $LOG_FILE file for read and write."></a>Open STDOUT as $LOG_FILE file for read and write.</h1><p>exec 1&lt;&gt;$LOG_FILE</p><h1 id="Redirect-STDERR-to-STDOUT"><a href="#Redirect-STDERR-to-STDOUT" class="headerlink" title="Redirect STDERR to STDOUT"></a>Redirect STDERR to STDOUT</h1><p>exec 2&gt;&amp;1</p><h1 id="for-lines-in-command-result"><a href="#for-lines-in-command-result" class="headerlink" title="for lines in command result"></a>for lines in command result</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update-alternatives --display java | while read line ; do</span><br><span class="line">    echo $line</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="delete-specific-cron-job"><a href="#delete-specific-cron-job" class="headerlink" title="delete specific cron job"></a>delete specific cron job</h1><p>保留 “job command” 以外的 cron jobs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l 2&gt;/dev/null | grep -v &apos;job command&apos; | crontab -</span><br></pre></td></tr></table></figure><h1 id="dynamic-variable"><a href="#dynamic-variable" class="headerlink" title="dynamic variable"></a>dynamic variable</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">id=0</span><br><span class="line">A_0=1</span><br><span class="line">A_1=2</span><br><span class="line"></span><br><span class="line">target=A_$&#123;id&#125;</span><br><span class="line">echo $&#123;!target&#125; #1</span><br></pre></td></tr></table></figure><h1 id="filename-and-extension"><a href="#filename-and-extension" class="headerlink" title="filename and extension"></a>filename and extension</h1><p>filename=$(basename – “$fullfile”)<br>extension=”${filename##<em>.}”<br>filename=”${filename%.</em>}”</p><p><a href="https://blog.csdn.net/toopoo/article/details/105409383" target="_blank" rel="noopener">https://blog.csdn.net/toopoo/article/details/105409383</a><br>將導向檔案的log，加上時間戳記</p><ul><li><p>Process Uptime<br>ps -p <process_id> -o etime</process_id></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; ps -p 1 -o etime</span><br><span class="line">ELAPSED</span><br><span class="line">21:51</span><br><span class="line">&gt;&gt; ps -p 1 -o etime=</span><br><span class="line">03:24:30</span><br><span class="line">&gt;&gt; ps -p 1 -o etimes=</span><br><span class="line">12270</span><br></pre></td></tr></table></figure></li><li><p>string<br>${string:index:length}<br>test=123<br>${test:0:1} //1<br>${test:1:1} //2<br>${test:2:1} //3</p></li><li><p>isdigit<br>if [[ $value =~ ^[0-9]+$ ]];then<br>echo $value is a digit<br>fi<br>if [[ ! $value =~ ^[0-9]+$ ]];then<br>echo $value is not a digit<br>fi<br>if [[ $value =~ ^-?[0-9]+$ ]];then<br>echo $value is a digit<br>fi<br>The ^ indicates the beginning of the input pattern<br>The - is a literal “-“<br>The ? means “0 or 1 of the preceding (-)”<br>The + means “1 or more of the preceding ([0-9])”<br>The $ indicates the end of the input pattern</p></li><li><p>return value of function</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">foo()</span><br><span class="line">&#123;</span><br><span class="line">    a=<span class="variable">$1</span></span><br><span class="line">    b=<span class="variable">$2</span></span><br><span class="line">    <span class="built_in">echo</span> `expr <span class="variable">$a</span> \* 2 + <span class="variable">$b</span>`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret=$(foo 1 2)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ret</span> <span class="comment"># 4</span></span><br></pre></td></tr></table></figure></li><li><p>array</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">array 宣告</span><br><span class="line">declare -a array</span><br><span class="line"></span><br><span class="line">建立 array with items</span><br><span class="line">array=( item1 item2 item3 )</span><br><span class="line"></span><br><span class="line">for index in $&#123;!array[@]&#125;; do</span><br><span class="line">    echo $((index+1))/$&#123;#array[@]&#125;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">// 1/3</span><br><span class="line">// 2/3</span><br><span class="line">// 3/3</span><br><span class="line"></span><br><span class="line">array+=(item4)</span><br><span class="line"></span><br><span class="line">for i in $&#123;array[@]&#125;; do</span><br><span class="line">    echo $i</span><br><span class="line">done</span><br><span class="line">// item1</span><br><span class="line">// item2</span><br><span class="line">// item3</span><br><span class="line">// item4</span><br></pre></td></tr></table></figure></li><li><p>check item in an array</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">array=(1 2 3)</span><br><span class="line">value=3</span><br><span class="line">if [[ &quot;$&#123;array[@]&#125;&quot; =~ &quot;$value&quot; ]]; then</span><br><span class="line">  echo &quot;found $value in the array&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>check item is a list</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">list=&quot;a ab abc&quot;</span><br><span class="line">value=bc</span><br><span class="line">if [[ $list =~ (^|[[:space:]])&quot;$value&quot;($|[[:space:]]) ]]; then</span><br><span class="line">  echo &quot;found $value in the list&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>array difference</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">array_diff()</span><br><span class="line">&#123;</span><br><span class="line">    eval local ARR1=\(\&quot;\$&#123;$2[@]&#125;\&quot;\)</span><br><span class="line">    eval local ARR2=\(\&quot;\$&#123;$3[@]&#125;\&quot;\)</span><br><span class="line">    local IFS=$&apos;\n&apos;</span><br><span class="line">    mapfile -t $1 &lt; &lt;(comm -23 &lt;(echo &quot;$&#123;ARR1[*]&#125;&quot; | sort) &lt;(echo &quot;$&#123;ARR2[*]&#125;&quot; | sort))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">array1=(1 2)</span><br><span class="line">array2=(2 3 4)</span><br><span class="line"></span><br><span class="line">array_diff RESULT array1 array2</span><br><span class="line">echo &quot;$&#123;RESULT[@]&#125;&quot; // 1</span><br><span class="line"></span><br><span class="line">array_diff RESULT array2 array1</span><br><span class="line">echo &quot;$&#123;RESULT[@]&#125;&quot; // 3 4</span><br></pre></td></tr></table></figure></li><li><p>color<br>Text Style<br>Code | Description</p></li></ul><p>—–|——-<br>0 | Reset/Normal<br>1 | Bold text<br>2 | Faint text<br>3 | Italics<br>4 | Underlined text</p><p>Color | Foreground | Background<br>Black | 30 | 40<br>Red | 31 | 41<br>Green | 32 | 42<br>Yellow | 33 | 43<br>Blue | 34 | 44<br>Magenta | 35 | 45<br>Cyan | 36 | 46<br>Light Gray | 37 | 47<br>Gray | 90 | 100<br>Light Red | 91 | 101<br>Light Green 92 | 102<br>Light Yellow | 93 | 103<br>Light Blue | 94 | 104<br>Light Magenta | 95 | 105<br>Light Cyan | 96 | 106<br>White | 97 | 107</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">RED=&apos;\033[0;31m&apos;</span><br><span class="line">BOLD=&apos;\033[1m&apos;</span><br><span class="line">BOLD_RED=&apos;\033[1;31m&apos;</span><br><span class="line">NC=&apos;\033[0m&apos;</span><br><span class="line"></span><br><span class="line">echo -e $&#123;RED&#125;RED$&#123;NC&#125;</span><br><span class="line">echo -e $&#123;BOLD&#125;BOLD$&#123;NC&#125;</span><br><span class="line">echo -e $&#123;BOLD_RED&#125;BOLD_RED$&#123;NC&#125;</span><br></pre></td></tr></table></figure><ul><li>在shell script中，某些指令出錯<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Run something like: [[ $ABC =~ regexp ]] #&gt; [[: not found</span><br><span class="line">start_service.sh: source: not found</span><br></pre></td></tr></table></figure>因為 Image 中 sh 並非 bash，而是 dash<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /bin/sh #&gt; /bin/sh -&gt; dash</span><br></pre></td></tr></table></figure>將 sh 改指向 sh<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rm /bin/sh</span><br><span class="line">$ ln -s /bin/bash /bin/sh</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Shell Script </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell Script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jq</title>
      <link href="/posts/f9c9d078/"/>
      <url>/posts/f9c9d078/</url>
      
        <content type="html"><![CDATA[<p>使用curl執行webapi，可以把結果拋給jq，格式化json的內容</p><p><code>sudo apt install jq</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">'&#123; "name":"John", "age":31, "city":"New York" &#125;'</span> | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"John"</span>,</span><br><span class="line">  <span class="string">"age"</span>: 31,</span><br><span class="line">  <span class="string">"city"</span>: <span class="string">"New York"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sample 1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X POST -d <span class="string">'username=admin&amp;password=123456'</span> http://localhost/api/login | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"code"</span>: 0,</span><br><span class="line">  <span class="string">"data"</span>: &#123;</span><br><span class="line">    <span class="string">"token"</span>: <span class="string">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X POST -d <span class="string">'username=admin&amp;password=123456'</span> http://localhost/api/login | jq .data</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"token"</span>: <span class="string">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X POST -d <span class="string">'username=admin&amp;password=123456'</span> http://localhost/api/login | jq .data.token</span><br><span class="line"><span class="string">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9"</span></span><br><span class="line"></span><br><span class="line">$ curl -X POST -d <span class="string">'username=admin&amp;password=123456'</span> http://localhost/api/login | jq -r .data.token</span><br><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9</span><br></pre></td></tr></table></figure><p>sample 2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET http://localhost/api/data</span><br><span class="line">&#123;<span class="string">"code"</span>:0,<span class="string">"data"</span>:[&#123;<span class="string">"Location"</span>:<span class="string">"4F"</span>,<span class="string">"URL"</span>:<span class="string">"rtsp://localhost:8888/CH001.sdp"</span>,<span class="string">"status"</span>:null&#125;]&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X GET http://localhost/api/data | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"code"</span>: 0,</span><br><span class="line">  <span class="string">"data"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"Location"</span>: <span class="string">"4F"</span>,</span><br><span class="line">      <span class="string">"URL"</span>: <span class="string">"rtsp://localhost:8888/CH001.sdp"</span>,</span><br><span class="line">      <span class="string">"status"</span>: null</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X GET http://localhost/api/data | jq .data</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"Location"</span>: <span class="string">"4F"</span>,</span><br><span class="line">    <span class="string">"URL"</span>: <span class="string">"rtsp://localhost:8888/CH001.sdp"</span>,</span><br><span class="line">    <span class="string">"status"</span>: null</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">$ curl -X GET http://localhost/api/data | jq .data[0]</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"Location"</span>: <span class="string">"4F"</span>,</span><br><span class="line">  <span class="string">"URL"</span>: <span class="string">"rtsp://localhost:8888/CH001.sdp"</span>,</span><br><span class="line">  <span class="string">"status"</span>: null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X GET http://localhost/api/data | jq .data[0].URL</span><br><span class="line"><span class="string">"rtsp://localhost:8888/CH001.sdp"</span></span><br><span class="line"></span><br><span class="line">$ curl -X GET http://localhost/api/data | jq -r .data[0].URL</span><br><span class="line">rtsp://localhost:8888/CH001.sdp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chkdsk</title>
      <link href="/posts/eb6b61c0/"/>
      <url>/posts/eb6b61c0/</url>
      
        <content type="html"><![CDATA[<p>當隨身碟出現以下錯誤時，可以透過chkdsk來修復<br><img src="/posts/eb6b61c0/error.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/f</span><br><span class="line">修復硬碟上的錯誤。必須鎖定硬碟。如果 chkdsk 無法鎖定磁碟區</span><br><span class="line">則會顯示一條訊息，詢問您是否希望在下次重新啟動電腦時檢查該驅動器</span><br><span class="line">/v</span><br><span class="line">當檢查硬碟時，顯示所有目錄中每個文件的名稱</span><br><span class="line">/r</span><br><span class="line">找到壞軌區並恢復可讀取的信息。必須鎖定硬碟</span><br><span class="line">/x</span><br><span class="line">僅在 NTFS 上使用。如果必要，首先強制卸載磁碟區</span><br><span class="line">該磁碟槽的所有打開指令&amp;檔案都無效。/x 還包含了/f 的功能</span><br><span class="line">/i</span><br><span class="line">僅隨 NTFS 使用。對索引項執行充分檢查，降低運行 chkdsk 的所用時間量</span><br><span class="line">/c</span><br><span class="line">僅隨 NTFS 使用。跳過文件夾結構中的週期檢查，減少運行 chkdsk 所需的時間量</span><br><span class="line">/l[:size]</span><br><span class="line">僅隨 NTFS 使用。將日誌文件的大小更改為由用戶輸入的大小</span><br><span class="line">如果省略該參數，則 /l 會顯示當前日誌文件的大小</span><br><span class="line">/?</span><br><span class="line">在命令提示符顯示幫助。</span><br></pre></td></tr></table></figure><p><img src="/posts/eb6b61c0/chkdsk.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chkdsk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sort with structs</title>
      <link href="/posts/4294109/"/>
      <url>/posts/4294109/</url>
      
        <content type="html"><![CDATA[<p>針對struct內的某個欄位，進行sort</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Person</span> &#123;</span></span><br><span class="line">    Person() : name(<span class="string">""</span>),  age(INT_MAX) &#123;&#125;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> Person&amp; rhs) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> age &lt; rhs.age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; Person;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person *data = <span class="keyword">new</span> Person[<span class="number">4</span>];</span><br><span class="line">    data[<span class="number">0</span>].name = <span class="string">"Nick"</span>; data[<span class="number">0</span>].age = <span class="number">37</span>;</span><br><span class="line">    data[<span class="number">1</span>].name = <span class="string">"John"</span>; data[<span class="number">1</span>].age = <span class="number">45</span>;</span><br><span class="line">    data[<span class="number">2</span>].name = <span class="string">"Mary"</span>; data[<span class="number">2</span>].age = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">0</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">0</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">1</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">1</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">2</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">2</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    sort(data, data+<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">0</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">0</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">1</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">1</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">2</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">2</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    sort(data, data+<span class="number">3</span>, [](Person a, Person b)&#123; <span class="keyword">return</span> a.age &gt; b.age; &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">0</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">0</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">1</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">1</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; data[<span class="number">2</span>].name &lt;&lt; <span class="string">": "</span> &lt;&lt; data[<span class="number">2</span>].age &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Nick: 37</span><br><span class="line">John: 45</span><br><span class="line">Mary: 20</span><br><span class="line"></span><br><span class="line">Mary: 20</span><br><span class="line">Nick: 37</span><br><span class="line">John: 45</span><br><span class="line"></span><br><span class="line">John: 45</span><br><span class="line">Nick: 37</span><br><span class="line">Mary: 20</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Open Web Page using Selenium</title>
      <link href="/posts/3db6e2b6/"/>
      <url>/posts/3db6e2b6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    chrome_options = webdriver.ChromeOptions()</span><br><span class="line">    chrome_options.add_argument(<span class="string">'--headless'</span>)</span><br><span class="line">    chrome_options.add_argument(<span class="string">'--no-sandbox'</span>)</span><br><span class="line">    chrome_options.add_argument(<span class="string">'--disable-dev-shm-usage'</span>)</span><br><span class="line">    driver = webdriver.Chrome(executable_path=<span class="string">'/usr/bin/chromedriver'</span>, options=chrome_options)</span><br><span class="line">    driver.implicitly_wait(<span class="number">30</span>)</span><br><span class="line">    driver.get(<span class="string">'https://google.com'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.6-alpine</span><br><span class="line"></span><br><span class="line">ADD app.py /</span><br><span class="line">RUN apk add --update bash chromium chromium-chromedriver</span><br><span class="line">RUN pip install selenium</span><br><span class="line">CMD [<span class="string">"python"</span>, <span class="string">"app.py"</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Docker </tag>
            
            <tag> Selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stress</title>
      <link href="/posts/7212f3ac/"/>
      <url>/posts/7212f3ac/</url>
      
        <content type="html"><![CDATA[<p>透過stress可以模擬系統busy的狀況<br><code>sudo apt install stress</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">`stress&apos; imposes certain types of compute stress on your system</span><br><span class="line"></span><br><span class="line">Usage: stress [OPTION [ARG]] ...</span><br><span class="line"> -?, --help         show this help statement</span><br><span class="line">     --version      show version statement</span><br><span class="line"> -v, --verbose      be verbose</span><br><span class="line"> -q, --quiet        be quiet</span><br><span class="line"> -n, --dry-run      show what would have been done</span><br><span class="line"> -t, --timeout N    timeout after N seconds</span><br><span class="line">     --backoff N    wait factor of N microseconds before work starts</span><br><span class="line"> -c, --cpu N        spawn N workers spinning on sqrt()</span><br><span class="line"> -i, --io N         spawn N workers spinning on sync()</span><br><span class="line"> -m, --vm N         spawn N workers spinning on malloc()/free()</span><br><span class="line">     --vm-bytes B   malloc B bytes per vm worker (default is 256MB)</span><br><span class="line">     --vm-stride B  touch a byte every B bytes (default is 4096)</span><br><span class="line">     --vm-hang N    sleep N secs before free (default none, 0 is inf)</span><br><span class="line">     --vm-keep      redirty memory instead of freeing and reallocating</span><br><span class="line"> -d, --hdd N        spawn N workers spinning on write()/unlink()</span><br><span class="line">     --hdd-bytes B  write B bytes per hdd worker (default is 1GB)</span><br><span class="line"></span><br><span class="line">Example: stress --cpu 8 --io 4 --vm 2 --vm-bytes 128M --timeout 10s</span><br><span class="line"></span><br><span class="line">Note: Numbers may be suffixed with s,m,h,d,y (time) or B,K,M,G (size).</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Append Date/Time to File</title>
      <link href="/posts/4228bd6/"/>
      <url>/posts/4228bd6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">time_t</span> rawtime;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> * <span class="title">timeinfo</span>;</span></span><br><span class="line">    <span class="keyword">char</span> buffer[<span class="number">80</span>];</span><br><span class="line"></span><br><span class="line">    time (&amp;rawtime);</span><br><span class="line">    timeinfo = localtime(&amp;rawtime);</span><br><span class="line"></span><br><span class="line">    strftime(buffer,<span class="number">80</span>,<span class="string">"%Y-%m-%d %H:%M:%S\n"</span>,timeinfo);</span><br><span class="line"></span><br><span class="line">    ofstream myfile;</span><br><span class="line">    myfile.open(<span class="string">"test.txt"</span>, ios_base::app);</span><br><span class="line">    myfile &lt;&lt; <span class="built_in">string</span>(buffer);</span><br><span class="line">    myfile.close();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在category跟tag頁面，加上年份分隔</title>
      <link href="/posts/327d13d/"/>
      <url>/posts/327d13d/</url>
      
        <content type="html"><![CDATA[<img src="/posts/327d13d/before.jpg" class title="修改前"><p>category跟tag的改法一樣</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/themes/next/layout/category.swig b/themes/next/layout/category.swig</span><br><span class="line">index 8e3aa72..83e7916 100644</span><br><span class="line">--- a/themes/next/layout/category.swig</span><br><span class="line">+++ b/themes/next/layout/category.swig</span><br><span class="line">@@ -20,6 +20,19 @@</span><br><span class="line">       &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">       &#123;% for post in page.posts %&#125;</span><br><span class="line">+</span><br><span class="line">+          &#123;# Show year #&#125;</span><br><span class="line">+          &#123;% set year %&#125;</span><br><span class="line">+          &#123;% set post.year = date(post.date, &apos;YYYY&apos;) %&#125;</span><br><span class="line">+</span><br><span class="line">+          &#123;% if post.year !== year %&#125;</span><br><span class="line">+              &#123;% set year = post.year %&#125;</span><br><span class="line">+              &lt;div class=&quot;collection-title&quot;&gt;</span><br><span class="line">+                &lt;h2 class=&quot;archive-year motion-element&quot; id=&quot;archive-year-&#123;&#123; year &#125;&#125;&quot;&gt;&#123;&#123; year &#125;&#125;&lt;/h2&gt;</span><br><span class="line">+              &lt;/div&gt;</span><br><span class="line">+          &#123;% endif %&#125;</span><br><span class="line">+          &#123;# endshow #&#125;</span><br><span class="line">+</span><br><span class="line">         &#123;&#123; post_template.render(post) &#125;&#125;</span><br><span class="line">       &#123;% endfor %&#125;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line">@@ -36,3 +49,11 @@</span><br><span class="line"> &#123;% block sidebar %&#125;</span><br><span class="line">   &#123;&#123; sidebar_template.render(false) &#125;&#125;</span><br><span class="line"> &#123;% endblock %&#125;</span><br><span class="line">+</span><br><span class="line">+&#123;% block script_extra %&#125;</span><br><span class="line">+  &#123;% if theme.use_motion %&#125;</span><br><span class="line">+    &lt;script type=&quot;text/javascript&quot; id=&quot;motion.page.archive&quot;&gt;</span><br><span class="line">+      $(&apos;.archive-year&apos;).velocity(&apos;transition.slideLeftIn&apos;);</span><br><span class="line">+    &lt;/script&gt;</span><br><span class="line">+  &#123;% endif %&#125;</span><br><span class="line">+&#123;% endblock %&#125;</span><br><span class="line">\ No newline at end of file</span><br></pre></td></tr></table></figure><img src="/posts/327d13d/after.jpg" class title="修改後">]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rclone</title>
      <link href="/posts/dd6717ac/"/>
      <url>/posts/dd6717ac/</url>
      
        <content type="html"><![CDATA[<ul><li><p>下載<br><a href="https://rclone.org/downloads/" target="_blank" rel="noopener">https://rclone.org/downloads/</a><br>直接解壓縮 rclone-v1.51.0-windows-amd64.zip</p></li><li><p>設定config</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rclone config</span></span><br><span class="line">No remotes found - make a new one</span><br><span class="line">n) New remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line"><span class="meta">n/s/q&gt;</span><span class="bash"> n</span></span><br><span class="line"><span class="meta">name&gt;</span><span class="bash"> GD</span></span><br><span class="line">Type of storage to configure.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line">...</span><br><span class="line">13 / Google Drive</span><br><span class="line">   \ "drive"</span><br><span class="line">...</span><br><span class="line"><span class="meta">Storage&gt;</span><span class="bash"> 13</span></span><br><span class="line">** See help for drive backend at: https://rclone.org/drive/ **</span><br><span class="line"></span><br><span class="line">Google Application Client Id</span><br><span class="line">Setting your own is recommended.</span><br><span class="line">See https://rclone.org/drive/#making-your-own-client-id for how to create your own.</span><br><span class="line">If you leave this blank, it will use an internal key which is low performance.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">client_id&gt;</span></span><br><span class="line">Google Application Client Secret</span><br><span class="line">Setting your own is recommended.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">client_secret&gt;</span></span><br><span class="line">Scope that rclone should use when requesting access from drive.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line"> 1 / Full access all files, excluding Application Data Folder.</span><br><span class="line">   \ "drive"</span><br><span class="line"> 2 / Read-only access to file metadata and file contents.</span><br><span class="line">   \ "drive.readonly"</span><br><span class="line">   / Access to files created by rclone only.</span><br><span class="line"> 3 | These are visible in the drive website.</span><br><span class="line">   | File authorization is revoked when the user deauthorizes the app.</span><br><span class="line">   \ "drive.file"</span><br><span class="line">   / Allows read and write access to the Application Data folder.</span><br><span class="line"> 4 | This is not visible in the drive website.</span><br><span class="line">   \ "drive.appfolder"</span><br><span class="line">   / Allows read-only access to file metadata but</span><br><span class="line"> 5 | does not allow any access to read or download file content.</span><br><span class="line">   \ "drive.metadata.readonly"</span><br><span class="line"><span class="meta">scope&gt;</span><span class="bash"> 1</span></span><br><span class="line">ID of the root folder</span><br><span class="line">Leave blank normally.</span><br><span class="line"></span><br><span class="line">Fill in to access "Computers" folders (see docs), or for rclone to use</span><br><span class="line">a non root folder as its starting point.</span><br><span class="line"></span><br><span class="line">Note that if this is blank, the first time rclone runs it will fill it</span><br><span class="line">in with the ID of the root folder.</span><br><span class="line"></span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">root_folder_id&gt;</span></span><br><span class="line">Service Account Credentials JSON file path</span><br><span class="line">Leave blank normally.</span><br><span class="line">Needed only if you want use SA instead of interactive login.</span><br><span class="line">Enter a string value. Press Enter for the default ("").</span><br><span class="line"><span class="meta">service_account_file&gt;</span></span><br><span class="line">Edit advanced config? (y/n)</span><br><span class="line">y) Yes</span><br><span class="line">n) No (default)</span><br><span class="line"><span class="meta">y/n&gt;</span><span class="bash"> n</span></span><br><span class="line">Remote config</span><br><span class="line">Use auto config?</span><br><span class="line"> * Say Y if not sure</span><br><span class="line"> * Say N if you are working on a remote or headless machine</span><br><span class="line">y) Yes (default)</span><br><span class="line">n) No</span><br><span class="line"><span class="meta">y/n&gt;</span><span class="bash"> y</span></span><br><span class="line">If your browser doesn't open automatically go to the following link: http://127.0.0.1:53682/auth?state=dcXtut6iPOjzZEkRgNhRGw</span><br><span class="line">Log in and authorize rclone for access</span><br><span class="line">Waiting for code...</span><br><span class="line">Got code</span><br><span class="line">Configure this as a team drive?</span><br><span class="line">y) Yes</span><br><span class="line">n) No (default)</span><br><span class="line"><span class="meta">y/n&gt;</span><span class="bash"> n</span></span><br><span class="line">--------------------</span><br><span class="line">[GD]</span><br><span class="line">type = drive</span><br><span class="line">scope = drive</span><br><span class="line">token = &#123;"access_token":"XXXX","token_type":"Bearer","refresh_token":"YYYY","expiry":"2020-03-04T10:53:52.6578174+08:00"&#125;</span><br><span class="line">--------------------</span><br><span class="line">y) Yes this is OK (default)</span><br><span class="line">e) Edit this remote</span><br><span class="line">d) Delete this remote</span><br><span class="line"><span class="meta">y/e/d&gt;</span><span class="bash"> y</span></span><br></pre></td></tr></table></figure><ul><li>client_id和client_secret可以略過不設定</li><li>root_folder_id和service_account_file可以略過不設定</li><li>在設定過程中，會自動開啟網頁要求同意rclone存取Google Drive的權限<table style="width: 70%;"><tbody><tr><td>　<img alt src="/posts/dd6717ac/permission1.jpg">　</td><td>　<img alt src="/posts/dd6717ac/permission2.jpg">　</td></tr></tbody></table></li></ul></li><li><p>操作</p><ul><li>list<br>lsd -&gt; 列出GD:目錄下的資料夾 (–max-depth預設為1，即只會列出第一層目錄下的資料夾)<br>ls -&gt; 列出GD:目錄下的檔案 (預設會列出所有的檔案)<br>ls –max-depth 1 -&gt; 列出GD:目錄下，第一層的檔案<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rclone lsd GD:</span></span><br><span class="line">        -1 2018-09-18 09:00:36        -1 folder1</span><br><span class="line">        -1 2018-09-18 08:50:55        -1 folder2</span><br><span class="line"><span class="meta">$</span><span class="bash"> rclone ls --max-depth 1 GD:</span></span><br><span class="line">    28263 file1.xlsx</span><br><span class="line">  3554240 file2.docx</span><br></pre></td></tr></table></figure></li><li>copy file from local to remote<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rclone copy -v README.txt GD:</span></span><br><span class="line">2020/03/04 10:18:31 INFO  : README.txt: Copied (new)</span><br><span class="line">2020/03/04 10:18:31 INFO  :</span><br><span class="line">Transferred:      838.637k / 838.637 kBytes, 100%, 222.683 kBytes/s, ETA 0s</span><br><span class="line">Transferred:            1 / 1, 100%</span><br><span class="line">Elapsed time:         3.7s</span><br><span class="line"><span class="meta">$</span><span class="bash"> rclone copy -v folder GD:/folder</span></span><br><span class="line">2020/03/04 10:27:57 INFO  : Google drive root 'folder': Waiting for checks to finish</span><br><span class="line">2020/03/04 10:27:57 INFO  : Google drive root 'folder': Waiting for transfers to finish</span><br><span class="line">2020/03/04 10:28:00 INFO  : api.txt: Copied (new)</span><br><span class="line">2020/03/04 10:28:01 INFO  : issue.txt: Copied (new)</span><br><span class="line">2020/03/04 10:28:01 INFO  : index.html: Copied (new)</span><br><span class="line">2020/03/04 10:28:04 INFO  : log.txt: Copied (new)</span><br><span class="line">2020/03/04 10:28:22 INFO  : 192.168.56.3_2020-02-18_10-19-22.log: Copied (new)</span><br><span class="line">2020/03/04 10:28:22 INFO  :</span><br><span class="line">Transferred:        7.076M / 7.076 MBytes, 100%, 285.334 kBytes/s, ETA 0s</span><br><span class="line">Transferred:            5 / 5, 100%</span><br><span class="line">Elapsed time:        25.3s</span><br></pre></td></tr></table></figure></li><li>copy file from remote to local<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rclone copy -v GD:/file.txt .</span></span><br><span class="line">2020/03/04 10:21:54 INFO  : file.txt: Copied (new)</span><br><span class="line">2020/03/04 10:21:54 INFO  :</span><br><span class="line">Transferred:      838.637k / 838.637 kBytes, 100%, 513.379 kBytes/s, ETA 0s</span><br><span class="line">Transferred:            1 / 1, 100%</span><br><span class="line">Elapsed time:         1.6s</span><br><span class="line"><span class="meta">$</span><span class="bash"> rclone copy -v GD:/folder ./folder</span></span><br><span class="line">2020/03/04 10:24:36 INFO  : Local file system at //?/D:/rclone-v1.51.0-windows-amd64/folder: Waiting for checks to finish</span><br><span class="line">2020/03/04 10:24:36 INFO  : Local file system at //?/D:/rclone-v1.51.0-windows-amd64/folder: Waiting for transfers to finish</span><br><span class="line">2020/03/04 10:24:36 INFO  : api.txt: Copied (new)</span><br><span class="line">2020/03/04 10:24:37 INFO  : index.html: Copied (new)</span><br><span class="line">2020/03/04 10:24:37 INFO  : issue.txt: Copied (new)</span><br><span class="line">2020/03/04 10:24:37 INFO  : log.txt: Copied (new)</span><br><span class="line">2020/03/04 10:24:38 INFO  : 192.168.56.3_2020-02-18_10-19-22.log: Copied (new)</span><br><span class="line">2020/03/04 10:24:38 INFO  :</span><br><span class="line">Transferred:        7.076M / 7.076 MBytes, 100%, 4.007 MBytes/s, ETA 0s</span><br><span class="line">Transferred:            5 / 5, 100%</span><br><span class="line">Elapsed time:         1.7s</span><br></pre></td></tr></table></figure></li><li>query size<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rclone size GD:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rclone size GD:folder</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rclone size GD:folder/subfolder</span></span><br><span class="line">Total objects: 7</span><br><span class="line">Total size: 596.513 MBytes (625489224 Bytes)</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> rclone </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rclone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Guide</title>
      <link href="/posts/ab21860c/"/>
      <url>/posts/ab21860c/</url>
      
        <content type="html"><![CDATA[<h4 id="安裝hexo，並且使用git追蹤所有資料"><a href="#安裝hexo，並且使用git追蹤所有資料" class="headerlink" title="安裝hexo，並且使用git追蹤所有資料"></a>安裝hexo，並且使用git追蹤所有資料</h4><ol start="0"><li><p>Pre-required</p><ul><li>Node.js</li><li>git</li></ul></li><li><p>安裝hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g (預設裝的hexo是4.0.0)</span><br><span class="line">$ npm install hexo@5.0.0</span><br></pre></td></tr></table></figure></li><li><p>建立github repository<br>qcycp.github.io</p></li><li><p>建立branch<br>master: hexo生成的網頁資料<br>hexo (set default): raw data的markdown檔案</p></li><li><p>in a new and empty folder <code>tmp</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></li><li><p>建立本機端hexo project</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git clone http://github.com/qcycp/qcycp.github.io.git -b hexo</span><br><span class="line">$ cp -rf tmp/* qcycp.github.io/</span><br><span class="line">$ cd qcycp.github.io/</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>設定config<br>edit _config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: http://github.com/qcycp/qcycp.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>將source code進到hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;setup Hexo&quot;</span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure></li><li><p>將hexo內容進到master</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure></li><li><p>網頁<br><a href="https://qcycp.github.io/">https://qcycp.github.io/</a></p></li><li><p>re-setup hexo project</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone http://github.com/qcycp/qcycp.github.io.git -b hexo</span><br><span class="line">$ cd qcycp.github.io</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p>更改資料夾或檔名大小寫<br>假設原本已經建立了tag為AAA，後來改成aaa時，網頁連結會修改為/aaa/index.html<br>但是在gitlab中的資料夾，依然會是AAA，所以實際上會造成網頁連結404<br>預設git在windows中，是不分大小寫的，所以hexo在checkin時，才會無法對大小修改進行更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> .deploy_git</span><br><span class="line">$ git config core.ignorecase <span class="literal">false</span></span><br><span class="line">$ rm -rf tags/AAA <span class="comment">#把舊的git目錄結構刪除，再重新上傳，根據需求處理categories或tags中的目錄</span></span><br><span class="line">$ git commit -m <span class="string">"update"</span></span><br><span class="line">$ git push <span class="comment">#在.deploy_git中操作的，是qcycp.github.io.git(master)生成的網頁資料</span></span><br><span class="line">$ <span class="built_in">cd</span> ../</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><h4 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$ cat package.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"hexo generate"</span>,</span><br><span class="line">    <span class="attr">"clean"</span>: <span class="string">"hexo clean"</span>,</span><br><span class="line">    <span class="attr">"deploy"</span>: <span class="string">"hexo deploy"</span>,</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"hexo server"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hexo"</span>: &#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"4.0.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"hexo"</span>: <span class="string">"^4.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-abbrlink"</span>: <span class="string">"^2.0.5"</span>, <span class="comment">/* 建立文章唯一的link */</span></span><br><span class="line">    <span class="attr">"hexo-asset-link"</span>: <span class="string">"^1.2.1"</span>, <span class="comment">/* 支援圖片目錄、自動上傳的套件 */</span></span><br><span class="line">    <span class="attr">"hexo-blog-encrypt"</span>: <span class="string">"^3.0.3"</span>, <span class="comment">/* 支援文章加密的套件 */</span></span><br><span class="line">    <span class="attr">"hexo-deployer-git"</span>: <span class="string">"^2.0.0"</span>, <span class="comment">/* 支援git部署的套件 */</span></span><br><span class="line">    <span class="attr">"hexo-generator-archive"</span>: <span class="string">"^1.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-generator-category"</span>: <span class="string">"^1.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-generator-index"</span>: <span class="string">"^1.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-generator-search"</span>: <span class="string">"^2.4.0"</span>, <span class="comment">/* 支援搜尋的套件 */</span></span><br><span class="line">    <span class="attr">"hexo-generator-tag"</span>: <span class="string">"^1.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-hide-posts"</span>: <span class="string">"^0.1.0"</span>, <span class="comment">/* 支援文章隱藏的套件 */</span></span><br><span class="line">    <span class="attr">"hexo-renderer-ejs"</span>: <span class="string">"^1.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-renderer-marked"</span>: <span class="string">"^2.0.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-renderer-stylus"</span>: <span class="string">"^1.1.0"</span>, <span class="comment">/* 默認安裝 */</span></span><br><span class="line">    <span class="attr">"hexo-server"</span>: <span class="string">"^1.0.0"</span> <span class="comment">/* 默認安裝 */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd qcycp.github.io</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br><span class="line">$ git clone https://github.com/theme-next/hexo-theme-next.git</span><br></pre></td></tr></table></figure><ul><li>建立tags頁面<br>$ hexo new page tags<br>$ cd source/tags/<br>$ edit index.md<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2019-11-07 12:45:26</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>$ cd themes/next/<br>$ edit _config.yml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /|| home</span><br><span class="line">  tags: /tags/||tags</span><br></pre></td></tr></table></figure></li><li>canvas_nest 套件<br>在空白處會有移動的線條動畫<ul><li>安裝<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/next</span><br><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</span><br></pre></td></tr></table></figure></li><li>設定<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Canvas-nest</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span><br><span class="line">canvas_nest:</span><br><span class="line">  enable: true</span><br><span class="line">  onmobile: true # display on mobile or not</span><br><span class="line">  color: &quot;0,0,255&quot; # RGB values, use &apos;,&apos; to separate</span><br><span class="line">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class="line">  zIndex: -1 # z-index property of the background</span><br><span class="line">  count: 99 # the number of lines</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="套件"><a href="#套件" class="headerlink" title="套件"></a>套件</h4><ul><li>hexo-generator-search</li><li>文章連結唯一化<br>Hexo 的文章連結預設是採用發佈時間或標題來使用，如果變更會導至連結改變，不利分享或 SEO，可安裝 hexo-abbrlink 解決<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cd qcycp.github.io</span><br><span class="line">$ npm install hexo-abbrlink --save</span><br><span class="line">$ vim _config.yml</span><br><span class="line">permalink: posts/:abbrlink/</span><br><span class="line"></span><br><span class="line"># abbrlink config</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  #support crc16(default) and crc32</span><br><span class="line">  rep: hex    #support dec(default) and hex</span><br></pre></td></tr></table></figure></li><li>安裝上傳本地圖片的外掛<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd qcycp.github.io</span><br><span class="line">$ npm install https://github.com/CodeFalling/hexo-asset-image –save</span><br></pre></td></tr></table></figure>執行hexo new article_name<br>在 source/_posts 資料夾內除了生成 article_name.md 檔案還會生成一個 article_name 的資料夾，把圖片複製到資料夾中，使用下方任一方式新增圖片<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img image.jpg 我是圖片 %&#125;</span><br><span class="line">![我是圖片](image.jpg)</span><br></pre></td></tr></table></figure></li></ul><h1 id="pdf"><a href="#pdf" class="headerlink" title="pdf"></a>pdf</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-pdf</span><br><span class="line">&#123;% pdf posts/abbrlink/document.pdf %&#125;</span><br></pre></td></tr></table></figure><p>themes/next/_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pdf:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h4 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h4><ul><li>新建文章<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new article_name</span><br><span class="line">$ cd source/_post</span><br><span class="line">$ edit article_name.md</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure></li><li>草稿<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new draft article_name</span><br><span class="line">$ cd source/_drafts</span><br><span class="line">$ edit article_name.md</span><br><span class="line">$ hexo publish article_name.md</span><br></pre></td></tr></table></figure>可以手動將文章</li><li>local server<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br><span class="line"></span><br><span class="line">$ hexp server --draft // 可以顯示草稿文章</span><br></pre></td></tr></table></figure></li><li>刪除文章<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd source/_post</span><br><span class="line">$ rm target_file</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure></li></ul><h4 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h4><p><a href="https://yaoandy107.github.io/hexo-tutorial/" target="_blank" rel="noopener">https://yaoandy107.github.io/hexo-tutorial/</a><br><a href="https://epsi-rns.gitlab.io/ssg/2019/05/30/hexo-summary/" target="_blank" rel="noopener">https://epsi-rns.gitlab.io/ssg/2019/05/30/hexo-summary/</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>md5sum</title>
      <link href="/posts/99132266/"/>
      <url>/posts/99132266/</url>
      
        <content type="html"><![CDATA[<ul><li>針對檔案製作 md5 checksum，可以用該 checksum 檢察該檔案是否是原先的檔案內容，避免在傳輸或上傳、下載的過程中，檔案有破損或被修改過<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ date &gt; file</span><br><span class="line">$ md5sum file &gt; file.md5sum</span><br><span class="line">$ md5sum -c file.md5sum</span><br><span class="line">file: OK</span><br></pre></td></tr></table></figure></li><li>檔案內容被修改過<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ date &gt; file</span><br><span class="line">$ md5sum -c file.md5sum</span><br><span class="line">file: FAILED</span><br><span class="line">md5sum: WARNING: 1 computed checksum did NOT match</span><br></pre></td></tr></table></figure></li><li>每個檔案都可以產生一組唯一的checksum<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat file.md5sum</span><br><span class="line">09b91cdeb925bff08fda813dcb7f187a  file</span><br></pre></td></tr></table></figure></li><li>對於要檢查的檔案，檔名不能做任何修改，且要跟file.md5sum的位置一致<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mv file file_2</span><br><span class="line">$ md5sum -c file.md5sum</span><br><span class="line">md5sum: file: No such file or directory</span><br><span class="line">date.1: FAILED open or read</span><br><span class="line">md5sum: WARNING: 1 listed file could not be read</span><br></pre></td></tr></table></figure></li><li>可以針對多個檔案製作 md5sum<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ date &gt; file_1</span><br><span class="line">$ date &gt; file_2</span><br><span class="line">$ md5sum file_1 file_2 &gt; file.md5sum</span><br><span class="line">$ md5sum -c file.md5sum</span><br><span class="line">file_1: OK</span><br><span class="line">file_2: OK</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> mk5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> md5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Notes</title>
      <link href="/posts/374b29bd/"/>
      <url>/posts/374b29bd/</url>
      
        <content type="html"><![CDATA[<ul><li><p>How to keep docker container running<br>add following command at end of Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CMD tail -f /dev/null</span><br></pre></td></tr></table></figure></li><li><p>There is an experimental build flag –squash to summarize everything into one layer.<br>For example, <code>docker build --squash -t &lt;tag&gt; .</code></p><ul><li>How to enable experimental features in the daemon?<br>edit /etc/docker/daemon.json configuration file:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;experimental&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Check experimental status<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker version -f &apos;&#123;&#123;.Server.Experimental&#125;&#125;&apos;</span><br><span class="line">true</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="Container-data"><a href="#Container-data" class="headerlink" title="Container data"></a>Container data</h3><ul><li>docker的資料會在HOST的/var/lib/docker目錄下</li><li>每個container的資料會在/var/lib/docker/containers裡</li><li>每個container的log會存在/var/lib/docker/containers/hash/hash-json.log<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker inspect --format=<span class="string">'&#123;&#123;.LogPath&#125;&#125;'</span> 847d0eb77dfe</span><br><span class="line">/var/lib/docker/containers/847d0eb77dfe7169a68bd7e6c7cf37f0b237689714a91c3debecb162e7c6eccf/847d0eb77dfe7169a68bd7e6c7cf37f0b237689714a91c3debecb162e7c6eccf-json.log</span><br></pre></td></tr></table></figure></li></ul><h3 id="Image-size-and-Dockerfile"><a href="#Image-size-and-Dockerfile" class="headerlink" title="Image size and Dockerfile"></a>Image size and Dockerfile</h3><p><a href="https://blog.replicated.com/refactoring-a-dockerfile-for-image-size/" target="_blank" rel="noopener">Refactoring a Dockerfile for image size</a></p><ol><li>每一個RUN指令都會產生一個Layer</li><li>多個指令分成多個Layer來執行，比起多個指令在同一個Layer執行，所佔的空間要大</li><li>install package跟remove package如果在不同Layer執行，image size並不會變小，必須要在同一個Layer內執行，remove package才能縮減image size</li></ol><h3 id="Commands"><a href="#Commands" class="headerlink" title="Commands"></a>Commands</h3><p><a href="https://docs.docker.com/engine/reference/commandline/docker/" target="_blank" rel="noopener">https://docs.docker.com/engine/reference/commandline/docker/</a></p><ul><li>display docker version and info<br><code>docker --version</code><br><code>docker version</code><br><code>docker info</code></li><li>search docker image on docker-hub<br><code>docker search dlib</code></li><li>list docker images<br><code>docker images</code></li><li>list docker containers<br><code>docker ps -a</code></li><li>build and run<br><code>docker build --no-cache -t myimage .</code><br><code>docker run -d -p 1337:80 myimage</code><br><code>docker run -d --restart=always --name mycontainer -e PYTHONUNBUFFERED=0 -p 1337:80 myimage</code><br><code>docker run -d --restart=always --name mycontainer -e REMOTE_HOST_IP=172.18.71.12:8857 -p 1337:80 myimage</code><br>可以使用update更新指令中的參數<br><code>docker update --restart=always myimage</code></li><li>docker-compose<br><code>docker-compose up</code><br><code>docker-compose up -d</code><br><code>docker-compose up -d service_name</code><br><code>docker-compose down</code><br><code>docker-compose images</code><br><code>docker-compose restart -d service_name</code><br><code>docker-compose -f tmp_docker-compose_ci.yml up -d</code></li><li>save docker image<br><code>docker save myimage &gt; myimage.tar</code><br><code>docker save -o myimage.tar myimage</code><br><code>docker save myimage | gzip &gt; myimage.tgz</code><br><code>docker export myimage | gzip &gt; myimage.tgz</code></li><li>load docker image<br><code>docker load -i myimage.tar</code><br><code>gunzip -c myimage.tgz | docker load</code></li><li>container operations<br><code>docker stop container_id</code><br><code>docker rm container_id</code><br><code>docker rm -f container_id</code><br><code>docker restart container_id</code></li><li>image operations<br><code>docker tag source_image_name:tag target_image_name:tag</code><br><code>docker rmi target_image_name:tag</code><br><code>docker rmi image_id</code></li><li>show logs<br><code>docker logs -f container_id</code></li><li>bash operations<br><code>docker exec -it container_id bash</code><br><code>docker exec -i mysql /usr/bin/mysql -u root -p1234 &lt;&lt;&lt; &#39;use dbname;show tables;&#39;</code><br><code>docker exec -i mysql /usr/bin/mysql -u root -p1234 -e &#39;use dbname;show tables;&#39;</code><br><code>docker exec -it mycontainer ls</code><br><code>docker exec -it mycontainer sh -c &#39;ls&#39;</code></li><li>copy file from/to container<br><code>docker cp nginx.conf mycontainer:/etc/nginx/conf.d/</code><br><code>docker cp mycontainer:/app/file /home/user/</code></li><li>docker container stats<br><code>docker stats --no-stream</code><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker stats --no-stream</span><br><span class="line">CONTAINER ID        NAME                       CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS</span><br><span class="line">b753136fd716        mycontainer                37.76%              144.7MiB / 1.953GiB   7.24%               107MB / 2.05MB      7.64MB / 0B         31</span><br></pre></td></tr></table></figure></li><li>get a shell on the host<br><code>$ docker run --privileged --pid=host -it alpine:3.8 nsenter -t 1 -m -u -n -i sh</code></li><li>Links<br><a href="https://platform9.com/blog/container-namespaces-deep-dive-container-networking/" target="_blank" rel="noopener">Container Namespaces</a></li><li>清理系統<ul><li>刪除沒有 tag 的 image<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker image prune</span><br><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] y</span><br><span class="line">Total reclaimed space: 0B</span><br></pre></td></tr></table></figure></li><li>刪除沒有 running container 參考到的 image<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ docker image prune --all</span><br><span class="line">WARNING! This will remove all images without at least one container associated to them.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] y</span><br><span class="line">Deleted Images:</span><br><span class="line">untagged: 10.36.94.120:50000/node:12.2.0-alpine</span><br><span class="line">untagged: 10.36.94.120:50000/node@sha256:44833e4939cae1d429eaf303db96df2a7676114822e50c77ddcb888fc40d2e55</span><br><span class="line">deleted: sha256:f391dabf9dce53bfc184823f18b7703db8dfead7f25e5b376865e690433bec78</span><br><span class="line">deleted: sha256:336cfdd902c9e424a9ddf5d12f844ea7657bb93fff1ac480f2f58d03a0d61712</span><br><span class="line">deleted: sha256:8e16b58e2279476d2b32eac06400116114fb9facbd8205409d2285e1bdcb7312</span><br><span class="line"></span><br><span class="line">Total reclaimed space: 3.704GB</span><br></pre></td></tr></table></figure></li><li>刪除 image 及 container<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ docker system prune</span><br><span class="line">WARNING! This will remove:</span><br><span class="line">        - all stopped containers</span><br><span class="line">        - all networks not used by at least one container</span><br><span class="line">        - all dangling images</span><br><span class="line">        - all dangling build cache</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] y</span><br><span class="line">Total reclaimed space: 0B</span><br><span class="line"></span><br><span class="line">$ docker system prune --all</span><br><span class="line">WARNING! This will remove:</span><br><span class="line">        - all stopped containers</span><br><span class="line">        - all networks not used by at least one container</span><br><span class="line">        - all images without at least one container associated to them</span><br><span class="line">        - all build cache</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] y</span><br><span class="line">Total reclaimed space: 0B</span><br></pre></td></tr></table></figure></li></ul></li><li>Get information of docker system<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker system df</span><br><span class="line">TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE</span><br><span class="line">Images              5                   5                   2.023GB             0B (0%)</span><br><span class="line">Containers          5                   5                   3.54MB              0B (0%)</span><br><span class="line">Local Volumes       3                   1                   1.66GB              30.44MB (1%)</span><br><span class="line">Build Cache         0                   0                   0B                  0B</span><br></pre></td></tr></table></figure></li><li>Reference<br><a href="https://peihsinsu.gitbooks.io/docker-note-book/content/dockerfile-env-vs-arg.html" target="_blank" rel="noopener">https://peihsinsu.gitbooks.io/docker-note-book/content/dockerfile-env-vs-arg.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ Notes</title>
      <link href="/posts/b4afeaae/"/>
      <url>/posts/b4afeaae/</url>
      
        <content type="html"><![CDATA[<ul><li>Compiling C++11 with g++<br>g++ -std=c++11 -o app app.cpp</li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zip/unzip</title>
      <link href="/posts/a072fa7/"/>
      <url>/posts/a072fa7/</url>
      
        <content type="html"><![CDATA[<ul><li>zipfile<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"></span><br><span class="line">OUTPUT_FLODER = <span class="string">'output'</span></span><br><span class="line">INPUT_ZIP_FILE = <span class="string">'input.zip'</span></span><br><span class="line">OUTPUT_ZIP_FILE = <span class="string">'output.zip'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unzip</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(INPUT_ZIP_FILE):</span><br><span class="line">        os.makedirs(OUTPUT_FLODER, exist_ok=<span class="literal">True</span>)</span><br><span class="line">        zf = zipfile.ZipFile(INPUT_ZIP_FILE)</span><br><span class="line">        zf.extractall(OUTPUT_FLODER)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zip</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#zf = zipfile.ZipFile(OUTPUT_ZIP_FILE, mode='w')#just zip and no compression</span></span><br><span class="line">    zf = zipfile.ZipFile(OUTPUT_ZIP_FILE, mode=<span class="string">'w'</span>, compression=zipfile.ZIP_DEFLATED)</span><br><span class="line">    os.chdir(<span class="string">'output'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> root, dir, files <span class="keyword">in</span> os.walk(<span class="string">"."</span>):</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            fullpath = os.path.join(root, file)</span><br><span class="line">            zf.write(fullpath, arcname=file)</span><br><span class="line">    zf.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unzip()</span><br><span class="line">    zip()</span><br></pre></td></tr></table></figure></li><li>tarfile<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> tarfile</span><br><span class="line"></span><br><span class="line">tar = tarfile.open(<span class="string">'/app/logs.tar'</span>, <span class="string">'w'</span>)</span><br><span class="line"><span class="keyword">for</span> root, dir, files <span class="keyword">in</span> os.walk(<span class="string">'/app/logs/'</span>):</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        fullpath = os.path.join(root, file)</span><br><span class="line">        tar.add(fullpath, arcname=file)</span><br><span class="line">tar.close()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Happytime - rtsp stream server</title>
      <link href="/posts/6826a2b4/"/>
      <url>/posts/6826a2b4/</url>
      
        <content type="html"><![CDATA[<h5 id="Download-link"><a href="#Download-link" class="headerlink" title="Download link"></a>Download link</h5><p><a href="http://www.happytimesoft.com/download.html" target="_blank" rel="noopener">http://www.happytimesoft.com/download.html</a></p><h5 id="on-linux"><a href="#on-linux" class="headerlink" title="on linux"></a>on linux</h5><ul><li>RTSP Server for linux<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ tar xzf happytime-rtsp-server.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> happytime-rtsp-server/</span><br><span class="line">$ ./start.sh</span><br><span class="line">$ ./stop.sh</span><br></pre></td></tr></table></figure></li><li>config.xml<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">serverip</span>&gt;</span>192.168.56.6<span class="tag">&lt;/<span class="name">serverip</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">serverport</span>&gt;</span>8554<span class="tag">&lt;/<span class="name">serverport</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">output</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span><span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">video</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">codec</span>&gt;</span>H264<span class="tag">&lt;/<span class="name">codec</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">width</span>&gt;</span>1280<span class="tag">&lt;/<span class="name">width</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">height</span>&gt;</span>720<span class="tag">&lt;/<span class="name">height</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">framerate</span>&gt;</span>15<span class="tag">&lt;/<span class="name">framerate</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bitrate</span>&gt;</span><span class="tag">&lt;/<span class="name">bitrate</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Happytime </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rtsp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Install Gstreamer Manually</title>
      <link href="/posts/fcb954dd/"/>
      <url>/posts/fcb954dd/</url>
      
        <content type="html"><![CDATA[<ol><li>安裝meson<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install python3-setuptools</span><br><span class="line">$ wget https://files.pythonhosted.org/packages/ce/c5/e319419915d885933bdbfc2cee67eec8cf519b5b0ca9151573c62255dde9/meson-0.53.1.tar.gz</span><br><span class="line">$ tar xzf meson-0.53.1.tar.gz</span><br><span class="line">$ cd meson-0.53.1</span><br><span class="line">$ python3 setup.py build</span><br><span class="line">$ sudo python3 setup.py install</span><br></pre></td></tr></table></figure></li><li>安裝ninja<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install ninja-build</span><br></pre></td></tr></table></figure></li><li>安裝gstreamer，可用git checkout tag切換版本<br><code>master: 1.17.0.1</code></li></ol><ul><li>prerequired<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install libglib2.0-dev flex bison</span><br></pre></td></tr></table></figure></li><li>必要<br>git clone <a href="https://github.com/GStreamer/gstreamer.git" target="_blank" rel="noopener">https://github.com/GStreamer/gstreamer.git</a><br>git clone <a href="https://github.com/GStreamer/gst-plugins-base.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-plugins-base.git</a><br>git clone <a href="https://github.com/GStreamer/gst-plugins-good.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-plugins-good.git</a><br>git clone <a href="https://github.com/GStreamer/gst-plugins-bad.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-plugins-bad.git</a><br>git clone <a href="https://github.com/GStreamer/gst-plugins-ugly.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-plugins-ugly.git</a></li><li>非必要，安裝libav必須先裝FFMpeg<br>git clone <a href="https://github.com/GStreamer/gst-libav.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-libav.git</a><br>git clone <a href="https://github.com/GStreamer/gstreamer-vaapi.git" target="_blank" rel="noopener">https://github.com/GStreamer/gstreamer-vaapi.git</a><br>git clone <a href="https://github.com/GStreamer/gst-omx.git" target="_blank" rel="noopener">https://github.com/GStreamer/gst-omx.git</a></li><li>steps<ul><li>build.sh<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rm -rf build &amp;&amp;</span><br><span class="line">mkdir build &amp;&amp;</span><br><span class="line"><span class="built_in">cd</span>    build &amp;&amp;</span><br><span class="line"></span><br><span class="line">meson  --prefix=/usr       \</span><br><span class="line">       -Dbuildtype=release \</span><br><span class="line">       -Dgst_debug=<span class="literal">false</span>   \</span><br><span class="line">       -Dgtk_doc=disabled  &amp;&amp;</span><br><span class="line">ninja</span><br></pre></td></tr></table></figure></li><li>install<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd build</span><br><span class="line">sudo ninja install</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> gstreamer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gstreamer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCV sample in C++</title>
      <link href="/posts/648a241a/"/>
      <url>/posts/648a241a/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"opencv2/opencv.hpp"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">VideoCapture <span class="title">cap</span><span class="params">(<span class="string">"rtsp://184.72.239.149/vod/mp4:BigBuckBunny_115k.mov"</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!cap.isOpened()) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Can not open video stream"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Mat frame;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">        cap &gt;&gt; frame;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (frame.empty())</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        imshow(<span class="string">"image"</span>, frame);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> key = (<span class="keyword">char</span>)waitKey(<span class="number">30</span>);</span><br><span class="line">        <span class="keyword">if</span> (key == <span class="number">27</span> || key == <span class="string">'q'</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Exit requested"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cap.release();</span><br><span class="line"></span><br><span class="line">    destroyAllWindows();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Check-the-opencv-version-in-ubuntu"><a href="#Check-the-opencv-version-in-ubuntu" class="headerlink" title="Check the opencv version in ubuntu"></a>Check the opencv version in ubuntu</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pkg-config --modversion opencv</span><br><span class="line">3.2.0</span><br></pre></td></tr></table></figure><h3 id="Compile"><a href="#Compile" class="headerlink" title="Compile"></a>Compile</h3><h5 id="with-system-opencv"><a href="#with-system-opencv" class="headerlink" title="with system opencv"></a>with system opencv</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ g++ main.cpp -o output `pkg-config --cflags --libs opencv`</span><br></pre></td></tr></table></figure><h5 id="with-specific-opencv-library"><a href="#with-specific-opencv-library" class="headerlink" title="with specific opencv library"></a>with specific opencv library</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LD_LIBRARY_PATH=/usr/local/lib g++ main.cpp -o output -I/usr/local/include/opencv4 -lopencv_videoio -lopencv_imgcodecs -lopencv_core</span><br></pre></td></tr></table></figure><h5 id="note"><a href="#note" class="headerlink" title="note"></a>note</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ pkg-config --cflags opencv</span><br><span class="line">-I/usr/include/opencv</span><br><span class="line">$ pkg-config --libs opencv</span><br><span class="line">-lopencv_shape -lopencv_stitching -lopencv_superres -lopencv_videostab -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_datasets -lopencv_dpm -lopencv_face -lopencv_freetype -lopencv_fuzzy -lopencv_hdf -lopencv_line_descriptor -lopencv_optflow -lopencv_video -lopencv_plot -lopencv_reg -lopencv_saliency -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_rgbd -lopencv_viz -lopencv_surface_matching -lopencv_text -lopencv_ximgproc -lopencv_calib3d -lopencv_features2d -lopencv_flann -lopencv_xobjdetect -lopencv_objdetect -lopencv_ml -lopencv_xphoto -lopencv_highgui -lopencv_videoio -lopencv_imgcodecs -lopencv_photo -lopencv_imgproc -lopencv_core</span><br></pre></td></tr></table></figure><h3 id="Execute"><a href="#Execute" class="headerlink" title="Execute"></a>Execute</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./output</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenCV </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Compile OpenCV on Windows</title>
      <link href="/posts/f3c7f3/"/>
      <url>/posts/f3c7f3/</url>
      
        <content type="html"><![CDATA[<h4 id="更新Visual-Studio套件"><a href="#更新Visual-Studio套件" class="headerlink" title="更新Visual Studio套件"></a>更新Visual Studio套件</h4><ol><li>打開Visual Studio 2019</li><li>工具-&gt;取得工具與功能-&gt;使用C++的桌面開發，主要是要更新CMAKE工具</li></ol><h4 id="安裝cmake"><a href="#安裝cmake" class="headerlink" title="安裝cmake"></a>安裝cmake</h4><p><a href="https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2-win64-x64.msi" target="_blank" rel="noopener">https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2-win64-x64.msi</a><br>下載Windows win64-x64 Installer: cmake-3.16.2-win64-x64.msi</p><h4 id="執行script"><a href="#執行script" class="headerlink" title="執行script"></a>執行script</h4><p>CMAKE_CONFIG_GENERATOR設定方式<br>根據你安裝的Visual Studio來設定，如果不確定版本，可以參考Visual Studio Installer顯示的資訊<br><img src="/posts/f3c7f3/Visual_Studio_Installer.png" alt><br>Visual Studio 15 2017 Win64<br><img src="/posts/f3c7f3/Visual_Studio_15_2017_WIn64.jpg" alt><br>Visual Studio 16 2019<br><img src="/posts/f3c7f3/Visual_Studio_16_2019.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash -e</span><br><span class="line">myRepo=$(pwd)</span><br><span class="line">CMAKE_CONFIG_GENERATOR=&quot;Visual Studio 16 2019&quot;</span><br><span class="line">if [  ! -d &quot;$myRepo/opencv&quot;  ]; then</span><br><span class="line">    echo &quot;cloning opencv&quot;</span><br><span class="line">    git clone https://github.com/opencv/opencv.git</span><br><span class="line">    mkdir -p Build/opencv</span><br><span class="line">    mkdir -p Install/opencv</span><br><span class="line">else</span><br><span class="line">    cd opencv</span><br><span class="line">    git pull --rebase</span><br><span class="line">    cd ..</span><br><span class="line">fi</span><br><span class="line">if [  ! -d &quot;$myRepo/opencv_contrib&quot;  ]; then</span><br><span class="line">    echo &quot;cloning opencv_contrib&quot;</span><br><span class="line">    git clone https://github.com/opencv/opencv_contrib.git</span><br><span class="line">    mkdir -p Build/opencv_contrib</span><br><span class="line">else</span><br><span class="line">    cd opencv_contrib</span><br><span class="line">    git pull --rebase</span><br><span class="line">    cd ..</span><br><span class="line">fi</span><br><span class="line">RepoSource=opencv</span><br><span class="line">pushd Build/$RepoSource</span><br><span class="line">CMAKE_OPTIONS=&apos;-DBUILD_PERF_TESTS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_DOCS:BOOL=OFF -DWITH_CUDA:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DINSTALL_CREATE_DISTRIB=ON -DWITH_MFX=ON&apos;</span><br><span class="line">cmake -G&quot;$CMAKE_CONFIG_GENERATOR&quot; $CMAKE_OPTIONS -DOPENCV_EXTRA_MODULES_PATH=&quot;$myRepo&quot;/opencv_contrib/modules -DCMAKE_INSTALL_PREFIX=&quot;$myRepo&quot;/install/&quot;$RepoSource&quot; &quot;$myRepo/$RepoSource&quot;</span><br><span class="line">echo &quot;************************* $Source_DIR --&gt;debug&quot;</span><br><span class="line">cmake --build .  --config debug</span><br><span class="line">echo &quot;************************* $Source_DIR --&gt;release&quot;</span><br><span class="line">cmake --build .  --config release</span><br><span class="line">cmake --build .  --target install --config release</span><br><span class="line">cmake --build .  --target install --config debug</span><br><span class="line">popd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> OpenCV </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to Use Docker in Docker</title>
      <link href="/posts/787ab444/"/>
      <url>/posts/787ab444/</url>
      
        <content type="html"><![CDATA[<ol><li><p>in Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu:16.04</span><br><span class="line"></span><br><span class="line">RUN apt-get update &amp;&amp; \</span><br><span class="line">    apt-get install --no-install-recommends -y redis-server</span><br></pre></td></tr></table></figure></li><li><p>in supervisord.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[program:redis-server]</span><br><span class="line">command=redis-server</span><br><span class="line">autorestart=true</span><br><span class="line"></span><br><span class="line">stdout_logfile_maxbytes = 0</span><br><span class="line">stdout_logfile = /dev/stdout</span><br><span class="line">stderr_logfile_maxbytes = 0</span><br><span class="line">stderr_logfile = /dev/stderr</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL Backup and Restore</title>
      <link href="/posts/50121f15/"/>
      <url>/posts/50121f15/</url>
      
        <content type="html"><![CDATA[<h3 id="backup-script"><a href="#backup-script" class="headerlink" title="backup script"></a>backup script</h3><p><code>docker exec -it mysql_container /usr/bin/mysqldump -u username --password=password db_name &gt; backup.sql</code></p><p><code>mysqldump db_name table_name &gt; backup.sql</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># shell script to backup MySQL database from mysql docker container</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># backup dest directory</span></span><br><span class="line">DEST=<span class="string">"/home/user/backup"</span></span><br><span class="line"></span><br><span class="line">DOCKER_CONTAINER=<span class="string">"mysql"</span></span><br><span class="line">TIME=<span class="string">"<span class="variable">$(date +"%Y%m%d%H%M%S")</span>"</span></span><br><span class="line"></span><br><span class="line">USER=<span class="string">"username"</span></span><br><span class="line">PWD=<span class="string">"password"</span></span><br><span class="line">DATABASE=<span class="string">"db_name"</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it <span class="variable">$DOCKER_CONTAINER</span> /usr/bin/mysqldump -u <span class="variable">$USER</span> --password=<span class="variable">$PWD</span> <span class="variable">$DATABASE</span> &gt; <span class="string">"<span class="variable">$DEST</span>/<span class="variable">$&#123;DATABASE&#125;</span>_<span class="variable">$TIME</span>.sql"</span></span><br></pre></td></tr></table></figure><h3 id="restore-script"><a href="#restore-script" class="headerlink" title="restore script"></a>restore script</h3><p><code>cat backup.sql | sudo docker exec -i mysql_container /usr/bin/mysql -u username --password=password db_name</code></p><p><code>mysql -u username -p db_name &lt; /path/to/backup.sql</code></p><p><code>$sh restore.sh backup.sql</code></p><ul><li>在restore時，若有錯誤時，可以加上–force強制執行<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@44197bac7b4c:/<span class="comment"># mysql -u username -p db_name --force &lt; backup.sql</span></span><br><span class="line">Enter password:</span><br><span class="line">ERROR 1064 (42000) at line 1: You have an error <span class="keyword">in</span> your SQL syntax; check the manual that corresponds to your MySQL server version <span class="keyword">for</span> the right syntax to use near <span class="string">'mysqldump: [Warning] Using a password on the command line interface can be insec'</span> at line 1</span><br><span class="line">ERROR 1231 (42000) at line 945: Variable <span class="string">'character_set_client'</span> can<span class="string">'t be set to the value of '</span>NULL<span class="string">'</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># shell script to restore MySQL database to mysql docker container</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"restore <span class="variable">$1</span>..."</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"command: restore.sh backup.sql"</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [ -f <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$1</span> not found."</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">DOCKER_CONTAINER=<span class="string">"mysql"</span></span><br><span class="line"></span><br><span class="line">USER=<span class="string">"username"</span></span><br><span class="line">PWD=<span class="string">"password"</span></span><br><span class="line">DATABASE=<span class="string">"db_name"</span></span><br><span class="line"></span><br><span class="line">cat <span class="variable">$1</span> | docker <span class="built_in">exec</span> -i <span class="variable">$DOCKER_CONTAINER</span> /usr/bin/mysql -u <span class="variable">$USER</span> --password=<span class="variable">$PWD</span> <span class="variable">$DATABASE</span></span><br></pre></td></tr></table></figure><h3 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo crontab -e</span><br><span class="line"><span class="comment"># 每天下午17:00都執行backup_mysql.sh這個script，並把log存到mysql_dumps.log</span></span><br><span class="line">00 17 * * * /home/user/data/backup_mysql.sh &gt; /home/user/data/mysql_dumps.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dict Sorting</title>
      <link href="/posts/3932c779/"/>
      <url>/posts/3932c779/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    d = &#123;<span class="number">2</span>: <span class="number">3</span>, <span class="number">1</span>: <span class="number">89</span>, <span class="number">4</span>: <span class="number">5</span>, <span class="number">3</span>: <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#sort by key</span></span><br><span class="line">    od = OrderedDict(sorted(d.items(), key=<span class="keyword">lambda</span> t: t[<span class="number">0</span>])) <span class="comment"># od = OrderedDict([(1, 89), (2, 3), (3, 0), (4, 5)])</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#sort by value</span></span><br><span class="line">    od = OrderedDict(sorted(d.items(), key=<span class="keyword">lambda</span> t: t[<span class="number">1</span>])) <span class="comment"># od = OrderedDict([(3, 0), (2, 3), (4, 5), (1, 89)])</span></span><br><span class="line"></span><br><span class="line">    list = sorted(d.items()) <span class="comment"># list = [(1, 89), (2, 3), (3, 0), (4, 5)]</span></span><br><span class="line">                             <span class="comment"># items in list are tuple</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>qcow to vdi</title>
      <link href="/posts/9452fe6b/"/>
      <url>/posts/9452fe6b/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install qemu-utils</span><br><span class="line">$ qemu-img convert -O vdi src.qcow2 dst.vdi</span><br><span class="line">$ qemu-img convert -O qcow2 src.vdi dst.qcow2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cmder</title>
      <link href="/posts/38a33950/"/>
      <url>/posts/38a33950/</url>
      
        <content type="html"><![CDATA[<ul><li>修改提示符<br>Edit <code>cmder/vendor/clink.lua</code>，將λ改成$即可</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">42     <span class="built_in">local</span> cmder_prompt = <span class="string">"\x1b[1;32;40m&#123;cwd&#125; &#123;git&#125;&#123;hg&#125;&#123;svn&#125; \n\x1b[1;39;40m&#123;lamb&#125; \x1b[0m"</span></span><br><span class="line">43     <span class="built_in">local</span> lambda = <span class="string">"λ"</span></span><br></pre></td></tr></table></figure><ul><li><p>設定預設路徑<br>Settings =&gt; Startup =&gt; Tasks =&gt; {cmd::Cmder}<br><code>cmd /k &quot;&quot;%ConEmuDir%\..\init.bat&quot; &quot; -new_console:d:D:\GoogleDrive</code><br><img src="/posts/38a33950/cmder.png" alt></p></li><li><p>使用 cmder 操作 SSH<br>ssh <a href="mailto:user@192.168.56.101" target="_blank" rel="noopener">user@192.168.56.101</a><br>scp <a href="mailto:user@192.168.56.101" target="_blank" rel="noopener">user@192.168.56.101</a>:/home/user/file .</p></li><li><p>設定快速連接 SSH</p></li></ul><ol><li>新增 Task<br><img src="/posts/38a33950/image01.png" alt></li><li>設定ssh類別<br>a. <code>ssh::root@192.168.56.101</code><br>b. <code>/icon &quot;%CMDER_ROOT%\icons\cmder.ico&quot;</code><br>c. <code>cmd /c &quot;%ConEmuDir%\..\git-for-windows\usr\bin\ssh root@192.168.56.101 -new_console:d:%USERPROFILE% &quot;-new_console:t:192.168.56.101&quot;</code></li><li>設定 host 位址</li><li>設定 連線資訊<br><img src="/posts/38a33950/image02.png" alt></li><li>連線<br><img src="/posts/38a33950/image03.png" alt></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> cmder </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitLab 建置CI/CD流程</title>
      <link href="/posts/d96b0415/"/>
      <url>/posts/d96b0415/</url>
      
        <content type="html"><![CDATA[<h4 id="建立gitlab-runner"><a href="#建立gitlab-runner" class="headerlink" title="建立gitlab-runner"></a>建立gitlab-runner</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">gitlab-runner:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitlab/gitlab-runner:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitlab-runner</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/timezone:/etc/timezone:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/docker-software/gitlab-runner/config:/etc/gitlab-runner</span></span><br></pre></td></tr></table></figure><h4 id="註冊runner"><a href="#註冊runner" class="headerlink" title="註冊runner"></a>註冊runner</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it gitlab-runner gitlab-runner register</span><br><span class="line">Runtime platform                                    arch=amd64 os=linux pid=165 revision=577f813d version=12.5.0</span><br><span class="line">Running <span class="keyword">in</span> system-mode.                            </span><br><span class="line">                                                   </span><br><span class="line">Please enter the gitlab-ci coordinator URL (e.g. https://gitlab.com/):</span><br><span class="line">http://192.168.56.5/</span><br><span class="line">Please enter the gitlab-ci token <span class="keyword">for</span> this runner:</span><br><span class="line">zS9KDv5_puTCKS32UbyM</span><br><span class="line">Please enter the gitlab-ci description <span class="keyword">for</span> this runner:</span><br><span class="line">[c420481843b4]: <span class="built_in">test</span>-runner</span><br><span class="line">Please enter the gitlab-ci tags <span class="keyword">for</span> this runner (comma separated):</span><br><span class="line">docker</span><br><span class="line">Registering runner... succeeded                     runner=zS9KDv5_</span><br><span class="line">Please enter the executor: shell, ssh, virtualbox, docker-ssh+machine, kubernetes, custom, docker-ssh, parallels, docker, docker+machine:</span><br><span class="line">docker</span><br><span class="line">Please enter the default Docker image (e.g. ruby:2.6): <span class="comment">#當.gitlab-ci.yml沒有指定image時，預設要用哪個docker image</span></span><br><span class="line">docker:19.03.5</span><br><span class="line">Runner registered successfully. Feel free to start it, but <span class="keyword">if</span> it<span class="string">'s running already the config should be automatically reloaded!</span></span><br></pre></td></tr></table></figure><ol><li>Please enter the gitlab-ci coordinator URL<br>輸入gitlab網站的URL</li><li>Please enter the gitlab-ci token for this runner<br>在gitlab CI/CD settings中，Specific/Shared Runners的identification</li><li>Please enter the gitlab-ci description for this runner<br>指定runner的名稱</li><li>Please enter the gitlab-ci tags for this runner<br>指定此runner的tag，在.gitlab-ci.yml中，必須指定對應的tag，才能使用此runner</li></ol><h4 id="docker-image-release-page"><a href="#docker-image-release-page" class="headerlink" title="docker image release page"></a>docker image release page</h4><p><a href="https://github.com/docker/docker-ce/releases" target="_blank" rel="noopener">https://github.com/docker/docker-ce/releases</a></p><h4 id="完成之後，config-toml內容如下"><a href="#完成之後，config-toml內容如下" class="headerlink" title="完成之後，config.toml內容如下"></a>完成之後，config.toml內容如下</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ cat /opt/docker-software/gitlab-runner/config/config.toml</span><br><span class="line">concurrent = 1</span><br><span class="line">check_interval = 0</span><br><span class="line"></span><br><span class="line">[session_server]</span><br><span class="line">  session_timeout = 1800</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = <span class="string">"test-runner"</span></span><br><span class="line">  url = <span class="string">"http://192.168.56.5/"</span></span><br><span class="line">  token = <span class="string">"zS9KDv5_puTCKS32UbyM"</span></span><br><span class="line">  executor = <span class="string">"docker"</span></span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.docker]</span><br><span class="line">    tls_verify = <span class="literal">false</span></span><br><span class="line">    image = <span class="string">"docker:19.03.5"</span></span><br><span class="line">    privileged = <span class="literal">false</span></span><br><span class="line">    disable_entrypoint_overwrite = <span class="literal">false</span></span><br><span class="line">    oom_kill_disable = <span class="literal">false</span></span><br><span class="line">    disable_cache = <span class="literal">false</span></span><br><span class="line">    volumes = [<span class="string">"/cache"</span>]</span><br><span class="line">    shm_size = 0</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br></pre></td></tr></table></figure><h4 id="remove-Runner"><a href="#remove-Runner" class="headerlink" title="remove Runner"></a>remove Runner</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it gitlab-runner gitlab-runner unregister --all-runners</span><br><span class="line">$ docker <span class="built_in">exec</span> -it gitlab-runner gitlab-runner unregister -n <span class="built_in">test</span>-runner</span><br></pre></td></tr></table></figure><h4 id="Trouble-Shooting"><a href="#Trouble-Shooting" class="headerlink" title="Trouble Shooting"></a>Trouble Shooting</h4><ol><li><p>Cannot connect to the Docker daemon at tcp://docker:2375. Is the docker daemon running?<br><code>method 1</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim .gitlab-ci.yml</span><br><span class="line">variables:</span><br><span class="line">  DOCKER_TLS_CERTDIR: &quot;&quot;</span><br></pre></td></tr></table></figure><p><code>method 2</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim config.toml</span><br><span class="line">[[runners]]</span><br><span class="line">  environment = [&quot;DOCKER_TLS_CERTDIR=&quot;]</span><br></pre></td></tr></table></figure></li><li><p>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?<br>執行docker:dind，gitlab-runner config.toml中的privileged要設定為true，否則會有error</p></li><li><p>docker image download failed</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Step 1/13 : FROM 10.36.94.120:50000/kaluta:1.0.0</span><br><span class="line">Get https://10.36.94.120:50000/v2/: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure><p>在gitlab-runner config.toml中的volume要加入/etc/docker/daemon.json的設定<br>volumes = [“/cache”, “/etc/docker/daemon.json:/etc/docker/daemon.json”]</p></li><li><p>/bin/sh: eval: line 87: docker-compose: not found</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vim .gitlab-ci.yml</span><br><span class="line">build:</span><br><span class="line">  stage: build</span><br><span class="line">  before_script:</span><br><span class="line">    - apk add --update libffi-dev openssl-dev py-pip python python-dev build-base</span><br><span class="line">    - pip install docker-compose</span><br></pre></td></tr></table></figure></li></ol><h4 id="final-config-toml"><a href="#final-config-toml" class="headerlink" title="final config.toml"></a>final config.toml</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ cat /opt/docker-software/gitlab-runner/config/config.toml</span><br><span class="line">concurrent = 1</span><br><span class="line">check_interval = 0</span><br><span class="line"></span><br><span class="line">[session_server]</span><br><span class="line">  session_timeout = 1800</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = <span class="string">"test-runner"</span></span><br><span class="line">  url = <span class="string">"http://192.168.56.5/"</span></span><br><span class="line">  token = <span class="string">"zS9KDv5_puTCKS32UbyM"</span></span><br><span class="line">  executor = <span class="string">"docker"</span></span><br><span class="line">  [runners.custom_build_dir]</span><br><span class="line">  [runners.docker]</span><br><span class="line">    tls_verify = <span class="literal">false</span></span><br><span class="line">    image = <span class="string">"docker:19.03.5"</span></span><br><span class="line">    privileged = <span class="literal">true</span></span><br><span class="line">    disable_entrypoint_overwrite = <span class="literal">false</span></span><br><span class="line">    oom_kill_disable = <span class="literal">false</span></span><br><span class="line">    disable_cache = <span class="literal">false</span></span><br><span class="line">    volumes = [<span class="string">"/cache"</span>, <span class="string">"/etc/docker/daemon.json:/etc/docker/daemon.json"</span>]</span><br><span class="line">    shm_size = 0</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br></pre></td></tr></table></figure><h4 id="建立Base-image"><a href="#建立Base-image" class="headerlink" title="建立Base image"></a>建立Base image</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM docker:19.03.5</span><br><span class="line"></span><br><span class="line">ADD daemon.json /etc/docker/daemon.json</span><br><span class="line">RUN apk add --update libffi-dev openssl-dev py-pip python python-dev build-base rsync git xz sshpass openssh-client &amp;&amp; \</span><br><span class="line">    pip install docker-compose</span><br></pre></td></tr></table></figure><ol><li>在.gitlab-ci.yml中可以直接使用這個base image <code>image: 10.36.94.120:50000/docker:19.03.5</code>，這樣可以省略安裝package的步驟</li><li>在config.toml中可以不用設定volumes: “/etc/docker/daemon.json:/etc/docker/daemon.json”</li></ol><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><ol><li>GitLab 的 build 都是在 Docker 上執行的，因此一開始會需要定義 image 名稱，而它將會成為下面執行 build 的環境</li><li>artifacts 會把裡面編譯或程式的產出物存放起來，提供介面給其他需要的人使用</li><li>dependencies 設定意思是指，test job 要取用 build job 的 artifacts，每個 job 都是獨立的 container ，互不相關，因此要靠這些設定來傳遞 artifacts</li><li>image 和 service 雖然有全域定義，但也能 job 各自定義</li><li>services:<ul><li>docker:dind<br>用 docker run 啟動 docker:dind 並把上面定義的 image 起的容器連結至 docker:dind</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> GitLab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitLab </tag>
            
            <tag> CICD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose.yml for GitLab</title>
      <link href="/posts/cb549ab5/"/>
      <url>/posts/cb549ab5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span> </span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">gitlab:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitlab/gitlab-ce:latest</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.5</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitlab</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/timezone:/etc/timezone:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/docker-software/gitlab/config:/etc/gitlab</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/docker-software/gitlab/logs:/var/log/gitlab</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/docker-software/gitlab/data:/var/opt/gitlab</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">443</span><span class="string">:443</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">22</span><span class="string">:22</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> GitLab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> GitLab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitBook文件轉換成pdf</title>
      <link href="/posts/8931cf79/"/>
      <url>/posts/8931cf79/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install npm</span><br><span class="line">sudo npm install -g gitbook-cli</span><br><span class="line">sudo ln -s /usr/bin/nodejs /usr/bin/node</span><br><span class="line">sudo apt-get install calibre</span><br><span class="line">sudo npm install gitbook-pdf -g</span><br><span class="line">gitbook pdf .</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> GitBook </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitBook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyinstaller</title>
      <link href="/posts/d585e6aa/"/>
      <url>/posts/d585e6aa/</url>
      
        <content type="html"><![CDATA[<h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install pyinstaller</span><br></pre></td></tr></table></figure><h1 id="生成exe檔"><a href="#生成exe檔" class="headerlink" title="生成exe檔"></a>生成exe檔</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pyinstaller &lt;config&gt; main.py</span><br></pre></td></tr></table></figure><h1 id="指定spec文件"><a href="#指定spec文件" class="headerlink" title="指定spec文件"></a>指定spec文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pyinstaller main.spec main.py</span><br></pre></td></tr></table></figure><h1 id="config"><a href="#config" class="headerlink" title="config"></a>config</h1><p><code>--noconsole</code>: 執行exe檔時，不顯示console視窗<br><code>--onefile</code>: 打包成單一個exe檔案<br><code>--icon</code>: 指定exe檔案的icon</p><h1 id="spec文件"><a href="#spec文件" class="headerlink" title="spec文件"></a>spec文件</h1><ol><li>控制pyinstall打包，以及程式run time執行時的配置</li><li>在執行pyinstall會根據指令的config自動建立，也可以透過以下指令單獨生成spec檔案<br>pyi-makespec <config> main.py</config></li><li>當專案中需要使用到額外的資源檔案時，必須手動編輯spec文件</li></ol><h1 id="steps-for-generate-exe-file"><a href="#steps-for-generate-exe-file" class="headerlink" title="steps for generate exe file:"></a>steps for generate exe file:</h1><ol><li><code>pyi-makespec --onefile --noconsole --icon D:\\FaceDetection\\data\fd.ico main.py</code></li><li>edit main.spec，添加static file to datas<br><code>a = Analysis(..., datas=[(&#39;D:\\FaceDetection\\data&#39;, &#39;data&#39;)], ...)</code><br>Note: datas中的資料為一tuple值，第一個欄位為檔案在系統中的路徑，第二個欄位為在打包環境中的路徑</li><li><code>pyinstaller main.spec main.py</code></li></ol><h1 id="sample-for-spec文件"><a href="#sample-for-spec文件" class="headerlink" title="sample for spec文件"></a>sample for spec文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- mode: python ; coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">block_cipher = None</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = Analysis([<span class="string">'main.py'</span>],</span><br><span class="line">             pathex=[<span class="string">'D:\\FaceDetection'</span>],</span><br><span class="line">             binaries=[],</span><br><span class="line">             datas=[(<span class="string">'D:\\FaceDetection\\data'</span>, <span class="string">'data'</span>)],</span><br><span class="line">             hiddenimports=[],</span><br><span class="line">             hookspath=[],</span><br><span class="line">             runtime_hooks=[],</span><br><span class="line">             excludes=[],</span><br><span class="line">             win_no_prefer_redirects=False,</span><br><span class="line">             win_private_assemblies=False,</span><br><span class="line">             cipher=block_cipher,</span><br><span class="line">             noarchive=False)</span><br><span class="line">pyz = PYZ(a.pure, a.zipped_data,</span><br><span class="line">             cipher=block_cipher)</span><br><span class="line">exe = EXE(pyz,</span><br><span class="line">          a.scripts,</span><br><span class="line">          a.binaries,</span><br><span class="line">          a.zipfiles,</span><br><span class="line">          a.datas,</span><br><span class="line">          [],</span><br><span class="line">          name=<span class="string">'main'</span>,</span><br><span class="line">          debug=False,</span><br><span class="line">          bootloader_ignore_signals=False,</span><br><span class="line">          strip=False,</span><br><span class="line">          upx=True,</span><br><span class="line">          upx_exclude=[],</span><br><span class="line">          runtime_tmpdir=None,</span><br><span class="line">          console=False , icon=<span class="string">'D:\\FaceDetection\\data\\fd.ico'</span>)</span><br></pre></td></tr></table></figure><ul><li>Trouble Shooting<br><img src="/posts/d585e6aa/image01.png" alt><br><a href="https://stackoverflow.com/questions/37815371/pyinstaller-failed-to-execute-script-pyi-rth-pkgres-and-missing-packages" target="_blank" rel="noopener">https://stackoverflow.com/questions/37815371/pyinstaller-failed-to-execute-script-pyi-rth-pkgres-and-missing-packages</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip uninstall pyinstaller</span><br><span class="line">pip install https://github.com/pyinstaller/pyinstaller/archive/develop.zip</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deploy a Docker registry server</title>
      <link href="/posts/410ebdbd/"/>
      <url>/posts/410ebdbd/</url>
      
        <content type="html"><![CDATA[<h1 id="pull-registry-image"><a href="#pull-registry-image" class="headerlink" title="pull registry image"></a>pull registry image</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  registry:</span><br><span class="line">    restart: always</span><br><span class="line">    image: registry:2</span><br><span class="line">    container_name: registry</span><br><span class="line">    ports:</span><br><span class="line">      - 5000:5000</span><br><span class="line">    volumes:</span><br><span class="line">      - /etc/timezone:/etc/timezone:ro</span><br><span class="line">      - /etc/localtime:/etc/localtime:ro</span><br><span class="line">      - /opt/docker-software/registry:/var/lib/registry</span><br><span class="line">    environment:</span><br><span class="line">      - REGISTRY_STORAGE_DELETE_ENABLED=<span class="string">"true"</span></span><br></pre></td></tr></table></figure><h1 id="push-pull-images"><a href="#push-pull-images" class="headerlink" title="push/pull images"></a>push/pull images</h1><p>image push前必須先tag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker tag myimage host:5000/myimage:1.0.0</span><br><span class="line">$ docker push host:5000/myimage:1.0.0</span><br><span class="line">$ docker image remove host:5000/myimage:1.0.0 <span class="comment"># remove the locally-cached host:5000/myimage:1.0.0</span></span><br><span class="line">$ docker pull host:5000/myimage:1.0.0</span><br></pre></td></tr></table></figure><h1 id="trouble-shooting"><a href="#trouble-shooting" class="headerlink" title="trouble shooting"></a>trouble shooting</h1><p>error message when push images to registry server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The push refers to repository [host:5000/myimage]</span><br><span class="line">Get https://host:5000/v2/: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure><ul><li>Insecure Registries<br>If this registry is insecure and doesn’t hide behing SSL certificates then you will need to configure your Docker client to allow pushing to this insecure registry.<br>Edit or you may even need to create the following file on your Linux server:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/docker/daemon.json</span><br></pre></td></tr></table></figure>And save the following content:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"insecure-registries"</span>: [<span class="string">"host:5000"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>You will need to restart your Docker service before these changes will take effect.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service docker restart</span><br></pre></td></tr></table></figure></li></ul><h1 id="get-image-list-from-docker-registry"><a href="#get-image-list-from-docker-registry" class="headerlink" title="get image list from docker registry"></a>get image list from docker registry</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET http://host:5000/v2/_catalog | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"repositories"</span>: [</span><br><span class="line">    <span class="string">"myimage"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ curl -X GET http://host:5000/v2/&lt;myimage&gt;/tags/list | jq</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"myimage"</span>,</span><br><span class="line">  <span class="string">"tags"</span>: [</span><br><span class="line">    <span class="string">"1.0.0"</span>,</span><br><span class="line">    <span class="string">"1.1.0"</span>,</span><br><span class="line">    <span class="string">"1.2.0"</span>,</span><br><span class="line">    <span class="string">"1.3.0"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="delete-images-in-registry-server"><a href="#delete-images-in-registry-server" class="headerlink" title="delete images in registry server"></a>delete images in registry server</h1><ol><li>delete using registry REST API</li></ol><ul><li>REGISTRY_STORAGE_DELETE_ENABLED必須設定為true，DELETE API才支援</li><li>DELETE API僅會刪除link資料，影響API查詢的結果，但實際上的layer data還是存在，必須再執行garbage-collect才能刪除</li><li>一定要設定header的Accept為application/vnd.docker.distribution.manifest.v2+json，收到的Content才會是對的<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ curl -I -H <span class="string">"Accept: application/vnd.docker.distribution.manifest.v2+json"</span> http://host:5000/v2/&lt;myimage&gt;/manifests/&lt;tag&gt;</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Content-Length: 1362</span><br><span class="line">Content-Type: application/vnd.docker.distribution.manifest.v2+json</span><br><span class="line">Docker-Content-Digest: sha256:7185dc9a13a5178f5d33654ebe5cf5982e51c9bfff0b1e227e3735dffffe7226</span><br><span class="line">Docker-Distribution-Api-Version: registry/2.0</span><br><span class="line">Etag: <span class="string">"sha256:7185dc9a13a5178f5d33654ebe5cf5982e51c9bfff0b1e227e3735dffffe7226"</span></span><br><span class="line">X-Content-Type-Options: nosniff</span><br><span class="line">Date: Tue, 26 Nov 2019 13:47:34 GMT</span><br><span class="line"></span><br><span class="line">$ curl -v -X DELETE http://host:5000/v2/&lt;myimage&gt;/manifests/sha256:7185dc9a13a5178f5d33654ebe5cf5982e51c9bfff0b1e227e3735dffffe7226</span><br><span class="line">$ docker <span class="built_in">exec</span> -it registry registry garbage-collect /etc/docker/registry/config.yml</span><br><span class="line">$ docker restart registry</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>delete in the file system<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it registry sh</span><br><span class="line">/ <span class="comment"># export NAME="&lt;myimage&gt;"</span></span><br><span class="line">/ <span class="comment"># export VERSION="&lt;tag&gt;"</span></span><br><span class="line">/ <span class="comment"># cd /var/lib/registry/docker/registry/v2</span></span><br><span class="line">/var/lib/registry/docker/registry/v2 <span class="comment"># find . | grep `ls ./repositories/$NAME/_manifests/tags/$VERSION/index/sha256`| xargs rm -rf $1</span></span><br><span class="line">/var/lib/registry/docker/registry/v2 <span class="comment"># rm -rf ./repositories/$NAME/_manifests/tags/$VERSION</span></span><br><span class="line">/var/lib/registry/docker/registry/v2 <span class="comment"># registry garbage-collect /etc/docker/registry/config.yml</span></span><br><span class="line">/ <span class="comment"># exit</span></span><br><span class="line">$ docker restart registry</span><br></pre></td></tr></table></figure></li></ol><h1 id="Cleaning-up-the-Registry"><a href="#Cleaning-up-the-Registry" class="headerlink" title="Cleaning up the Registry"></a>Cleaning up the Registry</h1><p>When you delete an image from the registry, this won’t actually remove the blob layers as you might expect. For this reason you have to run this command on your docker registry host to perform garbage collection:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it registry registry garbage-collect /etc/docker/registry/config.yml</span><br></pre></td></tr></table></figure><p>And if you wanted to make a cron job that runs every 30 mins:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0,30 * * * * docker <span class="built_in">exec</span> -it registry registry garbage-collect /etc/docker/registry/config.yml &gt;&gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h1 id="GUI-tool-via-docker-image"><a href="#GUI-tool-via-docker-image" class="headerlink" title="GUI tool via docker image"></a>GUI tool via docker image</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 8080:8080 --name registry-web -e REGISTRY_URL=http://host:5000/v2 hyper/docker-registry-web</span><br></pre></td></tr></table></figure><ul><li>by docker-compose.yml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  registry-web:</span><br><span class="line">    restart: always</span><br><span class="line">    image: hyper/docker-registry-web</span><br><span class="line">    container_name: registry-web</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8080</span><br><span class="line">    volumes:</span><br><span class="line">      - /etc/timezone:/etc/timezone:ro</span><br><span class="line">      - /etc/localtime:/etc/localtime:ro</span><br><span class="line">    environment:</span><br><span class="line">      - REGISTRY_URL=http://host:5000/v2</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>設置ubuntu環境</title>
      <link href="/posts/b4ce8caa/"/>
      <url>/posts/b4ce8caa/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Ubuntu 16.04.1 Server (64-bit)<br><a href="http://old-releases.ubuntu.com/releases/16.04.1/ubuntu-16.04.1-server-amd64.iso" target="_blank" rel="noopener">http://old-releases.ubuntu.com/releases/16.04.1/ubuntu-16.04.1-server-amd64.iso</a></p></li><li><p>Ubuntu 16.04.6 Server (64-bit)<br><a href="http://releases.ubuntu.com/16.04/ubuntu-16.04.6-server-amd64.iso" target="_blank" rel="noopener">http://releases.ubuntu.com/16.04/ubuntu-16.04.6-server-amd64.iso</a></p></li></ul><h1 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h1><ol><li>如果VM的網路卡沒有「僅限主機」介面卡可以用，必須先手動建立<br><code>VirtualBox - 全域工具 - 主機網路管理員</code><br>建立新的network interface<br>可以手動設定ip, f.g. ip: 192.168.199.1, mask: 255.255.255.0</li><li>配置網路<br>a. 介面卡1: NAT<br>主要是建立VM的對外網路<br>b. 介面卡2: 「僅限主機」介面卡<br>主要是建立VM跟Windows之間的，可以進行溝通的網路</li></ol><h1 id="Environment-Setup"><a href="#Environment-Setup" class="headerlink" title="Environment Setup"></a>Environment Setup</h1><ol><li>General settings</li><li>Python</li><li>Docker</li></ol><h3 id="1-General-Settings"><a href="#1-General-Settings" class="headerlink" title="1. General Settings"></a>1. General Settings</h3><ul><li><p>Check the network interface of enp0s8</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ ifconfig -a</span><br></pre></td></tr></table></figure><p><img src="/posts/b4ce8caa/network01.jpg" alt></p></li><li><p>If there is no ip address, set dhcp for enp0s8</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo vim /etc/network/interfaces</span><br></pre></td></tr></table></figure></li><li><p>Add following commands at the bottom</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto enp0s8</span><br><span class="line">iface enp0s8 inet dhcp</span><br></pre></td></tr></table></figure></li><li><p>Or, you can set static ip address</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto enp0s8</span><br><span class="line">iface enp0s8 inet static</span><br><span class="line">address 192.168.56.3</span><br></pre></td></tr></table></figure></li><li><p>Restart networking and check enp0s8 again</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo service networking restart</span><br><span class="line">user@ubuntu:~$ ifconfig -a</span><br></pre></td></tr></table></figure><p><img src="/posts/b4ce8caa/network02.jpg" alt></p></li><li><p>Install ssh and then you can connect to vm via terminal tools</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo apt-get update</span><br><span class="line">user@ubuntu:~$ sudo apt-get install ssh</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-Python"><a href="#2-Python" class="headerlink" title="2. Python"></a>2. Python</h3><ul><li><p>Install python3.6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line">user@ubuntu:~$ sudo apt-get update</span><br><span class="line">user@ubuntu:~$ sudo apt-get install python3.6</span><br></pre></td></tr></table></figure></li><li><p>Create update-alternatives list for python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.5 1</span><br><span class="line">update-alternatives: using /usr/bin/python3.5 to provide /usr/bin/python (python) <span class="keyword">in</span> auto mode</span><br><span class="line">user@ubuntu:~$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2</span><br><span class="line">update-alternatives: using /usr/bin/python3.6 to provide /usr/bin/python (python) <span class="keyword">in</span> auto mode</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ update-alternatives --list python</span><br><span class="line">/usr/bin/python3.5</span><br><span class="line">/usr/bin/python3.6</span><br></pre></td></tr></table></figure></li><li><p>Set default command of python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo update-alternatives --config python</span><br><span class="line">There are 2 choices <span class="keyword">for</span> the alternative python (providing /usr/bin/python).</span><br><span class="line"></span><br><span class="line">  Selection    Path                Priority   Status</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /usr/bin/python3.6   2         auto mode</span><br><span class="line">  1            /usr/bin/python3.5   1         manual mode</span><br><span class="line">  2            /usr/bin/python3.6   2         manual mode</span><br><span class="line"></span><br><span class="line">Press &lt;enter&gt; to keep the current choice[*], or <span class="built_in">type</span> selection number: 2</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ python -V</span><br><span class="line">Python 3.6.9</span><br></pre></td></tr></table></figure></li><li><p>Install pip for python3.6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ curl https://bootstrap.pypa.io/get-pip.py | sudo python3.6</span><br></pre></td></tr></table></figure></li><li><p>Install virtualenv or virtualenvwrapper<br>There are two types of environment control for python.<br><code>virtualenv</code>: isolated for each project<br><code>virtualenvwrapper</code>: you can share environment settings between different projects</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ pip install virtualenv --user</span><br><span class="line">user@ubuntu:~$ pip install virtualenvwrapper --user</span><br></pre></td></tr></table></figure></li><li><p>Install related packages</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo apt-get install make</span><br><span class="line">user@ubuntu:~$ sudo apt-get install gcc</span><br><span class="line">user@ubuntu:~$ sudo apt-get install libssl-dev</span><br><span class="line">user@ubuntu:~$ sudo apt-get install python3.6-dev</span><br><span class="line">user@ubuntu:~$ sudo apt-get install libmysqlclient-dev</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-Docker"><a href="#3-Docker" class="headerlink" title="3. Docker"></a>3. Docker</h3><ul><li><p>Install docker<br>You can install docker online or via deb files</p></li><li><p>Online install</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ curl -sSL https://get.docker.com/ | sh</span><br><span class="line"><span class="comment"># Executing docker install script, commit: f45d7c11389849ff46a6b4d94e0dd1ffebca32c1</span></span><br><span class="line">+ sudo -E sh -c apt-get update -qq &gt;/dev/null</span><br><span class="line">+ sudo -E sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl &gt;/dev/null</span><br><span class="line">+ sudo -E sh -c curl -fsSL <span class="string">"https://download.docker.com/linux/ubuntu/gpg"</span> | apt-key add -qq - &gt;/dev/null</span><br><span class="line">+ sudo -E sh -c <span class="built_in">echo</span> <span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"</span> &gt; /etc/apt/sources.list.d/docker.list</span><br><span class="line">+ sudo -E sh -c apt-get update -qq &gt;/dev/null</span><br><span class="line">+ [ -n  ]</span><br><span class="line">+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce &gt;/dev/null</span><br><span class="line">+ sudo -E sh -c docker version</span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           19.03.5</span><br><span class="line"> API version:       1.40</span><br><span class="line"> Go version:        go1.12.12</span><br><span class="line"> Git commit:        633a0ea838</span><br><span class="line"> Built:             Wed Nov 13 07:50:12 2019</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Experimental:      <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          19.03.5</span><br><span class="line">  API version:      1.40 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.12.12</span><br><span class="line">  Git commit:       633a0ea838</span><br><span class="line">  Built:            Wed Nov 13 07:48:43 2019</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.2.10</span><br><span class="line">  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.0.0-rc8+dev</span><br><span class="line">  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.18.0</span><br><span class="line">  GitCommit:        fec3683</span><br><span class="line">If you would like to use Docker as a non-root user, you should now consider</span><br><span class="line">adding your user to the <span class="string">"docker"</span> group with something like:</span><br><span class="line"></span><br><span class="line">  sudo usermod -aG docker user</span><br><span class="line"></span><br><span class="line">Remember that you will have to <span class="built_in">log</span> out and back <span class="keyword">in</span> <span class="keyword">for</span> this to take effect!</span><br><span class="line"></span><br><span class="line">WARNING: Adding a user to the <span class="string">"docker"</span> group will grant the ability to run</span><br><span class="line">         containers <span class="built_in">which</span> can be used to obtain root privileges on the</span><br><span class="line">         docker host.</span><br><span class="line">         Refer to https://docs.docker.com/engine/security/security/<span class="comment">#docker-daemon-attack-surface</span></span><br><span class="line">         <span class="keyword">for</span> more information.</span><br></pre></td></tr></table></figure></li><li><p>deb file<br><a href="https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/" target="_blank" rel="noopener">https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ wget --no-check-certificate https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/containerd.io_1.2.6-3_amd64.deb</span><br><span class="line">user@ubuntu:~$ wget --no-check-certificate https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker-ce-cli_19.03.4~3-0~ubuntu-xenial_amd64.deb</span><br><span class="line">user@ubuntu:~$ wget --no-check-certificate https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker-ce_19.03.4~3-0~ubuntu-xenial_amd64.deb</span><br><span class="line">user@ubuntu:~$ sudo dpkg -i containerd.io_1.2.6-3_amd64.deb</span><br><span class="line">user@ubuntu:~$ sudo dpkg -i docker-ce-cli_19.03.4~3-0~ubuntu-xenial_amd64.deb</span><br><span class="line">user@ubuntu:~$ sudo dpkg -i docker-ce_19.03.4~3-0~ubuntu-xenial_amd64.deb</span><br><span class="line">user@ubuntu:~$ docker --version</span><br><span class="line">Docker version 19.03.4, build 9013bf583a</span><br></pre></td></tr></table></figure></li><li><p>Install docker-compose</p><h4 id="release-page"><a href="#release-page" class="headerlink" title="release page"></a>release page</h4><p><a href="https://github.com/docker/compose/releases" target="_blank" rel="noopener">https://github.com/docker/compose/releases</a></p></li></ul><h4 id="Install-docker-compose-1-22-0-on-ubuntu"><a href="#Install-docker-compose-1-22-0-on-ubuntu" class="headerlink" title="Install docker-compose (1.22.0) on ubuntu"></a>Install docker-compose (1.22.0) on ubuntu</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">$ curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">$ chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">$ docker-compose --version</span><br><span class="line">docker-compose version 1.22.0, build f46880fe</span><br></pre></td></tr></table></figure><ul><li>Remove docker<ul><li>查看系統中有安裝多少跟docker有關的package<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> dpkg -l | grep -i docker</span></span><br></pre></td></tr></table></figure></li><li>remove all packages about docker<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get purge -y docker-ce</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get autoremove -y --purge docker-ce</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get autoclean</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo rm -rf /var/lib/docker</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown to HTML</title>
      <link href="/posts/6ca74c1e/"/>
      <url>/posts/6ca74c1e/</url>
      
        <content type="html"><![CDATA[<ol><li>在Sublime Text 3上，安裝MarkdownEditing</li></ol><ul><li>Preferences-&gt;Package Control<br><img src="/posts/6ca74c1e/image01.jpg" alt></li><li>輸入Install Package<br><img src="/posts/6ca74c1e/image02.jpg" alt></li><li>接著輸入MarkdownEditing，即可安裝完成<br><img src="/posts/6ca74c1e/image03.jpg" alt><br><img src="/posts/6ca74c1e/image04.jpg" alt></li></ul><ol start="2"><li>轉換<br>在欲轉換的文件中，按下fn+F7，即可生成相對應的HTML檔案<br><img src="/posts/6ca74c1e/image05.jpg" alt></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Sublime Text 3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>curl指令</title>
      <link href="/posts/7de9a293/"/>
      <url>/posts/7de9a293/</url>
      
        <content type="html"><![CDATA[<h1 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h1><ul><li><code>curl -X GET http://localhost:80/api/get</code></li><li><code>curl -X GET &quot;http://localhost:80/api/get?param1=abc&amp;param2=123&quot;</code></li></ul><h1 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h1><ul><li>form<ul><li><code>curl -X POST -d &quot;username=admin&amp;password=123456&quot; http://localhost:80/auth/login</code></li></ul></li><li>json<ul><li><code>curl -H &quot;Content-Type:application/json&quot; -X POST -d &#39;{&quot;username&quot;: &quot;admin&quot;, &quot;password&quot;: &quot;123456&quot;}&#39; http://localhost:80/auth/login</code></li></ul></li><li><code>curl -X POST -F &quot;image=@/home/user/test.jpg&quot; http://localhost:80/upload/image</code></li><li><code>curl -X POST -F &quot;image=@/home/user/test.jpg&quot; -F &quot;token=123456&quot; http://localhost:80/upload/image</code></li><li><code>curl -X POST -H &#39;Content-Type: application/json&#39; -d &#39;{&quot;username&quot;: &quot;test&quot;, &quot;password&quot;:&quot;123456&quot;, &quot;list_data&quot;:[1, 2]}&#39; http://localhost:80/api/post</code></li><li><code>curl -X POST --data-urlencode &#39;photo=&#39;&quot;$(base64 image.jpg)&quot;&#39;&#39; -d &quot;name=Nick&quot; http://localhost:80/upload/data</code></li><li><code>curl -X POST -H &quot;Content-Type: application/json&quot; -d @/home/user/data.json http://localhost:80/api/file/payload</code></li></ul><h1 id="PUT"><a href="#PUT" class="headerlink" title="PUT"></a>PUT</h1><ul><li><code>curl -X PUT -d &quot;data=test&quot; http://localhost:80/api/put</code></li></ul><h1 id="Delete"><a href="#Delete" class="headerlink" title="Delete"></a>Delete</h1><ul><li><code>curl -X DELETE http://localhost:80/api/delete</code></li></ul><h1 id="Download-file"><a href="#Download-file" class="headerlink" title="Download file"></a>Download file</h1><ul><li><code>curl -X GET &quot;http://localhost:80/api/download/data&quot; --output file.ext</code></li></ul><h1 id="Show-headers"><a href="#Show-headers" class="headerlink" title="Show headers"></a>Show headers</h1><ul><li><code>curl -i -X POST -d &#39;username=admin&amp;password=123456&#39; http://localhost:80/auth/login</code><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.10.3 (Ubuntu)</span><br><span class="line">Date: Mon, 03 Jun 2019 02:43:54 GMT</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 1062</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Set-Cookie: session=3c8d8462-8590-435e-9227-485f96e4bec5; HttpOnly; Path=/</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"code"</span>: 0,</span><br><span class="line">  <span class="string">"data"</span>: <span class="string">"..."</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>Get further information from curl<ul><li>simple mode<br><code>$ curl -w &#39;Total: %{time_total}s\n&#39; -o /dev/null -s http://ip:port/api/</code></li><li>Create a new file, curl-format.txt, and paste in:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   time_namelookup:  %&#123;time_namelookup&#125;s\n</span><br><span class="line">      time_connect:  %&#123;time_connect&#125;s\n</span><br><span class="line">   time_appconnect:  %&#123;time_appconnect&#125;s\n</span><br><span class="line">  time_pretransfer:  %&#123;time_pretransfer&#125;s\n</span><br><span class="line">     time_redirect:  %&#123;time_redirect&#125;s\n</span><br><span class="line">time_starttransfer:  %&#123;time_starttransfer&#125;s\n</span><br><span class="line">                   ----------\n</span><br><span class="line">        time_total:  %&#123;time_total&#125;s\n</span><br></pre></td></tr></table></figure></li><li>Make a request<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -w &quot;@curl-format.txt&quot; -o /dev/null -s &quot;http://ip:port/api/&quot;</span><br><span class="line">-w &quot;@curl-format.txt&quot; tells cURL to use our format file</span><br><span class="line">-o /dev/null redirects the output of the request to /dev/null</span><br><span class="line">-s tells cURL not to show a progress meter</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> curl </category>
          
      </categories>
      
      
        <tags>
            
            <tag> curl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsonify v.s. json.dumps</title>
      <link href="/posts/39e057a1/"/>
      <url>/posts/39e057a1/</url>
      
        <content type="html"><![CDATA[<p>主要的差異在於response的Content-Type不同</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, jsonify</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">  </span><br><span class="line"><span class="meta">@app.route('/test', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"code"</span>: <span class="number">0</span>, <span class="string">"data"</span>: <span class="string">"test"</span>&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:~$ curl -i -X GET http://localhost:5000/<span class="built_in">test</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.4.6 (Ubuntu)</span><br><span class="line">Date: Mon, 11 Nov 2019 09:14:21 GMT</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 180</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Access-Control-Allow-Origin: *</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">"code"</span>:0,<span class="string">"data"</span>:<span class="string">"test"</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">  </span><br><span class="line"><span class="meta">@app.route('/test', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> json.dumps(&#123;<span class="string">"code"</span>: <span class="number">0</span>, <span class="string">"data"</span>: <span class="string">"test"</span>&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">user@vm-docker:~$ curl -i -X GET http://localhost:5000/<span class="built_in">test</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.4.6 (Ubuntu)</span><br><span class="line">Date: Mon, 11 Nov 2019 09:17:14 GMT</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Content-Length: 198</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Access-Control-Allow-Origin: *</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">"code"</span>:0,<span class="string">"data"</span>:<span class="string">"test"</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim常用指令</title>
      <link href="/posts/d436f53/"/>
      <url>/posts/d436f53/</url>
      
        <content type="html"><![CDATA[<h1 id="config配置"><a href="#config配置" class="headerlink" title="config配置"></a>config配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">:set nu &quot; 顯示行數</span><br><span class="line">:set nonu &quot; 不顯示行數</span><br><span class="line"></span><br><span class="line">:set wrap &quot; 自動斷行</span><br><span class="line">:set nowrap &quot; 不自動斷行</span><br><span class="line"></span><br><span class="line">:set hlsearch &quot; highlight搜尋字串</span><br><span class="line"></span><br><span class="line">:set ic &quot; 搜尋字串不分大小寫</span><br><span class="line">:set noic &quot; 搜尋字串區分大小寫</span><br><span class="line"></span><br><span class="line">set cursorline</span><br><span class="line">set nowrap</span><br><span class="line">set laststatus=2</span><br><span class="line">set statusline=%4*%&lt;\%m%&lt;[%f\%r%h%w]%=%l,%v\ \ \ \ \ \ \ \ %p%%</span><br></pre></td></tr></table></figure><h1 id="monokai"><a href="#monokai" class="headerlink" title="monokai"></a>monokai</h1><p><a href="https://github.com/sickill/vim-monokai" target="_blank" rel="noopener">https://github.com/sickill/vim-monokai</a></p><ol><li>Put monokai.vim file in ~/.vim/colors/</li><li>edit .vimrc<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">syntax enable</span><br><span class="line">colorscheme monokai</span><br></pre></td></tr></table></figure><h1 id="用-user-打開了-root-權限的檔案，編輯之後無法儲存"><a href="#用-user-打開了-root-權限的檔案，編輯之後無法儲存" class="headerlink" title="用 user 打開了 root 權限的檔案，編輯之後無法儲存"></a>用 user 打開了 root 權限的檔案，編輯之後無法儲存</h1>用以下指令，即可儲存<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:w !sudo tee %</span><br></pre></td></tr></table></figure><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1></li></ol><ul><li>切換到編輯模式<br><code>i</code></li><li>往下插入一列，並切換到編輯模式<br><code>o</code></li><li>undo<br><code>u</code></li><li>redo<br><code>ctrl+r</code></li><li>跳轉到相配對的括號<br><code>%</code></li><li>跳到第一列<br><code>gg</code></li><li>跳到最後一列<br><code>G (shift+g)</code></li><li>跳到指令列<br><code>列號 + G (shift+g)</code></li><li>跳轉到局部變量的宣告處<br><code>gD</code></li><li>搜尋字串<br><code>/search_string</code><ul><li>向上搜尋<br><code>N (shift+n)</code></li><li>向下搜尋<br><code>n</code></li></ul></li><li>批次取代字串<ul><li>將所有 “search_from” 的字串替換成 “replace_to”<br><code>:%s/search_from/replace_to/g</code></li><li>忽略大小寫差異<br><code>:%s/search_from/replace_to/gi</code></li><li>只取代指定行數範圍的字串<br><code>:50,100s/search_from/replace_to/g</code></li></ul></li><li>將游標停留在欲搜尋的字串上，向下搜尋該字串<br><code>*</code></li><li>游標不動、往上移動內容<br><code>ctrl+e</code></li><li>游標不動、往下移動內容<br><code>ctrl+y</code></li><li>選取、複製、貼上<ul><li>複製一整列<br><code>ff</code></li><li>剪下一整列<br><code>dd</code></li><li>貼上<br><code>p</code></li><li>整列選取<br><code>V (shift+v)</code></li><li>區塊選取<br><code>v</code></li><li>方形區塊選取<br><code>ctrl+v</code></li><li>複製選取<br><code>y</code></li><li>刪除選取<br><code>d</code></li><li>多列刪除<ul><li>先 <code>V</code> 切換到整行選取模式</li><li>上下選擇</li><li>選取完後，按下 <code>d</code> 即可刪除所選</li></ul></li><li>區塊刪除<ul><li>先 <code>v</code> 或 <code>ctrl+v</code> 切換到想要的選取模式</li><li>上下選擇</li><li>選取完後，按下 <code>d</code> 即可刪除所選</li></ul></li><li>插入多行一樣的文字，例如要將整個function區塊，往右縮排(即插入4個空白)<ul><li><code>ctrl+v</code> 切換到方形區塊選取模式</li><li>往下選取整個function的第一行</li><li><code>shift+i</code>，此時游標會跳到所選區塊的第一列</li><li>輸入欲插入的文字 (4個空白)</li><li>輸入完畢後，<code>Esc</code> 結束編輯模式</li><li>跳出後，其餘的地方均會自動補上跟第一列相同的操作(4個空白)</li></ul></li></ul></li><li>開啟檔案瀏覽器<br><code>:Ex</code></li><li>新增水平分割視窗<br><code>:new</code></li><li>新增垂直分割視窗<br><code>:vnew</code></li><li>切換視窗<br><code>ctrl+w -&gt; 方向鍵</code></li><li>儲存退出<br><code>:wq</code></li><li>退出不儲存<br><code>:q!</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批次更改檔案副檔名</title>
      <link href="/posts/4b76f376/"/>
      <url>/posts/4b76f376/</url>
      
        <content type="html"><![CDATA[<p>範例: 把所有.JPG的副檔名，全部改成.jpg<br><code>for f in *.JPG; do mv -- &quot;$f&quot; &quot;${f%.JPG}.jpg&quot;; done</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 文章加密</title>
      <link href="/posts/7504220/"/>
      <url>/posts/7504220/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md" target="_blank" rel="noopener">hexo-blog-encrypt</a> project on GitHub</p><h1 id="安裝套件"><a href="#安裝套件" class="headerlink" title="安裝套件"></a>安裝套件</h1><p><code>npm install hexo-blog-encrypt --save</code></p><h1 id="在文章的title裡加上key-word-password"><a href="#在文章的title裡加上key-word-password" class="headerlink" title="在文章的title裡加上key word: password"></a>在文章的title裡加上key word: password</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2019-11-11 11:11:11</span><br><span class="line">password: 123456</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="文章列表"><a href="#文章列表" class="headerlink" title="文章列表"></a>文章列表</h1><p><img src="/posts/7504220/image01.jpg" alt></p><h1 id="解鎖"><a href="#解鎖" class="headerlink" title="解鎖"></a>解鎖</h1><p><img src="/posts/7504220/image02.jpg" alt><br><img src="/posts/7504220/image03.jpg" alt></p><h1 id="直接隱藏文章"><a href="#直接隱藏文章" class="headerlink" title="直接隱藏文章"></a>直接隱藏文章</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2019-11-11 11:11:11</span><br><span class="line">published: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Setup Python on ubuntu 16.04</title>
      <link href="/posts/35cf5995/"/>
      <url>/posts/35cf5995/</url>
      
        <content type="html"><![CDATA[<h1 id="安裝python3-6"><a href="#安裝python3-6" class="headerlink" title="安裝python3.6"></a>安裝python3.6</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line">user@ubuntu:~$ sudo apt-get update</span><br><span class="line">user@ubuntu:~$ sudo apt-get install python3.6</span><br></pre></td></tr></table></figure><h1 id="建立update-alternatives-list-for-python"><a href="#建立update-alternatives-list-for-python" class="headerlink" title="建立update-alternatives list for python"></a>建立update-alternatives list for python</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1</span><br><span class="line">update-alternatives: using /usr/bin/python2.7 to provide /usr/bin/python (python) <span class="keyword">in</span> auto mode</span><br><span class="line">user@ubuntu:~$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.5 2</span><br><span class="line">update-alternatives: using /usr/bin/python3.5 to provide /usr/bin/python (python) <span class="keyword">in</span> auto mode</span><br><span class="line">user@ubuntu:~$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 3</span><br><span class="line">update-alternatives: using /usr/bin/python3.6 to provide /usr/bin/python (python) <span class="keyword">in</span> auto mode</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ update-alternatives --list python</span><br><span class="line">/usr/bin/python2.7</span><br><span class="line">/usr/bin/python3.5</span><br><span class="line">/usr/bin/python3.6</span><br></pre></td></tr></table></figure><h1 id="設定python預設選項"><a href="#設定python預設選項" class="headerlink" title="設定python預設選項"></a>設定python預設選項</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo update-alternatives --config python</span><br><span class="line">There are 3 choices <span class="keyword">for</span> the alternative python (providing /usr/bin/python).</span><br><span class="line"></span><br><span class="line">  Selection    Path                Priority   Status</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /usr/bin/python3.6   3         auto mode</span><br><span class="line">  1            /usr/bin/python2.7   1         manual mode</span><br><span class="line">  2            /usr/bin/python3.5   2         manual mode</span><br><span class="line">  3            /usr/bin/python3.6   3         manual mode</span><br><span class="line"></span><br><span class="line">Press &lt;enter&gt; to keep the current choice[*], or <span class="built_in">type</span> selection number: 3</span><br><span class="line"></span><br><span class="line">user@ubuntu:~$ python -V</span><br><span class="line">Python 3.6.6</span><br></pre></td></tr></table></figure><h1 id="安裝-pip-for-python3-6"><a href="#安裝-pip-for-python3-6" class="headerlink" title="安裝 pip for python3.6"></a>安裝 pip for python3.6</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user@ubuntu:~$ sudo apt-get install curl</span><br><span class="line">user@ubuntu:~$ curl https://bootstrap.pypa.io/get-pip.py | sudo python3.6</span><br></pre></td></tr></table></figure><h1 id="安裝-virtualenv-or-virtualenvwrapper"><a href="#安裝-virtualenv-or-virtualenvwrapper" class="headerlink" title="安裝 virtualenv or virtualenvwrapper"></a>安裝 virtualenv or virtualenvwrapper</h1><p><code>pip install virtualenv --user</code><br><code>pip install virtualenvwrapper --user</code></p><h1 id="安裝相關的套件"><a href="#安裝相關的套件" class="headerlink" title="安裝相關的套件"></a>安裝相關的套件</h1><p><code>sudo apt-get install python3.6-dev</code><br><code>sudo apt-get install libmysqlclient-dev</code></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>image與base64轉換</title>
      <link href="/posts/87b07643/"/>
      <url>/posts/87b07643/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_to_base64</span><span class="params">(image_path)</span>:</span></span><br><span class="line">    img = Image.open(image_path)</span><br><span class="line">    output_buffer = BytesIO()</span><br><span class="line">    <span class="keyword">if</span> img.format == <span class="string">'PNG'</span>:</span><br><span class="line">        img.save(output_buffer, format=<span class="string">'PNG'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        img.save(output_buffer, format=<span class="string">'JPEG'</span>)</span><br><span class="line">    byte_data = output_buffer.getvalue()</span><br><span class="line">    base64_str = base64.b64encode(byte_data)</span><br><span class="line">    <span class="keyword">return</span> base64_str</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base64_to_image</span><span class="params">(base64_str, image_path=None)</span>:</span></span><br><span class="line">    base64_data = re.sub(<span class="string">'^data:image/.+;base64,'</span>, <span class="string">''</span>, base64_str)</span><br><span class="line">    byte_data = base64.b64decode(base64_data)</span><br><span class="line">    image_data = BytesIO(byte_data)</span><br><span class="line">    img = Image.open(image_data)</span><br><span class="line">    <span class="keyword">if</span> image_path:</span><br><span class="line">        img.save(image_path)</span><br><span class="line">    <span class="keyword">return</span> img</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RadioButton OnClickListener</title>
      <link href="/posts/caba951c/"/>
      <url>/posts/caba951c/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> RadioGroup radioGroup = layout.findViewById(R.id.radio_group);</span><br><span class="line"><span class="keyword">final</span> RadioButton channel1 = radioGroup.findViewById(R.id.channel1);</span><br><span class="line">channel1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>adb shell keyevent</title>
      <link href="/posts/bd0ecf4c/"/>
      <url>/posts/bd0ecf4c/</url>
      
        <content type="html"><![CDATA[<ul><li>發送keyevent<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell input keyevent 7    # for key &apos;0&apos;</span><br><span class="line">$ adb shell input keyevent 8    # for key &apos;1&apos;</span><br><span class="line">$ adb shell input keyevent 29    # for key &apos;A&apos;</span><br><span class="line">$ adb shell input keyevent 54    # for key &apos;B&apos;</span><br></pre></td></tr></table></figure></li><li>輸入字串<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell input text &quot;ANDROID&quot;</span><br></pre></td></tr></table></figure></li><li>Keycode 列表<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">00 -&gt;  &quot;KEYCODE_UNKNOWN&quot;</span><br><span class="line">01 -&gt;  &quot;KEYCODE_MENU&quot;</span><br><span class="line">02 -&gt;  &quot;KEYCODE_SOFT_RIGHT&quot;</span><br><span class="line">03 -&gt;  &quot;KEYCODE_HOME&quot;</span><br><span class="line">04 -&gt;  &quot;KEYCODE_BACK&quot;</span><br><span class="line">05 -&gt;  &quot;KEYCODE_CALL&quot;</span><br><span class="line">06 -&gt;  &quot;KEYCODE_ENDCALL&quot;</span><br><span class="line">07 -&gt;  &quot;KEYCODE_0&quot;</span><br><span class="line">08 -&gt;  &quot;KEYCODE_1&quot;</span><br><span class="line">09 -&gt;  &quot;KEYCODE_2&quot;</span><br><span class="line">10 -&gt;  &quot;KEYCODE_3&quot;</span><br><span class="line">11 -&gt;  &quot;KEYCODE_4&quot;</span><br><span class="line">12 -?  &quot;KEYCODE_5&quot;</span><br><span class="line">13 -&gt;  &quot;KEYCODE_6&quot;</span><br><span class="line">14 -&gt;  &quot;KEYCODE_7&quot;</span><br><span class="line">15 -&gt;  &quot;KEYCODE_8&quot;</span><br><span class="line">16 -&gt;  &quot;KEYCODE_9&quot;</span><br><span class="line">17 -&gt;  &quot;KEYCODE_STAR&quot;</span><br><span class="line">18 -&gt;  &quot;KEYCODE_POUND&quot;</span><br><span class="line">19 -&gt;  &quot;KEYCODE_DPAD_UP&quot;</span><br><span class="line">20 -&gt;  &quot;KEYCODE_DPAD_DOWN&quot;</span><br><span class="line">21 -&gt;  &quot;KEYCODE_DPAD_LEFT&quot;</span><br><span class="line">22 -&gt;  &quot;KEYCODE_DPAD_RIGHT&quot;</span><br><span class="line">23 -&gt;  &quot;KEYCODE_DPAD_CENTER&quot;</span><br><span class="line">24 -&gt;  &quot;KEYCODE_VOLUME_UP&quot;</span><br><span class="line">25 -&gt;  &quot;KEYCODE_VOLUME_DOWN&quot;</span><br><span class="line">26 -&gt;  &quot;KEYCODE_POWER&quot;</span><br><span class="line">27 -&gt;  &quot;KEYCODE_CAMERA&quot;</span><br><span class="line">28 -&gt;  &quot;KEYCODE_CLEAR&quot;</span><br><span class="line">29 -&gt;  &quot;KEYCODE_A&quot;</span><br><span class="line">30 -&gt;  &quot;KEYCODE_B&quot;</span><br><span class="line">31 -&gt;  &quot;KEYCODE_C&quot;</span><br><span class="line">32 -&gt;  &quot;KEYCODE_D&quot;</span><br><span class="line">33 -&gt;  &quot;KEYCODE_E&quot;</span><br><span class="line">34 -&gt;  &quot;KEYCODE_F&quot;</span><br><span class="line">35 -&gt;  &quot;KEYCODE_G&quot;</span><br><span class="line">36 -&gt;  &quot;KEYCODE_H&quot;</span><br><span class="line">37 -&gt;  &quot;KEYCODE_I&quot;</span><br><span class="line">38 -&gt;  &quot;KEYCODE_J&quot;</span><br><span class="line">39 -&gt;  &quot;KEYCODE_K&quot;</span><br><span class="line">40 -&gt;  &quot;KEYCODE_L&quot;</span><br><span class="line">41 -&gt;  &quot;KEYCODE_M&quot;</span><br><span class="line">42 -&gt;  &quot;KEYCODE_N&quot;</span><br><span class="line">43 -&gt;  &quot;KEYCODE_O&quot;</span><br><span class="line">44 -&gt;  &quot;KEYCODE_P&quot;</span><br><span class="line">45 -&gt;  &quot;KEYCODE_Q&quot;</span><br><span class="line">46 -&gt;  &quot;KEYCODE_R&quot;</span><br><span class="line">47 -&gt;  &quot;KEYCODE_S&quot;</span><br><span class="line">48 -&gt;  &quot;KEYCODE_T&quot;</span><br><span class="line">49 -&gt;  &quot;KEYCODE_U&quot;</span><br><span class="line">50 -&gt;  &quot;KEYCODE_V&quot;</span><br><span class="line">51 -&gt;  &quot;KEYCODE_W&quot;</span><br><span class="line">52 -&gt;  &quot;KEYCODE_X&quot;</span><br><span class="line">53 -&gt;  &quot;KEYCODE_Y&quot;</span><br><span class="line">54 -&gt;  &quot;KEYCODE_Z&quot;</span><br><span class="line">55 -&gt;  &quot;KEYCODE_COMMA&quot;</span><br><span class="line">56 -&gt;  &quot;KEYCODE_PERIOD&quot;</span><br><span class="line">57 -&gt;  &quot;KEYCODE_ALT_LEFT&quot;</span><br><span class="line">58 -&gt;  &quot;KEYCODE_ALT_RIGHT&quot;</span><br><span class="line">59 -&gt;  &quot;KEYCODE_SHIFT_LEFT&quot;</span><br><span class="line">60 -&gt;  &quot;KEYCODE_SHIFT_RIGHT&quot;</span><br><span class="line">61 -&gt;  &quot;KEYCODE_TAB&quot;</span><br><span class="line">62 -&gt;  &quot;KEYCODE_SPACE&quot;</span><br><span class="line">63 -&gt;  &quot;KEYCODE_SYM&quot;</span><br><span class="line">64 -&gt;  &quot;KEYCODE_EXPLORER&quot;</span><br><span class="line">65 -&gt;  &quot;KEYCODE_ENVELOPE&quot;</span><br><span class="line">66 -&gt;  &quot;KEYCODE_ENTER&quot;</span><br><span class="line">67 -&gt;  &quot;KEYCODE_DEL&quot;</span><br><span class="line">68 -&gt;  &quot;KEYCODE_GRAVE&quot;</span><br><span class="line">69 -&gt;  &quot;KEYCODE_MINUS&quot;</span><br><span class="line">70 -&gt;  &quot;KEYCODE_EQUALS&quot;</span><br><span class="line">71 -&gt;  &quot;KEYCODE_LEFT_BRACKET&quot;</span><br><span class="line">72 -&gt;  &quot;KEYCODE_RIGHT_BRACKET&quot;</span><br><span class="line">73 -&gt;  &quot;KEYCODE_BACKSLASH&quot;</span><br><span class="line">74 -&gt;  &quot;KEYCODE_SEMICOLON&quot;</span><br><span class="line">75 -&gt;  &quot;KEYCODE_APOSTROPHE&quot;</span><br><span class="line">76 -&gt;  &quot;KEYCODE_SLASH&quot;</span><br><span class="line">77 -&gt;  &quot;KEYCODE_AT&quot;</span><br><span class="line">78 -&gt;  &quot;KEYCODE_NUM&quot;</span><br><span class="line">79 -&gt;  &quot;KEYCODE_HEADSETHOOK&quot;</span><br><span class="line">80 -&gt;  &quot;KEYCODE_FOCUS&quot;</span><br><span class="line">81 -&gt;  &quot;KEYCODE_PLUS&quot;</span><br><span class="line">82 -&gt;  &quot;KEYCODE_MENU&quot;</span><br><span class="line">83 -&gt;  &quot;KEYCODE_NOTIFICATION&quot;</span><br><span class="line">84 -&gt;  &quot;KEYCODE_SEARCH&quot;</span><br><span class="line">85 -&gt;  &quot;TAG_LAST_KEYCODE&quot;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> adb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Check Network Status</title>
      <link href="/posts/27f80ae0/"/>
      <url>/posts/27f80ae0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.net.ConnectivityManager;</span><br><span class="line"><span class="keyword">import</span> android.net.NetworkInfo;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isNetworkConnected</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ConnectivityManager connManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);</span><br><span class="line">    <span class="keyword">if</span> (connManager != <span class="keyword">null</span>) &#123;</span><br><span class="line">        NetworkInfo mNetworkInfo = connManager.getActiveNetworkInfo();</span><br><span class="line">        <span class="keyword">if</span> (mNetworkInfo != <span class="keyword">null</span> &amp;&amp; mNetworkInfo.isConnected()) &#123;</span><br><span class="line">            <span class="keyword">return</span> mNetworkInfo.isAvailable();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Display base64 image on ImageView</title>
      <link href="/posts/81c75dee/"/>
      <url>/posts/81c75dee/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.util.Base64;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"></span><br><span class="line">ImageView img = findViewById(R.id.img);</span><br><span class="line"><span class="keyword">byte</span>[] bytes = Base64.decode(base64_img, Base64.DEFAULT);</span><br><span class="line">img.setImageBitmap(BitmapFactory.decodeByteArray(bytes, <span class="number">0</span>, bytes.length));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>get top activity</title>
      <link href="/posts/4089bb19/"/>
      <url>/posts/4089bb19/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.ActivityManager;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Class <span class="title">getTopActivity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ActivityManager manager = (ActivityManager) getSystemService(ACTIVITY_SERVICE);</span><br><span class="line">    String classname = manager.getRunningTasks(<span class="number">1</span>).get(<span class="number">0</span>).topActivity.getClassName();</span><br><span class="line">    Class cls = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        cls = Class.forName(classname);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cls;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>連點</title>
      <link href="/posts/d804cf8f/"/>
      <url>/posts/d804cf8f/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//要點幾下array就設多大</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">long</span>[] mHits = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">System.arraycopy(mHits, <span class="number">1</span>, mHits, <span class="number">0</span>, mHits.length - <span class="number">1</span>);</span><br><span class="line">mHits[mHits.length - <span class="number">1</span>] = SystemClock.uptimeMillis();</span><br><span class="line"><span class="keyword">if</span> (mHits[<span class="number">0</span>] &gt; SystemClock.uptimeMillis() - <span class="number">2000</span>) &#123;</span><br><span class="line">    <span class="comment">//do something...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>adb commands</title>
      <link href="/posts/2da5a158/"/>
      <url>/posts/2da5a158/</url>
      
        <content type="html"><![CDATA[<p><a href="https://developer.android.com/studio/command-line/adb" target="_blank" rel="noopener">https://developer.android.com/studio/command-line/adb</a></p><h5 id="adb"><a href="#adb" class="headerlink" title="adb"></a>adb</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">adb kill-server                         // 關掉 adb 伺服器</span><br><span class="line">adb start-server                        // 啟動 adb 伺服器</span><br><span class="line"></span><br><span class="line">adb reboot                              // 重開機</span><br><span class="line">adb reboot bootloader                   // 重開機後，進入bootloader mode</span><br><span class="line">adb root                                // 以root權限登入</span><br><span class="line">adb remount                             // 將系統(/system)重新掛載成 R/W 模式</span><br><span class="line">adb devices                             // 查看目前連線的裝置</span><br><span class="line">adb shell                               // shell登入</span><br><span class="line">adb -s devicename shell                 // 指定要連結的device</span><br><span class="line"></span><br><span class="line">adb push local_source /path/to/phone    // 將檔案複製到android裝置</span><br><span class="line">adb pull /path/from/phone local_source  // 將檔案從android裝置上複製回本機端</span><br><span class="line">adb install test.apk</span><br><span class="line">adb install -r test.apk                 // 保留資料，重新安裝test.apk</span><br><span class="line">adb uninstall package.name.xxx          // 移除程式</span><br><span class="line">adb uninstall -k package.name.xxx       // 移除程式時，保留資料</span><br><span class="line">adb shell getprop                       // 讀取android中build.prop的值</span><br><span class="line">adb shell setprop                       // 修改系统属性</span><br><span class="line">adb shell getevent /dev/input/event0</span><br><span class="line">adb shell setevent /dev/input/event0</span><br><span class="line">adb shell dmesg                         // 印出Linux kernel log</span><br><span class="line">adb shell cat /proc/kmsg                // 持續印出 kernel log</span><br><span class="line">adb shell dumpsys                       // 顯示系統資訊</span><br><span class="line">adb shell dumpsys SurfaceFlinger        /* battery: 列出基本的電池資訊</span><br><span class="line">                                           batteryinfo: 各種功能使用 power 的狀況，同About Phone 裡面的電池使用狀況。</span><br><span class="line">                                           SurfaceFlinger: 系統的 Surface 使用情況</span><br><span class="line">                                           power: 列出 Power Manager 的參數，如 wakelock 時間等</span><br><span class="line">                                           alarm: 列出目前有註冊 alarm 者</span><br><span class="line">                                        */</span><br></pre></td></tr></table></figure><h5 id="am"><a href="#am" class="headerlink" title="am"></a>am</h5><ul><li>am broadcast<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[-a &lt;ACTION&gt;]</span><br><span class="line">[-d &lt;DATA_URI&gt;]</span><br><span class="line">[-t &lt;MIME_TYPE&gt;] </span><br><span class="line">[-c &lt;CATEGORY&gt; [-c &lt;CATEGORY&gt;] ...] </span><br><span class="line">[-e|--es &lt;EXTRA_KEY&gt; &lt;EXTRA_STRING_VALUE&gt; ...] </span><br><span class="line">[--ez &lt;EXTRA_KEY&gt; &lt;EXTRA_BOOLEAN_VALUE&gt; ...] </span><br><span class="line">[-e|--ei &lt;EXTRA_KEY&gt; &lt;EXTRA_INT_VALUE&gt; ...] </span><br><span class="line">[-n &lt;COMPONENT&gt;]</span><br><span class="line">[-f &lt;FLAGS&gt;] [&lt;URI&gt;]</span><br><span class="line"></span><br><span class="line">$ adb shell am broadcast -a android.intent.action.BOOT_COMPLETED</span><br><span class="line">$ adb shell am broadcast -a android.intent.action.BOOT_COMPLETED -n com.example/.MainActivity</span><br><span class="line">$ adb shell am broadcast -a android.intent.action.BOOT_COMPLETED -c android.intent.category.DEFAULT -n com.example/.MainActivity</span><br><span class="line">$ adb shell am broadcast -a intent.action.UPDATE_APK --es filePath &quot;/sdcard/Download/simple.apk&quot; --ez keep true</span><br></pre></td></tr></table></figure></li><li>am start<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># StartActivity</span><br><span class="line">$ adb shell am start -n com.mtreat.faceid/.server.ServerMainActivity</span><br><span class="line"># 啟動瀏覽器，打開目標網址</span><br><span class="line">$ am start -a android.intent.action.VIEW -d http://www.google.com</span><br><span class="line"># launch Settings</span><br><span class="line">$ am start -a android.intent.action.MAIN -n com.android.settings/.Settings</span><br></pre></td></tr></table></figure></li><li>StartService<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell am startservice -n com.foxconn.monitorservice/.service.MonitorServie</span><br><span class="line">$ adb shell am startforegroundservice -n com.foxconn.monitorservice/.service.MonitorServie</span><br><span class="line">$ adb shell am stopservice -n com.foxconn.monitorservice/.service.MonitorServie</span><br></pre></td></tr></table></figure></li></ul><h5 id="pm"><a href="#pm" class="headerlink" title="pm"></a>pm</h5><ul><li>pm list packages<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">prints all packages, optionally only those whose package name contains the text in FILTER. Options:</span><br><span class="line">-f: see their associated file.</span><br><span class="line">-d: filter to only show disbled packages.</span><br><span class="line">-e: filter to only show enabled packages.</span><br><span class="line">-s: filter to only show system packages.</span><br><span class="line">-3: filter to only show third party packages.</span><br><span class="line">-i: see the installer for the packages.</span><br><span class="line">-u: also include uninstalled packages.</span><br><span class="line"></span><br><span class="line">$ adb shell pm list packages com.google</span><br><span class="line">package:com.google.android.youtube</span><br><span class="line">package:com.google.android.ext.services</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> adb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Access</title>
      <link href="/posts/cc7d2dc0/"/>
      <url>/posts/cc7d2dc0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">readFromFile</span><span class="params">(String path, String fileName)</span> </span>&#123;</span><br><span class="line">    StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    String line;</span><br><span class="line">    BufferedReader in = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="keyword">new</span> File(path, fileName)));</span><br><span class="line">        <span class="keyword">while</span> ((line = in.readLine()) != <span class="keyword">null</span>) stringBuilder.append(line);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">        Log.d(TAG, e.toString());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        Log.d(TAG, e.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> deletedAll = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (file != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">            String[] children = file.list();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; children.length; i++) &#123;</span><br><span class="line">                deletedAll = deleteFile(<span class="keyword">new</span> File(file, children[i])) &amp;&amp; deletedAll;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            deletedAll = file.delete();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> deletedAll;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RadioGroup</title>
      <link href="/posts/cc7d2dc0/"/>
      <url>/posts/cc7d2dc0/</url>
      
        <content type="html"><![CDATA[<ul><li><p>靜態宣告</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioGroup</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/rgroup"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/warwick"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"warwick"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/kyle"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"kyle"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/twitch"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"twitch"</span> /&gt;</span>            </span><br><span class="line">    <span class="tag">&lt;/<span class="name">RadioGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> RadioButton warwick;</span><br><span class="line"><span class="keyword">private</span> RadioButton kyle;</span><br><span class="line"><span class="keyword">private</span> RadioButton twitch;</span><br><span class="line"><span class="keyword">private</span> RadioGroup rgroup;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    </span><br><span class="line">    warwick = (RadioButton) findViewById(R.id.warwick);</span><br><span class="line">    kyle = (RadioButton) findViewById(R.id.kyle);</span><br><span class="line">    twitch = (RadioButton) findViewById(R.id.twitch);</span><br><span class="line">    rgroup = (RadioGroup) findViewById(R.id.rgroup);</span><br><span class="line">    rgroup.setOnCheckedChangeListener(listener);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> RadioGroup.OnCheckedChangeListener listener = <span class="keyword">new</span> RadioGroup.OnCheckedChangeListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(RadioGroup group, <span class="keyword">int</span> checkedId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">int</span> p = group.indexOfChild((RadioButton) findViewById(checkedId));</span><br><span class="line">        <span class="keyword">int</span> count = group.getChildCount();</span><br><span class="line">        <span class="keyword">switch</span> (checkedId) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.warwick:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.kyle:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.twitch:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>動態宣告</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> checkedRadioButtonId = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Button confirmBtn = findViewById(R.id.confirmBtn);</span><br><span class="line">    <span class="keyword">final</span> RadioGroup rgroup = findViewById(R.id.rgroup);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> String[] servers = mApp.getSharedPreference().getServerList().split(<span class="string">","</span>);</span><br><span class="line">    <span class="keyword">final</span> String[] serverValues = mApp.getSharedPreference().getServerListValue().split(<span class="string">","</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> RadioButton[] rb = <span class="keyword">new</span> RadioButton[servers.length];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; servers.length; i++) &#123;</span><br><span class="line">        rb[i]  = <span class="keyword">new</span> RadioButton(<span class="keyword">this</span>);</span><br><span class="line">        String text = serverValues[i] + <span class="string">"("</span> + servers[i] + <span class="string">")"</span>;</span><br><span class="line">        rb[i].setText(text);</span><br><span class="line">        rb[i].setTextSize(<span class="number">22</span>);</span><br><span class="line">        rb[i].setId(i);</span><br><span class="line"></span><br><span class="line">        RadioGroup.LayoutParams params = <span class="keyword">new</span> RadioGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class="line">        params.setMargins(<span class="number">50</span>, <span class="number">50</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        rb[i].setLayoutParams(params);</span><br><span class="line">        rgroup.addView(rb[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rgroup.setOnCheckedChangeListener(<span class="keyword">new</span> RadioGroup.OnCheckedChangeListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(RadioGroup group, <span class="keyword">int</span> checkedId)</span> </span>&#123;</span><br><span class="line">            checkedRadioButtonId = rgroup.getCheckedRadioButtonId();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sign apk</title>
      <link href="/posts/765879ed/"/>
      <url>/posts/765879ed/</url>
      
        <content type="html"><![CDATA[<p>If an apk is set as android:sharedUserId=”android.uid.system” in the AndroidManifest.xml, it must be signed with platform key and then it is usable.</p><ol><li>Get signapk.jar in //prebuilts/sdk/tools/lib/</li><li>test-key: in //build/target/product/security/</li><li>release-key: in //vander/nvidia/security/cardhu/<br>The key should have password according to your project</li><li>zipalign can align apk to obtain better efficiency<br><code>zipalign.exe -f 4 input.apk output.apk</code></li><li>Use the following command to sign an apk under command line<br><code>java -jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> apk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webview Notes</title>
      <link href="/posts/a7cde42/"/>
      <url>/posts/a7cde42/</url>
      
        <content type="html"><![CDATA[<ul><li>load static html files<br>Create folder “assets” and put your html file in the folder<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mWebView.loadUrl(<span class="string">"file:///android_asset/index.html"</span>);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
